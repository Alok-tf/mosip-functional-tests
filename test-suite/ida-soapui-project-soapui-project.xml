<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="3b3106bb-e24b-49ea-a229-d8383b3d45fc" activeEnvironment="Default" name="ida-soapui-project" resourceRoot="${projectDir}" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" encryptionMode="Not encrypted" updated="2.5.0 2018-09-14T14:45:07Z" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:RestService" id="a1c28675-144e-4bf5-9ebd-563490bb1f2c" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://13.71.81.26:8081" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart=""/>
    <con:endpoints>
      <con:endpoint>http://13.71.81.26:8081</con:endpoint>
    </con:endpoints>
    <con:resource name="otp" path="/identity/otp" id="61502a1d-5ed3-462d-a799-de3dc82aa3dd">
      <con:settings/>
      <con:parameters/>
      <con:method name="Method 1" id="c7e78ba2-9760-4ad7-9f2b-afe8c212fe72" method="POST">
        <con:settings/>
        <con:parameters/>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>text/html;charset=utf-8</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:element>html</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>404</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json;charset=UTF-8</con:mediaType>
          <con:status>500 404</con:status>
          <con:params/>
          <con:element xmlns:otp="http://13.71.81.26/otp">otp:Fault</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json;charset=ISO-8859-1</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:element xmlns:otp="http://13.71.81.26/otp">otp:Fault</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json;charset=UTF-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:otp="http://13.71.81.26/otp">otp:Response</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json;charset=ISO-8859-1</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:auth="http://13.71.81.26/identity/auth">auth:Response</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Request 1" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://172.23.36.116:8081</con:endpoint>
          <con:request>{
  "id": "426789089018",
  "idType": "D",
  "msaLicenseKey": "ASHISH1234",
  "muaCode": "RASTOGI123",
  "reqTime": "2018-11-05T16:00:56.398Z",
  "txnID": "ASHISH1233",
  "ver": "1.0"
}</con:request>
          <con:originalUri>http://13.71.81.26/otp</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="auth" path="/identity/auth" id="92cba3de-3a4e-4b9f-b88f-7d8ccdfe482c">
      <con:settings/>
      <con:parameters/>
      <con:method name="Method 1" id="636b0629-de42-40ac-95ae-5a8660d253de" method="POST">
        <con:settings/>
        <con:parameters/>
        <con:representation type="FAULT">
          <con:mediaType>application/json;charset=ISO-8859-1</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:element xmlns:auth="http://13.71.81.26/identity/auth">auth:Fault</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json;charset=ISO-8859-1</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:auth="http://13.71.81.26/identity/auth">auth:Response</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json;charset=UTF-8</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:element xmlns:auth="http://13.71.81.26/identity/auth">auth:Fault</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Request 1" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://13.71.81.26:8081</con:endpoint>
          <con:request/>
          <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
          <con:credentials>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:testSuite id="d2ccb4bb-2424-4d4f-951f-b6766bee382a" name="otpGenerator">
    <con:description>TestSuite generated for REST Service [http://13.71.81.26:8081]</con:description>
    <con:settings>
      <con:setting id="IncludeOverview">true</con:setting>
      <con:setting id="IncludeResults">true</con:setting>
      <con:setting id="FlowLayout">false</con:setting>
      <con:setting id="ErrorDetails">true</con:setting>
      <con:setting id="IncludeCoverage">true</con:setting>
      <con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting>
      <con:setting id="GeneratableJUnitReport@Folder"/>
    </con:settings>
    <con:savedRecentRuns>1</con:savedRecentRuns>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="b0011af8-64f8-4a03-b526-b0a639de35ca" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="init" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="groovy" name="Groovy Script" id="d752e069-67e6-48cb-a7b0-442b04e56148">
        <con:settings/>
        <con:config>
          <script>def dbresponse = context.expand( '${JDBC_Request#ResponseAsXml}' )
 def uid = context.expand('${JDBC_Request#ResponseAsXml#//Results/ResultSet//Row//UIN.UID}')
 def vid = context.expand('${JDBC_Request#ResponseAsXml#//Results/ResultSet//Row//VID.VID}')
testRunner.testCase.testSuite.setPropertyValue( "posvid", vid )
testRunner.testCase.testSuite.setPropertyValue( "posuid", uid )
log.info(uid)
import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
def lastDate = Instant.now();//current time
def timeGreaterThan20=Instant.now().minus(Duration.ofSeconds(30*60));//time20minutebefore
def timeEqualsTo20Min=Instant.now().minus(Duration.ofSeconds(20*60));//timeEqualsTo20Min
def timeStampLessThan20=Instant.now().minus(Duration.ofSeconds(10*60));
//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.testSuite.setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.testSuite.setPropertyValue("timeGreaterThan20",timeGreaterThan20.toString());
testRunner.testCase.testSuite.setPropertyValue("timeEqualsTo20Min",timeEqualsTo20Min.toString());
testRunner.testCase.testSuite.setPropertyValue("timeStampLessThan20",timeStampLessThan20.toString());
//log.info(lastDate);
//log.info(time20minutebefore);
//log.info(timeEqualsTo20Min);
//Generating 10 digit msaLicenseKey
 long msaLicenseKey = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L; 
String.format("%10d", msaLicenseKey) 
testRunner.testCase.testSuite.setPropertyValue("posmsaLicenseKey",msaLicenseKey.toString())

//Generating 10 digit muaCode
 long muaCode1 = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L; 

String.format("%10d", muaCode1) 
log.info(muaCode1)
testRunner.testCase.testSuite.setPropertyValue("posmuaCode",muaCode1.toString())

long txnID = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L; 
String.format("%10d", txnID) 
testRunner.testCase.testSuite.setPropertyValue("postxnID",msaLicenseKey.toString())


//Reading json from source file
log.info(System.getProperty("user.dir"));
def inputFile = new File(System.getProperty("user.dir")+"\\InputData.json");

def InputJSON = new JsonSlurper().parseText(inputFile.text);
log.info(InputJSON[0].pos.muaCode)
	testRunner.testCase.testSuite.setPropertyValue("posid",InputJSON[0].pos.id);
	testRunner.testCase.testSuite.setPropertyValue("negid",InputJSON[0].neg.id);
	testRunner.testCase.testSuite.setPropertyValue("posvid",InputJSON[0].pos.vid);
	testRunner.testCase.testSuite.setPropertyValue("negvid",InputJSON[0].neg.vid);
	log.info(InputJSON[0].pos.vid)
	testRunner.testCase.testSuite.setPropertyValue("posidType",InputJSON[0].pos.idType);
	testRunner.testCase.testSuite.setPropertyValue("negidType",InputJSON[0].neg.idType);
	testRunner.testCase.testSuite.setPropertyValue("posvidType",InputJSON[0].pos.vidType);
	testRunner.testCase.testSuite.setPropertyValue("negvidType",InputJSON[0].neg.vidType);
testRunner.testCase.testSuite.setPropertyValue( "posvid", vid )
testRunner.testCase.testSuite.setPropertyValue( "posuid", uid )
log.info(uid)

	//testRunner.testCase.testSuite.setPropertyValue("posmsaLicenseKey",InputJSON[0].pos.msaLicenseKey);
	testRunner.testCase.testSuite.setPropertyValue("negmsaLicenseKey",InputJSON[0].neg.msaLicenseKey);
//	testRunner.testCase.testSuite.setPropertyValue("posmuaCode",InputJSON[0].pos.muaCode);
	testRunner.testCase.testSuite.setPropertyValue("negmuaCode",InputJSON[0].neg.muaCode);
	//testRunner.testCase.testSuite.setPropertyValue("postxnID",InputJSON[0].pos.txnID);
	testRunner.testCase.testSuite.setPropertyValue("negtxnID",InputJSON[0].neg.txnID);
	testRunner.testCase.testSuite.setPropertyValue("posver",InputJSON[0].pos.ver);
	testRunner.testCase.testSuite.setPropertyValue("negver",InputJSON[0].neg.ver);</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Request" id="ceec0a39-2bd5-4f6e-b046-02c1e334d23d" disabled="true">
        <con:settings/>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://13.71.81.26:9001/postgres?user=postgres&amp;password=admin</con:connectionString>
          <con:query>SELECT v.*, u.id as uid,v.id as vid FROM ida.uin as u, ida.indv_demographic as d,ida.vid as v WHERE  u.uin_ref_id = d.uin_ref_id and d.uin_ref_id=v.uin_ref_id</con:query>
          <con:assertion type="Simple Contains" id="543f8153-831e-40ab-93ef-dcbc443f6cba" name="UID_Mapping">
            <con:configuration>
              <token>${#TestSuite#posuid}</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" id="6f951463-7069-4926-a70b-e0465e8ac5db" name="VID_Mapping">
            <con:configuration>
              <token>${#TestSuite#posvid}</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-06T05:56:37.515Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="38928945-26c4-40b1-aa8c-b684ce8baf8e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_smokeTest" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="Trigger_OTP" id="1d188378-5a93-4466-b8c8-9e971f9bf7b0">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Trigger_OTP" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#endpoint}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posid}",
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>Y</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['errorCode']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="txnId" disabled="true">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Existence Match" id="4ca53e6c-b26c-4b3d-86d0-c8d7794ca02a" name="ResponseTime" disabled="true">
              <con:configuration>
                <path>$['responseTime']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="MaskedEmail">
              <con:configuration>
                <path>$['maskedEmail']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="2bcd9d9d-728f-4471-8a1d-8bcd77b13c7a" name="MaskedMobile">
              <con:configuration>
                <path>$['maskedMobile']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="cb41e716-b983-411b-b9e7-dc08ce48dba5" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedMobile[1]</con:xpath>
                  <con:element>maskedMobile</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedEmail[1]</con:xpath>
                  <con:element>maskedEmail</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://13.71.81.26/otp">
   <status>Y</status>
   <errorCode null="true"/>
   <txnID>ASHISH1233</txnID>
   <responseTime>2018-11-06T09:59:22.994+0000</responseTime>
   <maskedMobile/>
   <maskedEmail/>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="Script Assertion">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>id</con:name>
          <con:value>"426789089018"</con:value>
        </con:property>
        <con:property>
          <con:name>idType</con:name>
          <con:value>"D"</con:value>
        </con:property>
        <con:property>
          <con:name>msaLicenseKey</con:name>
          <con:value>"ASHISH1234"</con:value>
        </con:property>
        <con:property>
          <con:name>muaCode</con:name>
          <con:value>"ASHISH1111"</con:value>
        </con:property>
        <con:property>
          <con:name>txnID</con:name>
          <con:value>"ASHISH1233"</con:value>
        </con:property>
        <con:property>
          <con:name>ver</con:name>
          <con:value>"1.0"</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="e90af1b3-4d25-40de-8d66-687fa8dda6b3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TriggerOTP_Valid_VId" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="Trigger_OTP_VIDD" id="1c1f8b0f-7fe7-481d-9af8-ec61cfc322ba">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Trigger_OTP_VIDD" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posvid}",
   "idType" : "${#TestSuite#posvidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>Y</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['errorCode']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="txnId">
              <con:configuration>
                <path>txnID</path>
                <content>${Trigger_OTP_VIDD#RawRequest#$['txnID']}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Existence Match" id="4ca53e6c-b26c-4b3d-86d0-c8d7794ca02a" name="ResponseTime">
              <con:configuration>
                <path>$['responseTime']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="MaskedEmail">
              <con:configuration>
                <path>$['maskedEmail']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="2bcd9d9d-728f-4471-8a1d-8bcd77b13c7a" name="MaskedMobile">
              <con:configuration>
                <path>$['maskedMobile']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="cb41e716-b983-411b-b9e7-dc08ce48dba5" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedMobile[1]</con:xpath>
                  <con:element>maskedMobile</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedEmail[1]</con:xpath>
                  <con:element>maskedEmail</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://13.71.81.26/otp">
   <status>Y</status>
   <errorCode null="true"/>
   <txnID>ASHISH1233</txnID>
   <responseTime>2018-11-06T09:59:22.994+0000</responseTime>
   <maskedMobile/>
   <maskedEmail/>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="Script Assertion">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSSZ";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.responseTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="0c896b79-e402-4128-82c0-7d569fee792d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TimeStamp_Of_OTP_EqualTo_20_Min_UID" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="Trigger_OTP_VIDD" id="58aa4917-8dc6-4f9c-9ac9-5d7d3d4c6605">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Trigger_OTP_VIDD" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
    "id": ${#TestSuite#posvid},
   "idType" : "${#TestSuite#posvidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
     "reqTime": "${#TestSuite#timeEqualsTo20Min}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>Y</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['errorCode']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="txnId">
              <con:configuration>
                <path>txnID</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Existence Match" id="4ca53e6c-b26c-4b3d-86d0-c8d7794ca02a" name="ResponseTime">
              <con:configuration>
                <path>$['responseTime']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="MaskedEmail">
              <con:configuration>
                <path>$['maskedEmail']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="2bcd9d9d-728f-4471-8a1d-8bcd77b13c7a" name="MaskedMobile">
              <con:configuration>
                <path>$['maskedMobile']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="cb41e716-b983-411b-b9e7-dc08ce48dba5" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedMobile[1]</con:xpath>
                  <con:element>maskedMobile</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedEmail[1]</con:xpath>
                  <con:element>maskedEmail</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://13.71.81.26/otp">
   <status>Y</status>
   <errorCode null="true"/>
   <txnID>ASHISH1233</txnID>
   <responseTime>2018-11-06T09:59:22.994+0000</responseTime>
   <maskedMobile/>
   <maskedEmail/>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="Script Assertion">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.responseTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="291e7411-2a94-4c54-a484-5cd3df4c38dd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TimeStamp_Of_OTP_Olderthan_20_Min_UID" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="TimeStamp_Older_Than_20_Min" id="eefaf169-d65d-4ad0-91ae-b10cc96ee0a4">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="TimeStamp_Older_Than_20_Min" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp20minutebefore}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-OTA-002</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Request received at MOSIP is 20 min post the initiation at TSP</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="dateFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			    assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="8c1c32ca-8b03-451d-addf-18f1438338c1" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-OTA-002</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Request received at MOSIP is 20 min post the initiation at TSP</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-OTA-002</errorCode>
         <errorMessage>Request received at MOSIP is 20 min post the initiation at TSP</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T12:12:59.963Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="0ee7ddda-b339-4989-b3a4-7d84faf1ecd1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_Without_id_Parameters" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="Without_id_Parameter" id="fd09adca-2596-42fa-864f-71e2fbe72197">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Without_id_Parameter" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id":"" ,
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-MLC-002</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Invalid UIN</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="info" disabled="true">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="afca74b5-81cf-4a52-a2ca-26561747e234" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-MLC-002</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Invalid UIN</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-MLC-002</errorCode>
         <errorMessage>Invalid UIN</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T12:27:42.563Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="6690798b-c845-4a92-9f13-fbdb3dd1a42d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_Without_ver" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="OTP_ Without_ver" id="8283e6f3-6b5a-4021-8954-51f95466fc62">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="OTP_ Without_ver" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id":"${#TestSuite#posid}" ,
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : ""
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>Digits</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>numeric value out of bounds (&lt;1 digits>.&lt;1 digits> expected)</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSSZ";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.responseTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="ca66fede-62da-4c2c-a71e-db6e313795bc" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Digits</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>numeric value out of bounds (&lt;1 digits>.&lt;1 digits> expected)</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>Digits</errorCode>
         <errorMessage>numeric value out of bounds (&lt;1 digits>.&lt;1 digits> expected)</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T12:45:20.281Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="4142cf85-73d5-4ff5-9ab1-a019c060e45a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_Without_reqTime" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="OTP_ Without_reqTime" id="ddc41f73-6ee9-40f1-b4c0-bfe38204714b">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="OTP_ Without_reqTime" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-DTV-IDV-004</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Unknown error occured</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="5693ee6d-0b0e-4933-b26b-484e2e69bbd1" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-DTV-IDV-004</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Unknown error occured</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-DTV-IDV-004</errorCode>
         <errorMessage>Unknown error occured</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T12:49:21.245Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="3ed0cc35-24dc-42d6-afdf-90978196952d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_Without_txnID" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="OTP_ Without_txnID" id="af5bfae5-5752-4319-8213-129d20cb37d4">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="OTP_ Without_txnID" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>Pattern</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>must match "^[A-Z0-9]{10}"</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="b9efe227-0dce-49e8-8cbc-086cc069df23" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Pattern</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>must match "^[A-Z0-9]{10}"</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>Pattern</errorCode>
         <errorMessage>must match "^[A-Z0-9]{10}"</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T13:28:33.754Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="6bba71af-b345-43f9-b728-d4317669d58e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_FLOOD" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="groovy" name="Groovy Script" id="442570e0-f3ef-4578-b84b-ff1ded4c3e96" disabled="true">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.support.GroovyUtils;
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

if( context.loopIndex == null )
context.loopIndex = 3
for(int i=0;i&lt;context.loopIndex;i++){
def tStep = testRunner.testCase.testSteps["OTP_Request"]
log.info(tStep)
tStep.run(testRunner, context)
def ResponseMessage = testRunner.testCase.testSteps["OTP_Request"].testRequest.response.contentAsString
//def addReq= testRunner.testCase.testSuite.testCases["Test_Generate_OTP"].testSteps["GenOTP"].getPropertyValue("Request")
//log.info("Request" + addReq)
log.info("Response" + ResponseMessage) 	
//log.info(resonseBody);
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Trigger_OTP1" id="d1aae744-39c5-485c-83ec-04f41ce49cfd">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Trigger_OTP1" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>Y</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['errorCode']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>${Trigger_OTP1#RawRequest#$['txnID']}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Existence Match" id="4ca53e6c-b26c-4b3d-86d0-c8d7794ca02a" name="ResponseTime">
              <con:configuration>
                <path>$['responseTime']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="MaskedEmail">
              <con:configuration>
                <path>$['maskedEmail']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="2bcd9d9d-728f-4471-8a1d-8bcd77b13c7a" name="MaskedMobile">
              <con:configuration>
                <path>$['maskedMobile']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="cb41e716-b983-411b-b9e7-dc08ce48dba5" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedMobile[1]</con:xpath>
                  <con:element>maskedMobile</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedEmail[1]</con:xpath>
                  <con:element>maskedEmail</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://13.71.81.26/otp">
   <status>Y</status>
   <errorCode null="true"/>
   <txnID>ASHISH1233</txnID>
   <responseTime>2018-11-06T09:59:22.994+0000</responseTime>
   <maskedMobile/>
   <maskedEmail/>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1310</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="Script Assertion">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSSZ";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.responseTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="3e82ab11-6aa3-4c1f-bdbe-5d04f9527cc8">
              <con:configuration/>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Trigger_OTP2" id="0945621f-d2f9-4511-8c55-34a8f98a27c7">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Trigger_OTP2" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>Y</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['errorCode']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>${Trigger_OTP2#RawRequest#$['txnID']}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Existence Match" id="4ca53e6c-b26c-4b3d-86d0-c8d7794ca02a" name="ResponseTime">
              <con:configuration>
                <path>$['responseTime']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="MaskedEmail">
              <con:configuration>
                <path>$['maskedEmail']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="2bcd9d9d-728f-4471-8a1d-8bcd77b13c7a" name="MaskedMobile">
              <con:configuration>
                <path>$['maskedMobile']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="cb41e716-b983-411b-b9e7-dc08ce48dba5" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedMobile[1]</con:xpath>
                  <con:element>maskedMobile</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedEmail[1]</con:xpath>
                  <con:element>maskedEmail</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://13.71.81.26/otp">
   <status>Y</status>
   <errorCode null="true"/>
   <txnID>ASHISH1233</txnID>
   <responseTime>2018-11-06T09:59:22.994+0000</responseTime>
   <maskedMobile/>
   <maskedEmail/>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="Script Assertion">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSSZ";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.responseTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="3e82ab11-6aa3-4c1f-bdbe-5d04f9527cc8">
              <con:configuration/>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Trigger_OTP3" id="e25e1e44-90d3-4bc9-b81e-3abf124d5896">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Trigger_OTP3" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>Y</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['errorCode']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>${Trigger_OTP3#RawRequest#$['txnID']}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Existence Match" id="4ca53e6c-b26c-4b3d-86d0-c8d7794ca02a" name="ResponseTime">
              <con:configuration>
                <path>$['responseTime']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="MaskedEmail">
              <con:configuration>
                <path>$['maskedEmail']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="2bcd9d9d-728f-4471-8a1d-8bcd77b13c7a" name="MaskedMobile">
              <con:configuration>
                <path>$['maskedMobile']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="cb41e716-b983-411b-b9e7-dc08ce48dba5" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedMobile[1]</con:xpath>
                  <con:element>maskedMobile</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedEmail[1]</con:xpath>
                  <con:element>maskedEmail</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://13.71.81.26/otp">
   <status>Y</status>
   <errorCode null="true"/>
   <txnID>ASHISH1233</txnID>
   <responseTime>2018-11-06T09:59:22.994+0000</responseTime>
   <maskedMobile/>
   <maskedEmail/>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="Script Assertion">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSSZ";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.responseTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="3e82ab11-6aa3-4c1f-bdbe-5d04f9527cc8">
              <con:configuration/>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Trigger_OTP4_FLOOD" id="e2778650-ace5-4d9c-9c80-f274ef87eb39">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Trigger_OTP4_FLOOD" id="8ddae355-389a-42e3-8dc7-5c6a9964f261" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://172.23.29.101/identity/otp</con:originalUri>
            <con:assertion type="Invalid HTTP Status Codes" id="87ea55d2-3b84-45cb-ae37-52379d191120" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="e3761cca-e9ec-44b5-995c-64ae47339efd" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="11ac3133-e2e5-489b-a391-e9ae5c62d670" name="JsonPath Match">
              <con:configuration>
                <path>$['status']</path>
                <content>false</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="71b0bfc1-a073-4b71-a297-d3b1020e3654" name="JsonPath Match 2">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-OTA-003</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="17795973-7471-4e71-9bf1-266a0baa1f25" name="JsonPath Match 3">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Innumerous OTP requests received</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="08ea2c6e-d760-4e3c-afaa-47b3c689f06a" name="Script Assertion">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>e2778650-ace5-4d9c-9c80-f274ef87eb39</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e25e1e44-90d3-4bc9-b81e-3abf124d5896</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase id="bd879fff-759c-4d1d-ac3d-d30d586214f9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_With_Invalid_id_Parameter" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="invalidUID" id="f3210b7a-5906-4a46-9310-bf93945f7a3c">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="invalidUID" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id":"${#TestSuite#negid}" ,
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-MLC-002</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Invalid UIN</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="afca74b5-81cf-4a52-a2ca-26561747e234" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-MLC-002</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Invalid UIN</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-MLC-002</errorCode>
         <errorMessage>Invalid UIN</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T12:27:42.563Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="35513750-2d41-433e-be68-38f6d0db5e1a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_With_Invalid_ver" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="invalidVer" id="ecb72439-611e-44a8-bd4f-1537b9a46930">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="invalidVer" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#negver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>Digits</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>numeric value out of bounds (&lt;1 digits>.&lt;1 digits> expected)</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="info">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="ca66fede-62da-4c2c-a71e-db6e313795bc" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Digits</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>numeric value out of bounds (&lt;1 digits>.&lt;1 digits> expected)</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>Digits</errorCode>
         <errorMessage>numeric value out of bounds (&lt;1 digits>.&lt;1 digits> expected)</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T12:45:20.281Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="5fbd3b84-b159-45f3-bdf5-073cf57adf60" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_With_Invalid_reqTime" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="invalidReqTime" id="c46705a5-7dea-4b9a-98ec-03a1b2574125">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="invalidReqTime" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": ${#TestSuite#InvalidreqTime},
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-DTV-IDV-004</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Unknown error occured</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="5693ee6d-0b0e-4933-b26b-484e2e69bbd1" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-DTV-IDV-004</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Unknown error occured</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-DTV-IDV-004</errorCode>
         <errorMessage>Unknown error occured</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T12:49:21.245Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="398c96e7-9a5e-4d22-aa95-7e58b1b4dbe1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_With_Invalid_txnID" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="invalidTxnID" id="718bd6ff-bd5e-48c8-81e7-1b9485d10a33">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="invalidTxnID" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#negtxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>Pattern</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage" disabled="true">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>must match "^[A-Z0-9]{10}"</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="bd9ca757-4491-4565-8930-ad8f16d609b0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_With_Invalid_UID" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="invalidUID" id="0b7d8e5b-fa9d-463e-9873-8b4bc8396c2e">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="invalidUID" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#negid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-MLC-002</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Invalid UIN</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="87e53c23-9678-4956-b34a-004244635049" name="Message Content Assertion 2">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-MLC-002</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Invalid UIN</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-MLC-002</errorCode>
         <errorMessage>Invalid UIN</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T13:14:38.134Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="8aee3490-54df-43a8-bebe-24d94414ccea" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_With_Invalid_Vid" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="invalidVID" id="65eaff59-f61a-4c7d-a565-49e2a444ff67">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="invalidVID" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#negvid},
   "idType" : "${#TestSuite#posvidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-MLC-004</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Invalid VID</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="ca66fede-62da-4c2c-a71e-db6e313795bc" name="Message Content Assertion" disabled="true">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Digits</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>numeric value out of bounds (&lt;1 digits>.&lt;1 digits> expected)</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>Digits</errorCode>
         <errorMessage>numeric value out of bounds (&lt;1 digits>.&lt;1 digits> expected)</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T12:45:20.281Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="2d647765-92ae-445b-b2d7-51431712f480" name="Message Content Assertion 2">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-MLC-004</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Invalid VID</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-MLC-004</errorCode>
         <errorMessage>Invalid VID</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T13:17:05.515Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="befe5b27-7bca-4826-bdde-a57f3acf112d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_With_Invalid_UID_Type" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="Copy of invalidUID" id="1b3be57f-e3d7-4d0f-8f5f-af2180e1f146">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Copy of invalidUID" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#negidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-DTV-IDT-601</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Invalid ID type</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="e54b568a-6a23-4a84-aea8-67222d660d3b" name="Message Content Assertion 2">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-DTV-IDT-601</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Invalid ID type</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-DTV-IDT-601</errorCode>
         <errorMessage>Invalid ID type</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T13:19:30.067Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="683381e7-1212-4588-bdcf-69c14e875290" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_With_Invalid_VID_Type" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="invalidVIDType" id="67d0eb9a-9aec-4621-a516-c9f0c64943a7">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="invalidVIDType" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posvid},
   "idType" : "${#TestSuite#timestamp}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-DTV-IDT-601</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Invalid ID type</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="e54b568a-6a23-4a84-aea8-67222d660d3b" name="Message Content Assertion 2">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-DTV-IDT-601</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Invalid ID type</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-DTV-IDT-601</errorCode>
         <errorMessage>Invalid ID type</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T13:19:30.067Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="8dc7abba-072f-4576-9642-6c8acc833b25" name="JsonPath Match">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Invalid ID type</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="74f80cea-5dbd-4c90-bcce-f3dcc424df1d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TimeStamp_Of_OTP_Olderthan_20_Min_VID" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="TimeStamp_Older_Than_20_Minn" id="6143e1b6-9157-4cc2-b519-48ebe82c57ec">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="TimeStamp_Older_Than_20_Minn" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posvid},
   "idType" : "${#TestSuite#posvidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timeStampLessThan20}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-OTA-002</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Request received at MOSIP is 20 min post the initiation at TSP</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="55b48960-5e2b-4af3-a367-d5e8ca5b3b22" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-OTA-002</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Request received at MOSIP is 20 min post the initiation at TSP</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-OTA-002</errorCode>
         <errorMessage>Request received at MOSIP is 20 min post the initiation at TSP</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T13:40:05.684Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="96633c34-b880-4988-8c72-490d10863243" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="timeStampLessThan20Min" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="timeStampLessThan20Min" id="a0d69ecb-73a4-431a-8494-b8a17dc7c913">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="timeStampLessThan20Min" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posvid},
   "idType" : "${#TestSuite#posvidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timeGreaterThan20}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-OTA-002</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Request received at MOSIP is 20 min post the initiation at TSP</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="55b48960-5e2b-4af3-a367-d5e8ca5b3b22" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-OTA-002</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Request received at MOSIP is 20 min post the initiation at TSP</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-OTA-002</errorCode>
         <errorMessage>Request received at MOSIP is 20 min post the initiation at TSP</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T13:40:05.684Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties>
      <con:property>
        <con:name>endpoint</con:name>
        <con:value>http://13.71.81.26:8081</con:value>
      </con:property>
      <con:property>
        <con:name>timestamp</con:name>
        <con:value>2018-11-16T09:33:14.331Z</con:value>
      </con:property>
      <con:property>
        <con:name>timeEqualsTo20Min</con:name>
        <con:value>2018-11-16T09:13:14.334Z</con:value>
      </con:property>
      <con:property>
        <con:name>posmsaLicenseKey</con:name>
        <con:value>1712045733</con:value>
      </con:property>
      <con:property>
        <con:name>posmuaCode</con:name>
        <con:value>1582821155</con:value>
      </con:property>
      <con:property>
        <con:name>posid</con:name>
        <con:value>426789089018</con:value>
      </con:property>
      <con:property>
        <con:name>negid</con:name>
        <con:value>426789089019</con:value>
      </con:property>
      <con:property>
        <con:name>posvid</con:name>
        <con:value/>
      </con:property>
      <con:property>
        <con:name>negvid</con:name>
        <con:value>537184361359820</con:value>
      </con:property>
      <con:property>
        <con:name>posidType</con:name>
        <con:value>D</con:value>
      </con:property>
      <con:property>
        <con:name>negidType</con:name>
        <con:value>A</con:value>
      </con:property>
      <con:property>
        <con:name>posvidType</con:name>
        <con:value>V</con:value>
      </con:property>
      <con:property>
        <con:name>negvidType</con:name>
        <con:value>D</con:value>
      </con:property>
      <con:property>
        <con:name>negmsaLicenseKey</con:name>
        <con:value>MSALICENSE11</con:value>
      </con:property>
      <con:property>
        <con:name>negmuaCode</con:name>
        <con:value>MUALICENSE11</con:value>
      </con:property>
      <con:property>
        <con:name>negtxnID</con:name>
        <con:value>TXNLICENSE11</con:value>
      </con:property>
      <con:property>
        <con:name>posver</con:name>
        <con:value>1.0</con:value>
      </con:property>
      <con:property>
        <con:name>negver</con:name>
        <con:value>1.0.0</con:value>
      </con:property>
      <con:property>
        <con:name>timeStampLessThan20</con:name>
        <con:value>2018-11-16T09:23:14.334Z</con:value>
      </con:property>
      <con:property>
        <con:name>timeGreaterThan20</con:name>
        <con:value>2018-11-16T09:03:14.331Z</con:value>
      </con:property>
      <con:property>
        <con:name>postxnID</con:name>
        <con:value>1712045733</con:value>
      </con:property>
      <con:property>
        <con:name>posuid</con:name>
        <con:value/>
      </con:property>
      <con:property>
        <con:name>posmobile</con:name>
        <con:value/>
      </con:property>
      <con:property>
        <con:name>posemail</con:name>
        <con:value/>
      </con:property>
      <con:property>
        <con:name>posage</con:name>
        <con:value/>
      </con:property>
      <con:property>
        <con:name>posdob</con:name>
        <con:value/>
      </con:property>
    </con:properties>
    <con:reportParameters/>
  </con:testSuite>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:testSuite id="fb01fd5a-e9c5-4e29-86ab-e7a306b8630c" name="Authenticate_Demographic_MOS-212">
    <con:description>TestSuite generated for REST Service [http://13.71.81.26:8081]</con:description>
    <con:settings/>
    <con:savedRecentRuns>1</con:savedRecentRuns>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="7532295c-d796-4cc9-8b3a-8e6a63f0e831" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="init" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="groovy" name="Groovy Script" id="7964eeed-801b-4202-b040-57024630b57b" disabled="true">
        <con:settings/>
        <con:config>
          <script>//import java.time.Instant;
//import java.time.Duration; 
//import groovy.json.JsonSlurper
//import java.time.Instant
//import java.io.File;
//import java.io.FileNotFoundException;
//import java.io.FileReader;
//import java.io.IOException;
//
//
////Generating 10 digit msaLicenseKey
// long msaLicenseKey = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L; 
//String.format("%10d", msaLicenseKey) 
//testRunner.testCase.testSuite.setPropertyValue("posmsaLicenseKey",msaLicenseKey.toString())
//
////Generating 10 digit muaCode
// long muaCode1 = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L; 
//String.format("%10d", muaCode1) 
//log.info(muaCode1)
//testRunner.testCase.testSuite.setPropertyValue("posmuaCode",muaCode1.toString())
//
////generating txnID
//long txnID = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L; 
//String.format("%10d", txnID) 
//testRunner.testCase.testSuite.setPropertyValue("postxnID",msaLicenseKey.toString())
//
//
//
//log.info(System.getProperty("user.dir")+"\\DemoInput.json");
//def inputFile = new File(System.getProperty("user.dir")+"\\DemoInput.json");
//log.info(inputFile.text);
//def InputJSON = new JsonSlurper().parseText(inputFile.text);
//
//log.info(InputJSON[0].pos.ad.toString())
//testRunner.testCase.testSuite.setPropertyValue("posad",InputJSON[0].pos.ad.toString());
//testRunner.testCase.testSuite.setPropertyValue("posbio",InputJSON[0].pos.bio.toString());
//testRunner.testCase.testSuite.setPropertyValue("posfad",InputJSON[0].pos.fad.toString());
//testRunner.testCase.testSuite.setPropertyValue("posotp",InputJSON[0].pos.otp.toString());
//testRunner.testCase.testSuite.setPropertyValue("pospi",InputJSON[0].pos.pi.toString());
//testRunner.testCase.testSuite.setPropertyValue("pospin",InputJSON[0].pos.pin.toString());
//testRunner.testCase.testSuite.setPropertyValue("posdata",InputJSON[0].pos.data);
//testRunner.testCase.testSuite.setPropertyValue("poshmac",InputJSON[0].pos.hmac);
////testRunner.testCase.testSuite.setPropertyValue("posuid",InputJSON[0].pos.uid);
//testRunner.testCase.testSuite.setPropertyValue("posuidtype",InputJSON[0].pos.uidType);
//testRunner.testCase.testSuite.setPropertyValue("posvid",InputJSON[0].pos.vid);
//testRunner.testCase.testSuite.setPropertyValue("posvidtype",InputJSON[0].pos.vidType);
//testRunner.testCase.testSuite.setPropertyValue("pospublicKeyCert",InputJSON[0].pos.publicKeyCert);
//testRunner.testCase.testSuite.setPropertyValue("possessionKey",InputJSON[0].pos.sessionKey);
////testRunner.testCase.testSuite.setPropertyValue("posmsaLicenseKey",InputJSON[0].pos.msaLicenseKey);
////testRunner.testCase.testSuite.setPropertyValue("posmuaCode",InputJSON[0].pos.muaCode);
//testRunner.testCase.testSuite.setPropertyValue("posdob",InputJSON[0].pos.dob);
//testRunner.testCase.testSuite.setPropertyValue("posgender",InputJSON[0].pos.gender);
//testRunner.testCase.testSuite.setPropertyValue("posemail",InputJSON[0].pos.email);
//testRunner.testCase.testSuite.setPropertyValue("posphone",InputJSON[0].pos.phone);
//testRunner.testCase.testSuite.setPropertyValue("possignature",InputJSON[0].pos.signature);
////testRunner.testCase.testSuite.setPropertyValue("postxnID",InputJSON[0].pos.txnID);
//testRunner.testCase.testSuite.setPropertyValue("posver",InputJSON[0].pos.ver);
//
//
//








//taking data from DB

import groovy.sql.Sql
def url='jdbc:postgresql://13.71.81.26:9001/postgres'
def user = 'postgres'
def password= 'admin'
def driver= 'org.postgresql.Driver'

//com.eviware.soapui.support.GroovyUtils.registerJdbcDriver(driver)//to load driver
//def sql = Sql.newInstance(url,user,password,driver)
//def query=testRunner.testCase.getPropertyValue("query")//query for joining uid and demographic table
//def row= sql.rows("SELECT * FROM ida.vid inner join  ida.indv_demographic on ida.vid.uin_ref_id = ida.indv_demographic.uin_ref_id inner join ida.uin on  ida.indv_demographic.uin_ref_id=ida.uin.uin_ref_id")//query for getting all the data from two table
////def row= sql.rows(" SELECT v.*, u.id as uid,v.id as vid FROM ida.uin as u, ida.indv_demographic as d,ida.vid as v WHERE  u.uin_ref_id = d.uin_ref_id and d.uin_ref_id=v.uin_ref_id")
//log.info(row)
//def user_id=row[0].id//taking uid from result
//testRunner.testCase.testSuite.setPropertyValue("posuid",user_id)
//log.info(user_id)
////TestRunner.TestCase.TestSuite.setPropertyValue("posuid",user_id)
////log.info(user_id)
//sql.close()





//com.eviware.soapui.support.GroovyUtils.registerJdbcDriver(driver)
//def sql = Sql.newInstance(url,user,password,driver)
//def row= sql.rows(" SELECT v.*,u.*, u.id as uid,v.id as vid FROM ida.uin as u, ida.indv_demographic as d,ida.vid as v WHERE  u.uin_ref_id = d.uin_ref_id and d.uin_ref_id=v.uin_ref_id")
//log.info(row.uid)
//
//def user_id=row[0].toString()
//testRunner.testCase.setPropertyValue("user_id",user_id)
//log.info(user_id)
//sql.close()
com.eviware.soapui.support.GroovyUtils.registerJdbcDriver(driver)
def sql = Sql.newInstance(url,user,password,driver)
def row= sql.rows(" SELECT dob,age,email,mobile, u.id as uid,v.id as vid FROM ida.uin as u, ida.indv_demographic as d,ida.vid as v WHERE  u.uin_ref_id = d.uin_ref_id and d.uin_ref_id=v.uin_ref_id")

def user_id=row[0].toString()
testRunner.testCase.setPropertyValue("user_id",user_id)
log.info(user_id)
sql.close()</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="JDBC_Env_Setup" id="2002bbcd-c83f-4430-aa38-ee61c7d782b6" disabled="true">
        <con:settings/>
        <con:config>
          <script>// Set activeEnviroment from SOAP-UI  to set SQL Properties in User Script 
def activeEnviroment = com.eviware.soapui.SoapUI.globalProperties.getPropertyValue("ENV")
def driver =''
if (activeEnviroment == 'QA') {
def port= '9001'
def host_ida  = '13.71.81.26'
def QA = '104.211.228.46'
def url_ida='jdbc:postgresql://'+host_ida+':'+port+'/postgres'
def url = 'jdbc:postgresql://'+QA+':'+port+'/postgres'
def user_ida = 'postgres'
def password_ida= 'admin'
def user = 'repuser'
def password = 'Mosip@dev123'

testRunner.testCase.testSuite.project.setPropertyValue( "user", user)
testRunner.testCase.testSuite.project.setPropertyValue( "url", url)
testRunner.testCase.testSuite.project.setPropertyValue( "password", password)
testRunner.testCase.testSuite.project.setPropertyValue( "driver", driver)

testRunner.testCase.testSuite.project.setPropertyValue( "user_ida", user_ida)
testRunner.testCase.testSuite.project.setPropertyValue( "url_ida", url_ida)
testRunner.testCase.testSuite.project.setPropertyValue( "password_ida", password_ida)
// Connect to the SQL instance.
//def sql = Sql.newInstance(url, user, password, driver)

// Use the SQL instance.
// ...

// Close the SQL instance.
//sql.close()	
}
else if (activeEnviroment == 'DEV') {
def port= '9001'
def DEV = '104.211.208.136'
def url = 'jdbc:postgresql://'+DEV+':'+port+'/postgres'
def user = 'audituser'
def password = 'Mosip@dev123'
 driver= 'org.postgresql.Driver'
testRunner.testCase.testSuite.project.setPropertyValue( "user", user)
testRunner.testCase.testSuite.project.setPropertyValue( "url", url)
testRunner.testCase.testSuite.project.setPropertyValue( "password", password)
testRunner.testCase.testSuite.project.setPropertyValue( "driver", driver)

// Connect to the SQL instance.
//def sql = Sql.newInstance(url, user, password, driver)

// Use the SQL instance.
// ...

// Close the SQL instance.
//sql.close()	
}
log.info(driver)
com.eviware.soapui.support.GroovyUtils.registerJdbcDriver(driver)</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Request" id="065e0256-fa9b-4254-9847-2c0ce58e750f" disabled="true">
        <con:settings>
          <con:setting id="prettyPrintResponse">true</con:setting>
        </con:settings>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:driver>org.postgresql.Driver</con:driver>
          <con:connectionString>jdbc:postgresql://13.71.81.26:9001/postgres?user=postgres&amp;password=admin</con:connectionString>
          <con:connectionProperties/>
          <con:query>SELECT dob,age,email,mobile, u.id as uid,v.id as vid FROM ida.uin as u, ida.indv_demographic as d,ida.vid as v WHERE  u.uin_ref_id = d.uin_ref_id and d.uin_ref_id=v.uin_ref_id</con:query>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="data feching" id="9ec53bd8-824d-4841-b8fa-e93ebb24f3c7">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.text.SimpleDateFormat;
import java.util.Calendar; 
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import groovy.xml.*
import groovy.json.*
import java.text.DateFormat;
/*Generating 10 digit msaLicenseKey
 * 
 */
 long msaLicenseKey = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L; 
String.format("%10d", msaLicenseKey) 
testRunner.testCase.testSuite.setPropertyValue("posmsaLicenseKey",msaLicenseKey.toString())

/*Generating 10 digit muaCode
 * 
 */
 long muaCode1 = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L; 
String.format("%10d", muaCode1) 
testRunner.testCase.testSuite.setPropertyValue("posmuaCode",muaCode1.toString())

/*
 * generating 10 digits txnID
 */
long txnID = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L; 
String.format("%10d", txnID) 
testRunner.testCase.testSuite.setPropertyValue("postxnID",msaLicenseKey.toString())

/*
 * Generating 9 digits no
 */
 long no = (long) Math.floor(Math.random() * 9_000_000_00L) + 1_000_000_00L; 
String.format("%10d", no) 
/*
 * Generating 11 digits no
 */
 long no1 = (long) Math.floor(Math.random() * 9_000_000_000_0L) + 1_000_000_000_0L; 
String.format("%10d", no) 
/*
 * Invalid txnID 
 */
testRunner.testCase.testSuite.setPropertyValue("negtxnID9",no.toString())
testRunner.testCase.testSuite.setPropertyValue("negtxnID11",no1.toString())
/*
 * Invalid muaCode
 */
 testRunner.testCase.testSuite.setPropertyValue("negmuaCode9",no.toString())
  testRunner.testCase.testSuite.setPropertyValue("negmuaCode11",no1.toString())
 /*
  * Invalid msaLicenseKey
  */
 testRunner.testCase.testSuite.setPropertyValue("negmsaLicenseKey9",no.toString())
 testRunner.testCase.testSuite.setPropertyValue("negmsaLicenseKey11",no1.toString())


  
/*
 * Reading data from source file
 */
log.info(System.getProperty("user.dir"));
def inputFile = new File(System.getProperty("user.dir")+"\\DemoInput.json");
def InputJSON = new JsonSlurper().parseText(inputFile.text);
testRunner.testCase.testSuite.setPropertyValue("posad",InputJSON[0].pos.ad.toString());
testRunner.testCase.testSuite.setPropertyValue("posbio",InputJSON[0].pos.bio.toString());
testRunner.testCase.testSuite.setPropertyValue("posfad",InputJSON[0].pos.fad.toString());
testRunner.testCase.testSuite.setPropertyValue("posotp",InputJSON[0].pos.otp.toString());
testRunner.testCase.testSuite.setPropertyValue("pospi",InputJSON[0].pos.pi.toString());
testRunner.testCase.testSuite.setPropertyValue("pospin",InputJSON[0].pos.pin.toString());
testRunner.testCase.testSuite.setPropertyValue("posdata",InputJSON[0].pos.data);
testRunner.testCase.testSuite.setPropertyValue("poshmac",InputJSON[0].pos.hmac);
testRunner.testCase.testSuite.setPropertyValue("posuid",InputJSON[0].pos.uid);
testRunner.testCase.testSuite.setPropertyValue("posuidtype",InputJSON[0].pos.uidType);
testRunner.testCase.testSuite.setPropertyValue("posvid",InputJSON[0].pos.vid);
testRunner.testCase.testSuite.setPropertyValue("posvidtype",InputJSON[0].pos.vidType);
testRunner.testCase.testSuite.setPropertyValue("pospublicKeyCert",InputJSON[0].pos.publicKeyCert);
testRunner.testCase.testSuite.setPropertyValue("possessionKey",InputJSON[0].pos.sessionKey);
//testRunner.testCase.testSuite.setPropertyValue("posmsaLicenseKey",InputJSON[0].pos.msaLicenseKey);
//testRunner.testCase.testSuite.setPropertyValue("posmuaCode",InputJSON[0].pos.muaCode);
testRunner.testCase.testSuite.setPropertyValue("posdob",InputJSON[0].pos.dob);
testRunner.testCase.testSuite.setPropertyValue("posgender",InputJSON[0].pos.gender);
testRunner.testCase.testSuite.setPropertyValue("posemail",InputJSON[0].pos.email);
testRunner.testCase.testSuite.setPropertyValue("posphone",InputJSON[0].pos.phone);
testRunner.testCase.testSuite.setPropertyValue("possignature",InputJSON[0].pos.signature);

testRunner.testCase.testSuite.setPropertyValue("posver",InputJSON[0].pos.ver);
testRunner.testCase.testSuite.setPropertyValue("negpi",InputJSON[0].neg.pi.toString());
testRunner.testCase.testSuite.setPropertyValue("neguid",InputJSON[0].neg.uid);
testRunner.testCase.testSuite.setPropertyValue("negvid",InputJSON[0].neg.vid);
testRunner.testCase.testSuite.setPropertyValue("neguidType",InputJSON[0].neg.uidType);
testRunner.testCase.testSuite.setPropertyValue("negvidType",InputJSON[0].neg.vidType);
testRunner.testCase.testSuite.setPropertyValue("negdob",InputJSON[0].neg.dob);
testRunner.testCase.testSuite.setPropertyValue("neggender",InputJSON[0].neg.gender);
def neg=testRunner.testCase.testSuite.setPropertyValue("negemail",InputJSON[0].neg.email);
log.info(InputJSON[0].neg.email)
testRunner.testCase.testSuite.setPropertyValue("negdomain",InputJSON[0].neg.domain);
testRunner.testCase.testSuite.setPropertyValue("negphone",InputJSON[0].neg.phone);
testRunner.testCase.testSuite.setPropertyValue("negver",InputJSON[0].neg.ver);

/*
 * genarating time
 */
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
/*
 * current time stamp
 */
Calendar now = Calendar.getInstance();
testRunner.testCase.testSuite.setPropertyValue( "currentTimeStamp", dateFormat.format(now.getTime())) 
def current=Calendar.getInstance();;
log.info(current)
//log.info(now)
/*
 * time stamp equal to 24 hour
 */
now.add(Calendar.HOUR, -24);
def timeStampEqualTo24 = now.getTime()
log.info(timeStampEqualTo24)
testRunner.testCase.testSuite.setPropertyValue( "timeStampEqualTo24", dateFormat.format(timeStampEqualTo24.getTime()))
now=Calendar.getInstance();
/*
 * time stamp greater than 24 hour
 */
 now.add(Calendar.HOUR, -49);
def timeStampGreaterThan24 = now.getTime()
log.info(timeStampGreaterThan24)
testRunner.testCase.testSuite.setPropertyValue( "timeStampGreaterThan24", dateFormat.format(timeStampGreaterThan24.getTime()))
now=Calendar.getInstance();
/*
 * timeStamp between 24
 */
 now.add(Calendar.HOUR, -69);
def timeStampBetween24 = now.getTime()
testRunner.testCase.testSuite.setPropertyValue( "timeStampBetween24", dateFormat.format(timeStampBetween24.getTime()))
//log.info(dateFormat.format(timeStampBetween24.getTime())</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>query</con:name>
          <con:value>SELECT * FROM ida.uin, ida.indv_demographic WHERE  ida.uin.uin_ref_id = ida.indv_demographic.uin_ref_id</con:value>
        </con:property>
        <con:property>
          <con:name>user_id</con:name>
          <con:value>{dob=2001-07-16, age=22, email=sathishk@gmail.com, mobile=044-22273388, uid=426789089018, vid=5371843613598206}</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-11T22:37:52.811+0530</con:value>
        </con:property>
        <con:property>
          <con:name>currentTimeStamp</con:name>
          <con:value>2018-11-11T22:42:11.736+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timeStampGreaterThan24</con:name>
          <con:value>2018-11-12T18:42:11.736+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timeStampBetween24</con:name>
          <con:value>2018-11-11T22:42:11.736+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timeStampEqualTo24</con:name>
          <con:value>2018-11-13T19:42:11.736+0530</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="df9a4b38-7af9-4d80-93a2-465a7ac188d6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Email_Authentication_Smoke" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="Email_Authentication_With_Valid_UID_Smoke" id="8fdd92b6-da37-4f57-8098-b4f6db6871ba">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Email_Authentication_With_Valid_UID_Smoke" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="1e735b49-5efe-4e7b-b358-61994220de1a" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="27391cfb-f393-4dcc-b6fd-501d8cef6351" name="JsonPath Match">
              <con:configuration>
                <path>$['status']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="10b7b379-6008-4301-85d9-5a53e143d184" name="JsonPath Match 2">
              <con:configuration>
                <path>$['err']</path>
                <content>[]</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="620e93ac-ab17-4a43-8b2f-52ccf915088f" name="JsonPath Match 3">
              <con:configuration>
                <path>$['txnID']</path>
                <content>${#TestSuite#postxnID}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="5fc3cd6d-4f86-4e28-9129-da16e25e52e3" name="JsonPath Match 5">
              <con:configuration>
                <path>$['info']['idType']</path>
                <content>D</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="37591982-7711-479e-b348-09774c218467" name="JsonPath Match 6">
              <con:configuration>
                <path>$['info']['ver']</path>
                <content>1.0</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="38f521c0-de21-47a8-a199-0e8baa4cf9bc" name="JsonPath Match 7">
              <con:configuration>
                <path>$['info']['matchInfos']</path>
                <content>[]</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="bf10ac43-3e95-4148-940d-a48924cd4baf" name="JsonPath Match 8">
              <con:configuration>
                <path>$['info']['usageData']</path>
                <content>0x8e0000008e000000</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Email_Authentication_With_Valid_VID_Smoke" id="da203216-64ad-4253-a5ad-81df466804a2">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Email_Authentication_With_Valid_VID_Smoke" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posvid}",
   "idType":"${#TestSuite#posvidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="d0368937-5251-4330-88e5-a5a3975624b1" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4c14c8db-717a-41be-8ef1-31114fb5d848" name="JsonPath Match">
              <con:configuration>
                <path>$['status']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="512e4578-7b35-4ccc-814e-faece2c11720" name="JsonPath Match 2">
              <con:configuration>
                <path>$['err']</path>
                <content>[]</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="208f8475-18cf-48a8-b8c6-474ba3e75d52" name="JsonPath Match 3">
              <con:configuration>
                <path>$['txnID']</path>
                <content>${#TestSuite#postxnID}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="26ab80d8-de17-4c84-ac1b-a88290a1224a" name="JsonPath Match 5">
              <con:configuration>
                <path>$['info']['idType']</path>
                <content>V</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="d21cee0d-f21c-4cf5-82cd-7aafa1b240b2" name="JsonPath Match 6">
              <con:configuration>
                <path>$['info']['ver']</path>
                <content>1.0</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="dc11c3c5-b7f7-4d57-9c93-b43ac81cbdad" name="JsonPath Match 7">
              <con:configuration>
                <path>$['info']['matchInfos']</path>
                <content>[]</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="77e00985-d601-4c6c-bcaa-2cc1adeaee02" name="JsonPath Match 8">
              <con:configuration>
                <path>$['info']['usageData']</path>
                <content>0x8e0000008e000000</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="7ff9c6ac-b006-4d32-87a4-a9629622cf44" name="Response SLA">
              <con:configuration>
                <SLA>600</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="77397cb2-c312-4fa4-ab61-9a8f2ab0c20d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Email_Authentication_With_Invalid_Data" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="Auth_With_Valid_Email_Invalid_UID" id="8f282112-3ce2-42f3-8eb8-986af8fd245a">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Auth_With_Valid_Email_Invalid_UID" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#neguid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Invalid HTTP Status Codes" id="8bd0a797-6d86-4e43-a780-6185da3bd1ad" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="c775490a-a43f-4ab0-9705-fa9becefe7c3" name="JsonPath Match">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-MLC-002</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="9e7ecfc5-fc69-432b-a202-c0bdd209c817" name="JsonPath Match 2">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Invalid UIN</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="3160df39-483d-4265-b5b3-79e2ca151652" name="JsonPath Match 3">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="4b073183-bfd2-452e-a8ba-726b0e7c40e8" name="Response SLA">
              <con:configuration>
                <SLA>6000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="8087d968-b820-4b2d-b18f-6069f2e3f491" name="JsonPath Match 4">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="689f7ba2-1eba-4ce1-85b8-465f46555176" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>401</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Auth_With_Valid_Email_Invalid_VID" id="5df81e5f-38be-479f-a275-8d21bc3bcea0">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Auth_With_Valid_Email_Invalid_VID" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#negvid}",
   "idType":"${#TestSuite#posvidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Invalid HTTP Status Codes" id="8bd0a797-6d86-4e43-a780-6185da3bd1ad" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>200,500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="c775490a-a43f-4ab0-9705-fa9becefe7c3" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-MLC-004</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="9e7ecfc5-fc69-432b-a202-c0bdd209c817" name="errorMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Invalid VID</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="3160df39-483d-4265-b5b3-79e2ca151652" name="info">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="4b073183-bfd2-452e-a8ba-726b0e7c40e8" name="Response SLA">
              <con:configuration>
                <SLA>6000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="82230b86-1cb7-45ef-b277-cb3980a732d9" name="Script Assertion">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="c814e006-cbc8-49fa-8e93-e932881b6a20" name="JsonPath Match">
              <con:configuration>
                <path>$['txnID']</path>
                <content>${#TestSuite#postxnID}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="f60fb265-f949-4ac4-9d37-06267505e353" name="JsonPath Match 2">
              <con:configuration>
                <path>$['status']</path>
                <content>false</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="b2e40d58-83cc-433f-b3d5-1e1c2beb5805" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Auth_With_Valid_Email_Invalid_UIDType" id="7a522647-42c9-4403-ad96-1fadfbb2c7d5">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Auth_With_Valid_Email_Invalid_UIDType" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#neguidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Invalid HTTP Status Codes" id="8bd0a797-6d86-4e43-a780-6185da3bd1ad" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>200,500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="c775490a-a43f-4ab0-9705-fa9becefe7c3" name="JsonPath Match">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-DTV-IDT-601</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="9e7ecfc5-fc69-432b-a202-c0bdd209c817" name="JsonPath Match 2">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Invalid ID type</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="3160df39-483d-4265-b5b3-79e2ca151652" name="JsonPath Match 3">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="4b073183-bfd2-452e-a8ba-726b0e7c40e8" name="Response SLA">
              <con:configuration>
                <SLA>600</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="5ccdf816-5f81-4943-980d-b91a1bb6aed6" name="JsonPath Match 4">
              <con:configuration>
                <path>$['status']</path>
                <content>false</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="3eca6ffe-f6a3-40fb-9604-0d727ec54b0e" name="JsonPath Match 5">
              <con:configuration>
                <path>$['err']</path>
                <content>[{"errorCode":"IDA-DTV-IDT-601","errorMessage":"Invalid ID type"}]</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="c4169015-5327-4f3c-92e9-1db5b418f6fe" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Auth_With_Valid_Email_Invalid_VIDType" id="ee99706a-ff14-4fd4-bf76-a4857e57ba59">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Auth_With_Valid_Email_Invalid_VIDType" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posvid}",
   "idType":"${#TestSuite#negvidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Invalid HTTP Status Codes" id="8bd0a797-6d86-4e43-a780-6185da3bd1ad" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>200,500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="c775490a-a43f-4ab0-9705-fa9becefe7c3" name="JsonPath Match">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-DTV-IDT-601</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="9e7ecfc5-fc69-432b-a202-c0bdd209c817" name="JsonPath Match 2">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Invalid ID type</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="3160df39-483d-4265-b5b3-79e2ca151652" name="JsonPath Match 3">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="4b073183-bfd2-452e-a8ba-726b0e7c40e8" name="Response SLA">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fd588d22-d899-4acb-a7aa-606e0658b460" name="JsonPath Match 4">
              <con:configuration>
                <path>$['err']</path>
                <content>[{"errorCode":"IDA-DTV-IDT-601","errorMessage":"Invalid ID type"}]</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="8b832224-ccf3-46cf-a744-68b15530471b" name="JsonPath Match 5">
              <con:configuration>
                <path>$['status']</path>
                <content>false</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="98d932c5-57b3-44dc-b439-a61f814bddd0" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Auth_With_Invalid_Email_valid_VID" id="dca8f35c-7a4e-4535-b5db-cc0a0d887c26">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Auth_With_Invalid_Email_valid_VID" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posvid}",
   "idType":"${#TestSuite#posvidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#negemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Invalid HTTP Status Codes" id="8bd0a797-6d86-4e43-a780-6185da3bd1ad" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="4b073183-bfd2-452e-a8ba-726b0e7c40e8" name="Response SLA">
              <con:configuration>
                <SLA>500</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="8146016d-6419-4ab8-9016-ba88edf62639" name="JsonPath Match">
              <con:configuration>
                <path>$['status']</path>
                <content>false</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ffe44274-365d-4a4a-9660-ac55c030a574" name="JsonPath Match 2">
              <con:configuration>
                <path>$['err']</path>
                <content>Demographic data – email(pi) did not match</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Auth_With_Invalid_Email_valid_UID" id="a27fbd57-96b1-4cfe-9d3a-102230b2c4ab">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Auth_With_Invalid_Email_valid_UID" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#negemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Invalid HTTP Status Codes" id="8bd0a797-6d86-4e43-a780-6185da3bd1ad" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>200,500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="4b073183-bfd2-452e-a8ba-726b0e7c40e8" name="Response SLA">
              <con:configuration>
                <SLA>500</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="352141f5-9ddf-458d-b653-176728277cf6" name="JsonPath Match">
              <con:configuration>
                <path>$['status']</path>
                <content>false</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="5a0510d7-11c9-4c9a-a76a-d5a6bd588d28" name="JsonPath Match 2">
              <con:configuration>
                <path>$['txnID']</path>
                <content>${#TestSuite#postxnID}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="baf287f1-797c-469d-88c6-50fd2eab6236" name="JsonPath Match 4">
              <con:configuration>
                <path>$['err']</path>
                <content>Demographic data – email(pi) did not match</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="7e9a5786-f910-4fd7-a4d6-5f4709f883b6" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Auth_With_Invalid_Email_valid_UIDType" id="b3920a3c-c257-47ee-8b31-0b6ada5031ba">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Auth_With_Invalid_Email_valid_UIDType" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#negemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Invalid HTTP Status Codes" id="8bd0a797-6d86-4e43-a780-6185da3bd1ad" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>200,500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="4b073183-bfd2-452e-a8ba-726b0e7c40e8" name="Response SLA">
              <con:configuration>
                <SLA>500</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fb22697f-077e-4227-9d50-442d0f18a2bc" name="JsonPath Match">
              <con:configuration>
                <path>$['status']</path>
                <content>false</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="e87ce091-3584-4f4f-aadf-43580cf9a0a4" name="JsonPath Match 2">
              <con:configuration>
                <path>$['err']</path>
                <content>Demographic data – email(pi) did not match</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="a40b8140-e91f-4877-ad05-3407f8b4d017" name="JsonPath Match 3">
              <con:configuration>
                <path>$['info']</path>
                <content>{"idType":"D","reqTime":"2018-11-15T17:25:32.624+0530","ver":"1.0","matchInfos":[],"usageData":"0x8e0000008a000000"}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="0bfb37d7-0b0a-412e-bf7b-30c1c8f17432" name="JsonPath Match 4">
              <con:configuration>
                <path>$['info']['idType']</path>
                <content>D</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="2cb5feae-ebf9-4701-a533-cb3c07638cc7" name="JsonPath Match 5">
              <con:configuration>
                <path>$['info']['ver']</path>
                <content>1.0</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="5cc3cd4b-e242-4791-b321-b4efd61365e8" name="JsonPath Match 6">
              <con:configuration>
                <path>$['info']['matchInfos']</path>
                <content>[]</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1d6c57a4-d5df-43da-9f52-59c93a20ae1e" name="JsonPath Match 7">
              <con:configuration>
                <path>$['info']['usageData']</path>
                <content>0x8e0000008a000000</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="928fe75c-5e36-4807-b0c5-146cdd7262ad" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Auth_With_Invalid_Email_valid_VIDType" id="d397c96e-d0cf-4dc7-9350-ba925a8209d3">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Auth_With_Invalid_Email_valid_VIDType" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posvid}",
   "idType":"${#TestSuite#posvidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#negemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Invalid HTTP Status Codes" id="8bd0a797-6d86-4e43-a780-6185da3bd1ad" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>200,500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="4b073183-bfd2-452e-a8ba-726b0e7c40e8" name="Response SLA">
              <con:configuration>
                <SLA>500</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="c32bb3eb-50ef-4b79-8004-7747c12f9487" name="JsonPath Match">
              <con:configuration>
                <path>$['err']</path>
                <content>Demographic data – email(pi) did not match</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b9d56783-5b1d-4e73-b8d0-095f9a9b6a17" name="JsonPath Match 2">
              <con:configuration>
                <path>$['info']</path>
                <content>{"idType":"V","reqTime":"2018-11-15T17:25:32.624+0530","ver":"1.0","matchInfos":[],"usageData":"0x8e0000008a000000"}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="3990365b-6483-4d16-b64b-0ae1e5a938da" name="JsonPath Match 3">
              <con:configuration>
                <path>$['info']['idType']</path>
                <content>V</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="f4139776-5cc2-4af4-9593-901bb18492f5" name="JsonPath Match 4">
              <con:configuration>
                <path>$['info']['ver']</path>
                <content>1.0</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="6aed7787-c52d-4221-86b5-96c6abdd4603" name="JsonPath Match 5">
              <con:configuration>
                <path>$['info']['usageData']</path>
                <content>0x8e0000008a000000</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="554db2d2-409a-45de-8bf9-b67977290ff4" name="JsonPath Match 6">
              <con:configuration>
                <path>$['status']</path>
                <content>false</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="3a7afdb9-6e01-4168-b291-ba0db3918f1e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth_With_Valid_txnID" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="Valid_txnID" id="4d821894-befa-4ae8-9813-f685492ec6c0">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Valid_txnID" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="JsonPath Match" id="6193fb2b-582f-4f38-9753-e9065bca9049" name="JsonPath Match">
              <con:configuration>
                <path>$['status']</path>
                <content>Y</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="39bec793-a33e-4ed3-aff5-9890636953d5" name="JsonPath Match 2">
              <con:configuration>
                <path>$['errorCode']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="c8cff150-816d-4dee-85bf-d9f1a2285fcb" name="JsonPath Match 3">
              <con:configuration>
                <path>$['txnID']</path>
                <content>${#TestSuite#postxnID}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ac0c05b3-91b8-4bba-9bcf-046fdda9ca6e" name="JsonPath Match 4">
              <con:configuration>
                <path>$['maskedMobile']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="55672853-24ce-4d1e-95de-7b6707fca7e4" name="JsonPath Match 5">
              <con:configuration>
                <path>$['maskedEmail']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="8fad5b7d-854e-450f-80e0-b429626a9a96" name="Response SLA">
              <con:configuration>
                <SLA>600</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="4e76b164-27a8-41e0-8329-df91eb3daaeb" name="Script Assertion">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSSZ";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.responseTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="de0214c1-3ba1-4dd4-ab2e-1297e514f1d5" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="1bb6f09c-3e40-423a-9aae-1825dc76c29c" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,500</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="e073dd89-8a95-4fcd-9e09-e039c1196088" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth_With_Invalid_txnID" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="Authenticate_Invalid_WrongTxnID_boundaryValue11Digits" id="7aa60970-12ae-41e8-b595-587241766738">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Authenticate_Invalid_WrongTxnID_boundaryValue11Digits" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#negtxnID11}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Response SLA Assertion" id="8fad5b7d-854e-450f-80e0-b429626a9a96" name="Response SLA">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="c89a06a2-1886-4a6a-b1ea-65be7e91fc4d" name="JsonPath Match">
              <con:configuration>
                <path>$['status']</path>
                <content>false</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="2340d71e-b562-4705-9619-3cc49285a87e" name="JsonPath Match 2">
              <con:configuration>
                <path>$['err']</path>
                <content>[{"errorCode":"Pattern","errorMessage":"must match \"^[A-Z0-9]{10}\""}]</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="152311bd-6493-40a2-b841-2348533c4e52" name="JsonPath Match 3">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>Pattern</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="9f5c5edf-0ca8-4660-813a-c05fb0d7800f" name="JsonPath Match 4">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>must match "^[A-Z0-9]{10}"</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="6a6bce96-bbb7-43be-9af6-a145046b1d90" name="JsonPath Match 5">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="61a53889-0edb-42fe-b607-98f6607feb66" name="JsonPath Match 6">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="9ccd3546-da3f-47f2-a33a-08e747d0cb8a" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="920b5e06-6645-4ba3-8e19-0526a8574194" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>200,500</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Authenticate_Invalid_WrongTxnID_boundaryValue09Digits" id="093b4d01-22b8-4847-a649-229d0123766b">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Authenticate_Invalid_WrongTxnID_boundaryValue09Digits" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#negtxnID9}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Response SLA Assertion" id="8fad5b7d-854e-450f-80e0-b429626a9a96" name="Response SLA">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="62307af0-aa01-4180-bf5e-7af9a9d96f9a" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>500,200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="a0c88805-d9ae-4d41-ab8a-319da371c29c" name="JsonPath Match">
              <con:configuration>
                <path>$['status']</path>
                <content>false</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="d465d1e3-56fd-4869-a7bb-94a9744911bb" name="JsonPath Match 2">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>Pattern</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ead87179-8c20-4361-bf6b-585f1d39b04f" name="JsonPath Match 3">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>must match "^[A-Z0-9]{10}"</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="a7107008-f13a-4e2f-8a2f-11b49b5887f3" name="JsonPath Match 4">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="a70b18ec-218b-4f77-9e00-4ceeab7c191f" name="JsonPath Match 5">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="6eda0b76-8d6f-4cf0-ae3e-5da934f84822" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Authenticate_Invalid_Without_txnID" id="aa8aa288-f55e-4982-8d00-5779c79943a1">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Authenticate_Invalid_Without_txnID" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Invalid HTTP Status Codes" id="cb94820a-e20c-409e-b027-ea8200d0a41d" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>500,200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="65e60879-128d-4392-9e16-72a188ac3968" name="JsonPath Match">
              <con:configuration>
                <path>$['status']</path>
                <content>false</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="3076e1c5-18f4-4041-bec7-6fc33bbc0695" name="JsonPath Match 2">
              <con:configuration>
                <path>$['err']</path>
                <content>[{"errorCode":"Pattern","errorMessage":"TxnId size must be 10"}]</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="2254f752-c85b-476a-bda3-fb3bb05bd4cc" name="JsonPath Match 3">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>Pattern</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="c69461c4-c0ce-464d-9744-d8b59e15faf0" name="JsonPath Match 4">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>TxnId size must be 10</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="6522e32f-07f3-4ece-bad0-817f7646dc35" name="JsonPath Match 5">
              <con:configuration>
                <path>$['txnID']</path>
                <content/>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="f0fb3b0a-879f-4be2-8bc1-186793548c88" name="JsonPath Match 6">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="3f7672d8-2791-48ef-a355-a979ab5146fc" name="Response SLA">
              <con:configuration>
                <SLA>600</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="10ee0c26-e30e-492a-aa5c-f69746e822aa" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="4d37ed6c-5e3e-4d29-b7f6-d7ae288b5b10" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth_With_Valid_muaCode" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="Auth_With_Valid_muaCode" id="cdf8725c-97cd-4467-be18-ce7ba4b3361c">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Auth_With_Valid_muaCode" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="024c7624-a29f-4b9a-866f-d31ebaf04b97" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="6dd48b09-1a24-48b9-9fc5-60e885dbed58" name="JsonPath Match">
              <con:configuration>
                <path>$['status']</path>
                <content>Y</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="86b98b8a-b52b-4d03-89e7-4038ce5b2308" name="JsonPath Match 2">
              <con:configuration>
                <path>$['errorCode']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="002832d7-88eb-4642-acec-5bcd7217cf11" name="JsonPath Match 3">
              <con:configuration>
                <path>$['txnID']</path>
                <content>${#TestSuite#postxnID}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="8c415306-25d5-46a3-b782-a57fc3816e67" name="JsonPath Match 4">
              <con:configuration>
                <path>$['maskedMobile']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="3b9cd6c4-0569-45e0-9c52-6808c07a72ee" name="JsonPath Match 5">
              <con:configuration>
                <path>$['maskedEmail']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="a9bc2531-21de-4d61-8b87-f19d8b858f9a" name="Response SLA">
              <con:configuration>
                <SLA>600</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="65c18944-2da4-4467-9504-45911ffa1f94" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,500</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="4457628d-f35f-41a5-8508-bb736ad81257" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth_With_Invalid_muaCode" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="Authenticate_Invalid_Wrong_muaCode_boundaryValue9Digits" id="442065fe-8887-4114-9a15-208ac5b52fe6">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Authenticate_Invalid_Wrong_muaCode_boundaryValue9Digits" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#negmuaCode9}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Invalid HTTP Status Codes" id="6dde9bc2-02c7-4864-99ce-91659d0e973a" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>500,200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="2a4007b2-0f21-44f9-aa86-3498666ca37f" name="JsonPath Match">
              <con:configuration>
                <path>$['status']</path>
                <content>false</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="42d0885b-7eb5-4706-a8c5-78f0c9538ec8" name="JsonPath Match 2">
              <con:configuration>
                <path>$['err']</path>
                <content>[{"errorCode":"Size","errorMessage":"MuaCode size should be min 10"}]</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="affba3cc-9a5b-4ac1-9d1f-25be09374fed" name="JsonPath Match 3">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>Size</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="f6c1c4b6-24f7-4272-ac5c-b1bb9a1ca3d2" name="JsonPath Match 4">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>MuaCode size should be min 10</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="5fb534d8-810a-42d5-af52-7a5ad4793e6e" name="JsonPath Match 5">
              <con:configuration>
                <path>$['txnID']</path>
                <content>${#TestSuite#postxnID}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="7f8fed85-969e-43e8-9823-e0c78ac8c100" name="JsonPath Match 6">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="523e16ba-663a-4d53-9c95-3ff8905c6aeb" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="0f3afa29-63ff-40f9-b9e3-3d28caa7111a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth_With_Valid_msaLicense_Key" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Auth_With_Valid_msaLicenseKey" id="192fb203-d4f0-4c0f-ad2c-55298e3aaa6b">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Auth_With_Valid_msaLicenseKey" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="92adf56a-f03a-43b7-a32c-4b3aed6e35a6" name="Valid HTTP Status Codes">
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="a4798dff-52e9-4077-a239-dc42d5b110fb" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d596e82f-676b-442a-89f8-6ba878f81b27" name="Script Assertion">
              <con:configuration/>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="ff237c9c-e260-40ff-9f59-b589b7e63061" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth_With_CurrentTimeStamp" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="currentTimeStamp" id="495ee3e6-0127-4c1a-ae54-fcd1e31d079b">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="currentTimeStamp" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="d6bad752-4f1f-4e88-840c-1244f2e4b293" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="9551f628-e8a9-496b-ba65-90e146875143" name="JsonPath Match">
              <con:configuration>
                <path>$['status']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="9ea1146b-67bf-4b09-9bb0-e656e4349e6e" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400,500</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="26159691-db0c-49d9-8de1-92e042daf8b8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth_With_TimeStampGreaterThan24" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="timeStampGreaterThan24Hour" id="a44edbef-0778-4ad8-a41d-c90d0fb1b60d">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="timeStampGreaterThan24Hour" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#timeStampGreaterThan24}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="05b0fc2c-2dea-47f3-b156-aa70ccc0ca6f" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="54bc94ea-f055-4a83-872d-986beb7e19e2" name="JsonPath Match">
              <con:configuration>
                <path>$['err']</path>
                <content>[{"errorCode":"IDA-RQV-TMOUT-001","errorMessage":"Request should be reached within 24Hrs"}]</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b23303f4-1b72-442e-a07f-db9615936e6c" name="JsonPath Match 2">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-RQV-TMOUT-001</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4c8a6301-119d-4f20-8ce6-f121ad109a05" name="JsonPath Match 3">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Request should be reached within 24Hrs</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="13e1acd6-9967-48f1-8cb2-88c19f74aa0a" name="JsonPath Match 4">
              <con:configuration>
                <path>$['txnID']</path>
                <content>${#TestSuite#postxnID}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="72780eff-bfa0-4010-a0ed-5a25c45f0231" name="JsonPath Match 5">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="c8f0084d-7dae-4703-ab9e-ca879799be9b" name="Response SLA">
              <con:configuration>
                <SLA>600</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="96b229be-4b26-4e12-9066-d5b53ad72c63" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth_With_Invalid_Time_Format" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="Auth_With_Invalid_Time_Format" id="2cc0f672-4162-4245-80d8-434430c5add4">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Auth_With_Invalid_Time_Format" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#timeStampLessThan24}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Invalid HTTP Status Codes" id="375864f0-f88f-4e4b-8be1-384f4564b88b" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="a05427da-c7a1-4ee6-9e28-226793dcab59" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="88793757-76d6-47c9-af84-da4e2778b72f" name="Response SLA">
              <con:configuration>
                <SLA>600</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1b7301-4367-4d97-9e10-b9dcd8a76195" name="JsonPath Match">
              <con:configuration>
                <path>$['status']</path>
                <content>false</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1ea71365-4ecc-45d7-9615-ed254af9bb29" name="JsonPath Match 2">
              <con:configuration>
                <path>$['txnID']</path>
                <content>${#TestSuite#postxnID}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="56f3ad10-952a-4126-ae1f-a20d0abf9811" name="JsonPath Match 3">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="e5e7be9b-1a9e-49cb-8718-b020fd4f9515" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="3_4_1_Auth_MOS-207_Auth DOB Succefully" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="DOB_Authentication_With_Valid_UID_Smoke" id="61a7bad9-8190-41c7-b28c-b8a21116c15e">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="DOB_Authentication_With_Valid_UID_Smoke" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="1e735b49-5efe-4e7b-b358-61994220de1a" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="27391cfb-f393-4dcc-b6fd-501d8cef6351" name="JsonPath Match">
              <con:configuration>
                <path>$['status']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="10b7b379-6008-4301-85d9-5a53e143d184" name="JsonPath Match 2">
              <con:configuration>
                <path>$['err']</path>
                <content>[]</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="620e93ac-ab17-4a43-8b2f-52ccf915088f" name="JsonPath Match 3">
              <con:configuration>
                <path>$['txnID']</path>
                <content>${#TestSuite#postxnID}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="5fc3cd6d-4f86-4e28-9129-da16e25e52e3" name="JsonPath Match 5">
              <con:configuration>
                <path>$['info']['idType']</path>
                <content>D</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="37591982-7711-479e-b348-09774c218467" name="JsonPath Match 6">
              <con:configuration>
                <path>$['info']['ver']</path>
                <content>1.0</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="38f521c0-de21-47a8-a199-0e8baa4cf9bc" name="JsonPath Match 7">
              <con:configuration>
                <path>$['info']['matchInfos']</path>
                <content>[]</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="bf10ac43-3e95-4148-940d-a48924cd4baf" name="JsonPath Match 8">
              <con:configuration>
                <path>$['info']['usageData']</path>
                <content>0x8e0000008e000000</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="DOB_Authentication_With_Valid_VID_Smoke" id="10267b05-950b-40d9-81cb-d49467fb06d5">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="DOB_Authentication_With_Valid_VID_Smoke" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posvid}",
   "idType":"${#TestSuite#posvidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="d0368937-5251-4330-88e5-a5a3975624b1" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4c14c8db-717a-41be-8ef1-31114fb5d848" name="JsonPath Match">
              <con:configuration>
                <path>$['status']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="512e4578-7b35-4ccc-814e-faece2c11720" name="JsonPath Match 2">
              <con:configuration>
                <path>$['err']</path>
                <content>[]</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="208f8475-18cf-48a8-b8c6-474ba3e75d52" name="JsonPath Match 3">
              <con:configuration>
                <path>$['txnID']</path>
                <content>${#TestSuite#postxnID}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="26ab80d8-de17-4c84-ac1b-a88290a1224a" name="JsonPath Match 5">
              <con:configuration>
                <path>$['info']['idType']</path>
                <content>V</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="d21cee0d-f21c-4cf5-82cd-7aafa1b240b2" name="JsonPath Match 6">
              <con:configuration>
                <path>$['info']['ver']</path>
                <content>1.0</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="dc11c3c5-b7f7-4d57-9c93-b43ac81cbdad" name="JsonPath Match 7">
              <con:configuration>
                <path>$['info']['matchInfos']</path>
                <content>[]</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="77e00985-d601-4c6c-bcaa-2cc1adeaee02" name="JsonPath Match 8">
              <con:configuration>
                <path>$['info']['usageData']</path>
                <content>0x8e0000008e000000</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="7ff9c6ac-b006-4d32-87a4-a9629622cf44" name="Response SLA">
              <con:configuration>
                <SLA>600</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase id="3fe98d62-8f1b-4666-854c-231d78ce17db" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="3_4_1_Auth_MOS-207_Auth With Invalid DOB" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Auth WithInvalid DOB" id="44678d25-257c-4d77-b3fa-0b57c328ace7">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Auth WithInvalid DOB" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://13.71.81.26:8081</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#negdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:credentials>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase id="7455d039-5be0-4b05-b4aa-d6c6cbe156d6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth_MOS-207_Auth With Invalid UID" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Auth With Invalid UID" id="db6b9d36-75a6-4742-b022-09935afbc219">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Auth With Invalid UID" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://13.71.81.26:8081</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#neguid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:credentials>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase id="32710a89-597c-4b00-a703-bb9c94f5904a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth_MOS-207_Auth with Invalid UID Type" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Auth With Invalid UID Type" id="2a51e8b6-cda9-4754-852f-89b9e529a711">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Auth With Invalid UID Type" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://13.71.81.26:8081</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#neguidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:credentials>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase id="7282acb0-c2c1-4aef-913b-406ad4ad0b6b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth_MOS-207_Auth With Invalid VID" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="Authenticate With Invalid VID" id="ead04ade-9edd-4787-a5b4-2803fe4eb428">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Authenticate With Invalid VID" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://13.71.81.26:8081</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:credentials>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties>
      <con:property>
        <con:name>posmsaLicenseKey</con:name>
        <con:value>2838021252</con:value>
      </con:property>
      <con:property>
        <con:name>posmuaCode</con:name>
        <con:value>9027862480</con:value>
      </con:property>
      <con:property>
        <con:name>postxnID</con:name>
        <con:value>2838021252</con:value>
      </con:property>
      <con:property>
        <con:name>negtxnID</con:name>
        <con:value>868586226</con:value>
      </con:property>
      <con:property>
        <con:name>negmuaCode</con:name>
        <con:value>868586226</con:value>
      </con:property>
      <con:property>
        <con:name>negmsaLicenseKey</con:name>
        <con:value>155428004</con:value>
      </con:property>
      <con:property>
        <con:name>neguid</con:name>
        <con:value>426789089019</con:value>
      </con:property>
      <con:property>
        <con:name>negvid</con:name>
        <con:value>537184361359820</con:value>
      </con:property>
      <con:property>
        <con:name>posdob</con:name>
        <con:value>2001-07-16</con:value>
      </con:property>
      <con:property>
        <con:name>posad</con:name>
        <con:value>false</con:value>
      </con:property>
      <con:property>
        <con:name>posbio</con:name>
        <con:value>false</con:value>
      </con:property>
      <con:property>
        <con:name>posfad</con:name>
        <con:value>false</con:value>
      </con:property>
      <con:property>
        <con:name>posotp</con:name>
        <con:value>false</con:value>
      </con:property>
      <con:property>
        <con:name>pospi</con:name>
        <con:value>true</con:value>
      </con:property>
      <con:property>
        <con:name>pospin</con:name>
        <con:value>false</con:value>
      </con:property>
      <con:property>
        <con:name>posdata</con:name>
        <con:value>string</con:value>
      </con:property>
      <con:property>
        <con:name>poshmac</con:name>
        <con:value>string</con:value>
      </con:property>
      <con:property>
        <con:name>posuid</con:name>
        <con:value>426789089018</con:value>
      </con:property>
      <con:property>
        <con:name>posuidtype</con:name>
        <con:value>D</con:value>
      </con:property>
      <con:property>
        <con:name>posvid</con:name>
        <con:value>5371843613598206</con:value>
      </con:property>
      <con:property>
        <con:name>posvidtype</con:name>
        <con:value>V</con:value>
      </con:property>
      <con:property>
        <con:name>pospublicKeyCert</con:name>
        <con:value>string</con:value>
      </con:property>
      <con:property>
        <con:name>possessionKey</con:name>
        <con:value>string</con:value>
      </con:property>
      <con:property>
        <con:name>posgender</con:name>
        <con:value>M</con:value>
      </con:property>
      <con:property>
        <con:name>posemail</con:name>
        <con:value>sathishk@gmail.com</con:value>
      </con:property>
      <con:property>
        <con:name>posphone</con:name>
        <con:value>044-22273388</con:value>
      </con:property>
      <con:property>
        <con:name>possignature</con:name>
        <con:value>string</con:value>
      </con:property>
      <con:property>
        <con:name>posver</con:name>
        <con:value>1.0</con:value>
      </con:property>
      <con:property>
        <con:name>negpi</con:name>
        <con:value>false</con:value>
      </con:property>
      <con:property>
        <con:name>neguidType</con:name>
        <con:value>A</con:value>
      </con:property>
      <con:property>
        <con:name>negvidType</con:name>
        <con:value>B</con:value>
      </con:property>
      <con:property>
        <con:name>negdob</con:name>
        <con:value>2010-07-16</con:value>
      </con:property>
      <con:property>
        <con:name>neggender</con:name>
        <con:value>F</con:value>
      </con:property>
      <con:property>
        <con:name>negemail</con:name>
        <con:value>sathis@gmail.com</con:value>
      </con:property>
      <con:property>
        <con:name>negdomain</con:name>
        <con:value>sathishkgmail.com</con:value>
      </con:property>
      <con:property>
        <con:name>negphone</con:name>
        <con:value>044-2227338</con:value>
      </con:property>
      <con:property>
        <con:name>negver</con:name>
        <con:value>1.0</con:value>
      </con:property>
      <con:property>
        <con:name>currentTimeStamp</con:name>
        <con:value>2018-11-16T10:41:02.402+0530</con:value>
      </con:property>
      <con:property>
        <con:name>timeStampGreaterThan24</con:name>
        <con:value>2018-11-14T09:41:02.432+0530</con:value>
      </con:property>
      <con:property>
        <con:name>timeStampBetween24</con:name>
        <con:value>2018-11-13T13:41:02.433+0530</con:value>
      </con:property>
      <con:property>
        <con:name>timeStampEqualTo24</con:name>
        <con:value>2018-11-15T10:41:02.402+0530</con:value>
      </con:property>
      <con:property>
        <con:name>negtxnID9</con:name>
        <con:value>690011017</con:value>
      </con:property>
      <con:property>
        <con:name>negtxnID11</con:name>
        <con:value>86898068125</con:value>
      </con:property>
      <con:property>
        <con:name>negmuaCode9</con:name>
        <con:value>690011017</con:value>
      </con:property>
      <con:property>
        <con:name>negmuaCode11</con:name>
        <con:value>86898068125</con:value>
      </con:property>
      <con:property>
        <con:name>negmsaLicenseKey11</con:name>
        <con:value>86898068125</con:value>
      </con:property>
      <con:property>
        <con:name>negmsaLicenseKey9</con:name>
        <con:value>690011017</con:value>
      </con:property>
      <con:property>
        <con:name>endpoint</con:name>
        <con:value>http://13.71.81.26:8081</con:value>
      </con:property>
    </con:properties>
    <con:reportParameters/>
  </con:testSuite>
  <con:requirements/>
  <con:properties>
    <con:property>
      <con:name>user</con:name>
      <con:value>repuser</con:value>
    </con:property>
    <con:property>
      <con:name>url</con:name>
      <con:value>jdbc:postgresql://104.211.228.46:9001/postgres</con:value>
    </con:property>
    <con:property>
      <con:name>password</con:name>
      <con:value>Mosip@dev123</con:value>
    </con:property>
    <con:property>
      <con:name>driver</con:name>
      <con:value>org.postgresql.Driver</con:value>
    </con:property>
    <con:property>
      <con:name>user_ida</con:name>
      <con:value>postgres</con:value>
    </con:property>
    <con:property>
      <con:name>url_ida</con:name>
      <con:value>jdbc:postgresql://13.71.81.26:9001/postgres</con:value>
    </con:property>
    <con:property>
      <con:name>password_ida</con:name>
      <con:value>admin</con:value>
    </con:property>
    <con:property>
      <con:name>endpoint</con:name>
      <con:value>http://13.71.81.26:8081</con:value>
    </con:property>
  </con:properties>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:xmlTemplates/>
    <con:parameters/>
  </con:reporting>
  <con:sensitiveInformation/>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>

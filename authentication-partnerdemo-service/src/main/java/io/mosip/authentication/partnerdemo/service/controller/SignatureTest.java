package io.mosip.authentication.partnerdemo.service.controller;

import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.PublicKey;
import java.security.SignatureException;
import java.security.cert.CertificateException;
import java.security.cert.CertificateExpiredException;
import java.security.cert.CertificateNotYetValidException;
import java.security.cert.X509Certificate;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

import org.apache.commons.codec.binary.Base64;
import org.jose4j.jws.AlgorithmIdentifiers;
import org.jose4j.jws.JsonWebSignature;
import org.jose4j.lang.JoseException;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;


public class SignatureTest {

	public static void main(String[] args) throws JSONException {
//		String signatureTxt = "eyJhbGciOiJSUzI1NiIsInR5cCI6Imp3dCIsIng1YyI6WyJNSUlFSnpDQ0F3K2dBd0lCQWdJR0FXNGJwTTArTUEwR0NTcUdTSWIzRFFFQkN3VUFNSUhDTVNVd0l3WUpLb1pJaHZjTkFRa0JGaFp6ZFhKbGMyaGlZV0oxUUhONWJtTmllWFJsTG1sdU1SZ3dGZ1lEVlFRREV3OVRWVkpGVTBnZ1FrRkNWU0JOUTBzeEd6QVpCZ05WQkFzVEVsTnZablIzWVhKbElGTnZiSFYwYVc5dWN6RXRNQ3NHQTFVRUNoTWtVM2x1WTJKNWRHVWdTVzV1YjNaaGRHbHZibk1nVUhKcGRtRjBaU0JNYVcxcGRHVmtNUkl3RUFZRFZRUUhFd2xDUVU1SFFVeFBVa1V4RWpBUUJnTlZCQWdUQ1V0QlVrNUJWRUZMUVRFTE1Ba0dBMVVFQmhNQ1NVNHdIaGNOTVRreE1ETXdNRGMxTURFMVdoY05NVGt4TVRJNU1EYzFNREUxV2pDQnh6RXdNQzRHQTFVRUF3d25jbVJmWW1Nd1lqWTRORGd0Tm1RME5TMDBObVF4TFdFNVltUXRZak16TkRReE1HSm1PREl6TVFzd0NRWURWUVFHRXdKSlRqRVNNQkFHQTFVRUNCTUpTMkZ5Ym1GMFlXdGhNUkl3RUFZRFZRUUhFd2xDWVc1bllXeHZjbVV4SVRBZkJna3Foa2lHOXcwQkNRRVdFbUZrYldsdVFITjVibU5pZVhSbExtTnZiVEVNTUFvR0ExVUVDeE1EWkdWMk1TMHdLd1lEVlFRS0V5UlRXVTVEUWxsVVJTQkpUazVQVmtGVVNVOU9VeUJRVWtsV1FWUkZJRXhKVFVsVVJVUXdnZ0VoTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRGdBd2dnRUpBb0lCQUxIWEl5MzVVMnJnRGpOZStvZHEza2dYNC9CT0UxMkVFQkIrb3pMYUVnWnVRbjBGOVNDVWxGckZtZlFPbzVuZlBHbi9FQnlpdEg4cXVLM1F5SUw0OVRYWnZmUlFpcG4rcW0xSUMvNzJUQ1k4WmZPR2dkeUduVExSUEhkc25JcnJ5dlB2NlBJOTl6UzU5WjlndG9kSmFNV04waHBwamZYek1xd0pSbkpabEpZbVExRzMxRlhzbVBNYVkrSFhNSURoY0MyUFBjVEhESGtsRTdUZkNlQzk5dVMwNit4OUt3VDRGTkJqdGErQURsRlZoc2ZlYnNsQmVDbjRVSjl3aGNmcTF5dGdRSlYyZlZnRXBndXp0aVk3M2ZHWnFxZDA0UEViNmorVGlTeE0zeUE3aVhOeS9FTDRFVVROajVrc2R3Q0FqUlRGalhINS94TXpvalF2bVR3eHl5a0NBd0VBQWFNZE1Cc3dEQVlEVlIwVEJBVXdBd0VCL3pBTEJnTlZIUThFQkFNQ0FZWXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSGJDSEVmaHJkS3pKajU1L2p3WGVqTzFsclVVZjcycWRtVE03MTRSbFNETnBaK1JlQUZ1Z1UwejlwMHY0ZU93eFpHZWNwN0Eyc3k2UGZUMmF0TzY3eEp4UHMrQkVBZTY2cnNNK09pZmFxM0Fhd3EvcklTNTRmYkQ3VE9yOE10NmlncHJJRUdZY2x2WDIrbVJjNmpBMGVjaDEva3lBMEZHSnRxalNhSTdpQjVVWHFqWE5zU3NxaS92OUhpNkhnaHdTRTlod3FUQ2hrZkF4VDdjVHJwNUVZaDQ5YytCVHdIU2c1bjNrN2FqaENaRUY5OVZwd2ZOSUtaV0RLS0NNdmpDRzFQM2pWeVBoVG4xSjN1VVhteGRWZmNwdkpaSlZoaEVmTFJEUnd4MkxiVTRCcnUyekpzUzRKUXovdXNTNkxBZGxQQ1FPVHhiWmZYWXBhZWRpNElvVnhVPSJdfQ.RTYwQ0Y0MzkxQUNCQzY2MDY2RDIxNEI2REQ1MUE0NDE3QUIzNzg2ODM4RkZBMDNDOTc5NkNFRTZBMDFDRUYxQg.SLGXASbv9e82KNH_dwkI243yoZVsjWiUjf4y8kzxgQtSszAyqvsurPmzGg63kO89JWtS5zKUDi0EbHzfpU0ddi8XgPAPt3ES61GKpJbzqrsi0wGXGvSTgebB7_MiaXfyA0X_lHBoH5Fx1zBl1xdUoqNRFkG3Ujcir0Fmgsx4y4ENdSeQsg_098e8gJnBYpx6pVeQSKhRyh1prRh210smZFH_Xgi28TD4TsRV4MYTN9iQ8GUGKcD9C2gD5LMa8nPcznS9TdtzdvZGgD1bZY6f4aLZiEXWBJFumU1fUOz5LXNdy7kbWfQbtYGukM9Fs4EHHKCnZiKCvdk37yiATT7oKw.eyJhbGciOiJSUzI1NiIsInR5cCI6Imp3dCIsIng1YyI6WyJNSUlFSnpDQ0F3K2dBd0lCQWdJR0FXNGJwTTArTUEwR0NTcUdTSWIzRFFFQkN3VUFNSUhDTVNVd0l3WUpLb1pJaHZjTkFRa0JGaFp6ZFhKbGMyaGlZV0oxUUhONWJtTmllWFJsTG1sdU1SZ3dGZ1lEVlFRREV3OVRWVkpGVTBnZ1FrRkNWU0JOUTBzeEd6QVpCZ05WQkFzVEVsTnZablIzWVhKbElGTnZiSFYwYVc5dWN6RXRNQ3NHQTFVRUNoTWtVM2x1WTJKNWRHVWdTVzV1YjNaaGRHbHZibk1nVUhKcGRtRjBaU0JNYVcxcGRHVmtNUkl3RUFZRFZRUUhFd2xDUVU1SFFVeFBVa1V4RWpBUUJnTlZCQWdUQ1V0QlVrNUJWRUZMUVRFTE1Ba0dBMVVFQmhNQ1NVNHdIaGNOTVRreE1ETXdNRGMxTURFMVdoY05NVGt4TVRJNU1EYzFNREUxV2pDQnh6RXdNQzRHQTFVRUF3d25jbVJmWW1Nd1lqWTRORGd0Tm1RME5TMDBObVF4TFdFNVltUXRZak16TkRReE1HSm1PREl6TVFzd0NRWURWUVFHRXdKSlRqRVNNQkFHQTFVRUNCTUpTMkZ5Ym1GMFlXdGhNUkl3RUFZRFZRUUhFd2xDWVc1bllXeHZjbVV4SVRBZkJna3Foa2lHOXcwQkNRRVdFbUZrYldsdVFITjVibU5pZVhSbExtTnZiVEVNTUFvR0ExVUVDeE1EWkdWMk1TMHdLd1lEVlFRS0V5UlRXVTVEUWxsVVJTQkpUazVQVmtGVVNVOU9VeUJRVWtsV1FWUkZJRXhKVFVsVVJVUXdnZ0VoTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRGdBd2dnRUpBb0lCQUxIWEl5MzVVMnJnRGpOZStvZHEza2dYNC9CT0UxMkVFQkIrb3pMYUVnWnVRbjBGOVNDVWxGckZtZlFPbzVuZlBHbi9FQnlpdEg4cXVLM1F5SUw0OVRYWnZmUlFpcG4rcW0xSUMvNzJUQ1k4WmZPR2dkeUduVExSUEhkc25JcnJ5dlB2NlBJOTl6UzU5WjlndG9kSmFNV04waHBwamZYek1xd0pSbkpabEpZbVExRzMxRlhzbVBNYVkrSFhNSURoY0MyUFBjVEhESGtsRTdUZkNlQzk5dVMwNit4OUt3VDRGTkJqdGErQURsRlZoc2ZlYnNsQmVDbjRVSjl3aGNmcTF5dGdRSlYyZlZnRXBndXp0aVk3M2ZHWnFxZDA0UEViNmorVGlTeE0zeUE3aVhOeS9FTDRFVVROajVrc2R3Q0FqUlRGalhINS94TXpvalF2bVR3eHl5a0NBd0VBQWFNZE1Cc3dEQVlEVlIwVEJBVXdBd0VCL3pBTEJnTlZIUThFQkFNQ0FZWXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSGJDSEVmaHJkS3pKajU1L2p3WGVqTzFsclVVZjcycWRtVE03MTRSbFNETnBaK1JlQUZ1Z1UwejlwMHY0ZU93eFpHZWNwN0Eyc3k2UGZUMmF0TzY3eEp4UHMrQkVBZTY2cnNNK09pZmFxM0Fhd3EvcklTNTRmYkQ3VE9yOE10NmlncHJJRUdZY2x2WDIrbVJjNmpBMGVjaDEva3lBMEZHSnRxalNhSTdpQjVVWHFqWE5zU3NxaS92OUhpNkhnaHdTRTlod3FUQ2hrZkF4VDdjVHJwNUVZaDQ5YytCVHdIU2c1bjNrN2FqaENaRUY5OVZwd2ZOSUtaV0RLS0NNdmpDRzFQM2pWeVBoVG4xSjN1VVhteGRWZmNwdkpaSlZoaEVmTFJEUnd4MkxiVTRCcnUyekpzUzRKUXovdXNTNkxBZGxQQ1FPVHhiWmZYWXBhZWRpNElvVnhVPSJdfQ.MEI4NDYyNDA5RkQxMTE3QjU2QTVBNEEyQkNFRDY1RkIxMUQxMUI5NjFBQ0I5MjE0NUVDN0I4RTkxNzM4OEQ4Qw.hEr3KRLV8BqS0-9gBtmZfz8sfEGJDZx5xx9Zd6nfvfh8-HB_5e_soROtGPoJVUVgszto53FJSdQ4rjUBtXY3wLeq6KptFe4gl3shCxvEAkwRtlDLav4Qfaaat16_Y2N738PAI1vZ1bXpXN1VUyohxmbFLoMc3BYND62qAyibzH1A3bswqyS4IhEN7ksCT-rMmJ9izkxKgjF4o3kZYWj1FvvseqKiOR54Q5WAWYRS_9pc0RqvTl0YV-Bu1kVsFORy-ELQ2-4p-qnm5KhLBve8vmVEx51JHTknIljEQzv7LuoJHxvy1he3hEKQIDZizqdzoo74NGznATgIWzqNBdmo1g";
//		String signatureTxt = "eyJhbGciOiJSUzI1NiIsInR5cCI6Imp3dCIsIng1YyI6WyJNSUlFSnpDQ0F3K2dBd0lCQWdJR0FXNGJwTTArTUEwR0NTcUdTSWIzRFFFQkN3VUFNSUhDTVNVd0l3WUpLb1pJaHZjTkFRa0JGaFp6ZFhKbGMyaGlZV0oxUUhONWJtTmllWFJsTG1sdU1SZ3dGZ1lEVlFRREV3OVRWVkpGVTBnZ1FrRkNWU0JOUTBzeEd6QVpCZ05WQkFzVEVsTnZablIzWVhKbElGTnZiSFYwYVc5dWN6RXRNQ3NHQTFVRUNoTWtVM2x1WTJKNWRHVWdTVzV1YjNaaGRHbHZibk1nVUhKcGRtRjBaU0JNYVcxcGRHVmtNUkl3RUFZRFZRUUhFd2xDUVU1SFFVeFBVa1V4RWpBUUJnTlZCQWdUQ1V0QlVrNUJWRUZMUVRFTE1Ba0dBMVVFQmhNQ1NVNHdIaGNOTVRreE1ETXdNRGMxTURFMVdoY05NVGt4TVRJNU1EYzFNREUxV2pDQnh6RXdNQzRHQTFVRUF3d25jbVJmWW1Nd1lqWTRORGd0Tm1RME5TMDBObVF4TFdFNVltUXRZak16TkRReE1HSm1PREl6TVFzd0NRWURWUVFHRXdKSlRqRVNNQkFHQTFVRUNCTUpTMkZ5Ym1GMFlXdGhNUkl3RUFZRFZRUUhFd2xDWVc1bllXeHZjbVV4SVRBZkJna3Foa2lHOXcwQkNRRVdFbUZrYldsdVFITjVibU5pZVhSbExtTnZiVEVNTUFvR0ExVUVDeE1EWkdWMk1TMHdLd1lEVlFRS0V5UlRXVTVEUWxsVVJTQkpUazVQVmtGVVNVOU9VeUJRVWtsV1FWUkZJRXhKVFVsVVJVUXdnZ0VoTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRGdBd2dnRUpBb0lCQUxIWEl5MzVVMnJnRGpOZStvZHEza2dYNC9CT0UxMkVFQkIrb3pMYUVnWnVRbjBGOVNDVWxGckZtZlFPbzVuZlBHbi9FQnlpdEg4cXVLM1F5SUw0OVRYWnZmUlFpcG4rcW0xSUMvNzJUQ1k4WmZPR2dkeUduVExSUEhkc25JcnJ5dlB2NlBJOTl6UzU5WjlndG9kSmFNV04waHBwamZYek1xd0pSbkpabEpZbVExRzMxRlhzbVBNYVkrSFhNSURoY0MyUFBjVEhESGtsRTdUZkNlQzk5dVMwNit4OUt3VDRGTkJqdGErQURsRlZoc2ZlYnNsQmVDbjRVSjl3aGNmcTF5dGdRSlYyZlZnRXBndXp0aVk3M2ZHWnFxZDA0UEViNmorVGlTeE0zeUE3aVhOeS9FTDRFVVROajVrc2R3Q0FqUlRGalhINS94TXpvalF2bVR3eHl5a0NBd0VBQWFNZE1Cc3dEQVlEVlIwVEJBVXdBd0VCL3pBTEJnTlZIUThFQkFNQ0FZWXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSGJDSEVmaHJkS3pKajU1L2p3WGVqTzFsclVVZjcycWRtVE03MTRSbFNETnBaK1JlQUZ1Z1UwejlwMHY0ZU93eFpHZWNwN0Eyc3k2UGZUMmF0TzY3eEp4UHMrQkVBZTY2cnNNK09pZmFxM0Fhd3EvcklTNTRmYkQ3VE9yOE10NmlncHJJRUdZY2x2WDIrbVJjNmpBMGVjaDEva3lBMEZHSnRxalNhSTdpQjVVWHFqWE5zU3NxaS92OUhpNkhnaHdTRTlod3FUQ2hrZkF4VDdjVHJwNUVZaDQ5YytCVHdIU2c1bjNrN2FqaENaRUY5OVZwd2ZOSUtaV0RLS0NNdmpDRzFQM2pWeVBoVG4xSjN1VVhteGRWZmNwdkpaSlZoaEVmTFJEUnd4MkxiVTRCcnUyekpzUzRKUXovdXNTNkxBZGxQQ1FPVHhiWmZYWXBhZWRpNElvVnhVPSJdfQ.NzNENDcwQ0JBRkVFRDJDNDY5RUY5RjBDNzZBNzM0NzFBOThGNkRBQUIwNkRDMzBEM0QzMjYxRjVCM0M5MkRDNQ.m6aD227GzjZz9ueIy81wLtNjEMQ8W-S62Wg9QSkzUmzi2d-nZj4fgWsaj0ja6xlK8gH1kqnjQtOmzTQohaNEW0nP4wtmC9op6MzDtonYGSf-nAlzNiQAojYq3mUp7mTLGts0LwiZSOCp4eG9wfz-sal8AX4VHl0Z5jO2GZ9WBt8dXAWm1dWTNmIOz1g_adY14lc9E9Zhw0zDU5p540v7-oNgh6XzF2xrtU9zTkQKScD_afaxjVLl5yJwKPzbRk6PaeaDR65_9f5VEfjGhqrCzP7J7aJgIr3T863vw6j6C2i1U9_apfXQ0ilUQK2LUFAk3V6PHEhAsn70R4aJQ0wJ3g.eyJhbGciOiJSUzI1NiIsInR5cCI6Imp3dCIsIng1YyI6WyJNSUlFSnpDQ0F3K2dBd0lCQWdJR0FXNGJwTTArTUEwR0NTcUdTSWIzRFFFQkN3VUFNSUhDTVNVd0l3WUpLb1pJaHZjTkFRa0JGaFp6ZFhKbGMyaGlZV0oxUUhONWJtTmllWFJsTG1sdU1SZ3dGZ1lEVlFRREV3OVRWVkpGVTBnZ1FrRkNWU0JOUTBzeEd6QVpCZ05WQkFzVEVsTnZablIzWVhKbElGTnZiSFYwYVc5dWN6RXRNQ3NHQTFVRUNoTWtVM2x1WTJKNWRHVWdTVzV1YjNaaGRHbHZibk1nVUhKcGRtRjBaU0JNYVcxcGRHVmtNUkl3RUFZRFZRUUhFd2xDUVU1SFFVeFBVa1V4RWpBUUJnTlZCQWdUQ1V0QlVrNUJWRUZMUVRFTE1Ba0dBMVVFQmhNQ1NVNHdIaGNOTVRreE1ETXdNRGMxTURFMVdoY05NVGt4TVRJNU1EYzFNREUxV2pDQnh6RXdNQzRHQTFVRUF3d25jbVJmWW1Nd1lqWTRORGd0Tm1RME5TMDBObVF4TFdFNVltUXRZak16TkRReE1HSm1PREl6TVFzd0NRWURWUVFHRXdKSlRqRVNNQkFHQTFVRUNCTUpTMkZ5Ym1GMFlXdGhNUkl3RUFZRFZRUUhFd2xDWVc1bllXeHZjbVV4SVRBZkJna3Foa2lHOXcwQkNRRVdFbUZrYldsdVFITjVibU5pZVhSbExtTnZiVEVNTUFvR0ExVUVDeE1EWkdWMk1TMHdLd1lEVlFRS0V5UlRXVTVEUWxsVVJTQkpUazVQVmtGVVNVOU9VeUJRVWtsV1FWUkZJRXhKVFVsVVJVUXdnZ0VoTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRGdBd2dnRUpBb0lCQUxIWEl5MzVVMnJnRGpOZStvZHEza2dYNC9CT0UxMkVFQkIrb3pMYUVnWnVRbjBGOVNDVWxGckZtZlFPbzVuZlBHbi9FQnlpdEg4cXVLM1F5SUw0OVRYWnZmUlFpcG4rcW0xSUMvNzJUQ1k4WmZPR2dkeUduVExSUEhkc25JcnJ5dlB2NlBJOTl6UzU5WjlndG9kSmFNV04waHBwamZYek1xd0pSbkpabEpZbVExRzMxRlhzbVBNYVkrSFhNSURoY0MyUFBjVEhESGtsRTdUZkNlQzk5dVMwNit4OUt3VDRGTkJqdGErQURsRlZoc2ZlYnNsQmVDbjRVSjl3aGNmcTF5dGdRSlYyZlZnRXBndXp0aVk3M2ZHWnFxZDA0UEViNmorVGlTeE0zeUE3aVhOeS9FTDRFVVROajVrc2R3Q0FqUlRGalhINS94TXpvalF2bVR3eHl5a0NBd0VBQWFNZE1Cc3dEQVlEVlIwVEJBVXdBd0VCL3pBTEJnTlZIUThFQkFNQ0FZWXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSGJDSEVmaHJkS3pKajU1L2p3WGVqTzFsclVVZjcycWRtVE03MTRSbFNETnBaK1JlQUZ1Z1UwejlwMHY0ZU93eFpHZWNwN0Eyc3k2UGZUMmF0TzY3eEp4UHMrQkVBZTY2cnNNK09pZmFxM0Fhd3EvcklTNTRmYkQ3VE9yOE10NmlncHJJRUdZY2x2WDIrbVJjNmpBMGVjaDEva3lBMEZHSnRxalNhSTdpQjVVWHFqWE5zU3NxaS92OUhpNkhnaHdTRTlod3FUQ2hrZkF4VDdjVHJwNUVZaDQ5YytCVHdIU2c1bjNrN2FqaENaRUY5OVZwd2ZOSUtaV0RLS0NNdmpDRzFQM2pWeVBoVG4xSjN1VVhteGRWZmNwdkpaSlZoaEVmTFJEUnd4MkxiVTRCcnUyekpzUzRKUXovdXNTNkxBZGxQQ1FPVHhiWmZYWXBhZWRpNElvVnhVPSJdfQ.MDA4RThDRDdDRjgwQUIwNjk3MTE3NEQzQzNGRTRBRjA0NERENjMyQjZGMEJBQUUzODhFNjcxMUNFQjFDOUNFMA.qUwhV9g7T_L4pHXttTjtd1bRUXl7TvpJRH7Q7iQALQFj5UB1xiytCoNCMscjs16l4JQBInxdcyNUzJGRoTgIu_sMl_FT4JPcLqDm9sUrhIPmmP2rVkrYvjK-0USnje6qNifawpqUVe01ywWoMjPy7xURzLbBlygZ52VcfP2EIiJ2fOFldZR20LAKZ8vnimAW_dicpdVrKGhqX8AIp6Roaq6hpKCfTcqjA1pRWUNsh-X1hA-av-HOoPVpwUdhbuSZRSZZpySLGyPNtpeyOmL-YYRkjIPSetKLzxbM4bYj3do7v4A09Y93EaYtwDjNm6Fmkx8Vo4c5P0GL7Nc-EGmxRw";
		String signatureTxt = "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2p3dC1pZHAuZXhhbXBsZS5jb20iLCJzdWIiOiJtYWlsdG86bWlrZUBleGFtcGxlLmNvbSIsIm5iZiI6MTU3MzAzODU4NiwiZXhwIjoxNTczMDQyMTg2LCJpYXQiOjE1NzMwMzg1ODYsImp0aSI6ImlkMTIzNDU2IiwidHlwIjoiaHR0cHM6Ly9leGFtcGxlLmNvbS9yZWdpc3RlciJ9.YqaamfHJ3jXDN3uA3NIfP4BIMF19YwlklSRJ8njOFGHbcxw_6ZwfnCF1hSbTV_-ZtiTDaFb7V5PMDDH5yii-bu__4u1BtdaKZHtExaqT_CxUZ5SdibxayaCmZRftO1VppGlTvFSd7E89ucVHILU3v247_50NalYi0dE4sP5-wNhqQIDhXQlGawOItJzwExZPPwFv5X1PSENG4xIPvUl6COzaKTrqvTTqvmUHF8FajIFXrnTnQj6b-Zau6_J7ga24sD8XPZ5xL3U11De4X4aI9BZaulFXZmmHAyofFwlgYeUcBOkMFlT4ERVxOggruwOnVqPy21QJLA3Y9sIOCNvNWQ";
		//String[] payloadSignTxt = Arrays.stream(signatureTxt.split("\\.")).skip(3).toArray(s -> new String[s]);
		//String bioSign = Arrays.stream(payloadSignTxt).collect(Collectors.joining("."));
		String bioSign = signatureTxt;
//		String header = payloadSignTxt[0];
//		
//		
//		byte[] decodeBase64 = Base64.decodeBase64(header);
//		
//		JSONObject jsonObject = new JSONObject(new String(decodeBase64));
//		String certStr = jsonObject.getString("x5c");
//		JSONArray jsonArray = new JSONArray(certStr);
//		System.out.println(jsonArray.getString(0));

		
//		CertificateFactory cf;
//		try {
//			cf = CertificateFactory.getInstance("X.509");
//			System.out.println(decodeBase64.length);
//			
//			
////			X509Certificate certificate = (X509Certificate) cf.generateCertificate(
////					new ByteArrayInputStream(Base64.getDecoder().decode(header)));
//			X509Certificate certificate = (X509Certificate) cf.generateCertificate(
//					new ByteArrayInputStream(jsonArray.getString(0).getBytes()));
//			
//			
//			System.out.println(certificate);
//		} catch (CertificateException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
		
		//verifySign1(bioSign);
		System.out.println(verifySignature(bioSign));

	}
	
	public static boolean verifySignature(String sign) {
		try {
			JsonWebSignature jws = new JsonWebSignature();
			jws.setCompactSerialization(sign);
			List<X509Certificate> certificateChainHeaderValue = jws.getCertificateChainHeaderValue();
            X509Certificate certificate = certificateChainHeaderValue.get(0);
			certificate.checkValidity();
			PublicKey publicKey = certificate.getPublicKey();
			certificate.verify(publicKey);
			jws.setKey(publicKey);

			jws.setKey(publicKey);
			return jws.verifySignature();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return false;

	}

	private static void verifySign1(String bioSign) {
		try {
//			jws.setAlgorithmHeaderValue(AlgorithmIdentifiers.RSA_USING_SHA256);
			JsonWebSignature jws = new JsonWebSignature();
			jws.setCompactSerialization(bioSign);
			System.out.println(jws.toString());
			List<X509Certificate> certificateChainHeaderValue = jws.getCertificateChainHeaderValue();
			//System.out.println(certificateChainHeaderValue.get(0));
			X509Certificate certificate = certificateChainHeaderValue.get(0);
			certificate.checkValidity();
			PublicKey publicKey = certificate.getPublicKey();
			certificate.verify(publicKey);
			jws.setKey(publicKey);
			boolean signValid = jws.verifySignature();
			System.out.println(signValid);
		} catch (JoseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
		catch (CertificateExpiredException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
		catch (CertificateNotYetValidException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
//		catch (InvalidKeyException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		} catch (CertificateException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		} catch (NoSuchAlgorithmException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		} catch (NoSuchProviderException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		} catch (SignatureException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
		catch (InvalidKeyException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (CertificateException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (NoSuchAlgorithmException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (NoSuchProviderException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SignatureException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}

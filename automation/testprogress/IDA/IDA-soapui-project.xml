<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="3b3106bb-e24b-49ea-a229-d8383b3d45fc" activeEnvironment="Default" name="ida-soapui-project" resourceRoot="" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" encryptionMode="Not encrypted" updated="2.5.0 2018-09-14T14:45:07Z" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:RestService" id="a1c28675-144e-4bf5-9ebd-563490bb1f2c" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://13.71.81.26:8081" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    
    <con:definitionCache type="TEXT" rootPart=""/><con:endpoints>
      <con:endpoint>http://13.71.81.26:8081</con:endpoint>
    </con:endpoints>
    <con:resource name="otp" path="/identity/otp" id="61502a1d-5ed3-462d-a799-de3dc82aa3dd">
      <con:settings/>
      <con:parameters/>
      <con:method name="Method 1" id="c7e78ba2-9760-4ad7-9f2b-afe8c212fe72" method="POST">
        <con:settings/>
        <con:parameters/>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>text/html;charset=utf-8</con:mediaType>
          <con:status>403</con:status>
          <con:params/>
          <con:element>html</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType xsi:nil="true"/>
          <con:status>404</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json;charset=UTF-8</con:mediaType>
          <con:status>500 404</con:status>
          <con:params/>
          <con:element xmlns:otp="http://13.71.81.26/otp">otp:Fault</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json;charset=ISO-8859-1</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:element xmlns:otp="http://13.71.81.26/otp">otp:Fault</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json;charset=UTF-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:otp="http://13.71.81.26/otp">otp:Response</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:request name="Request 1" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://172.23.36.116:8081</con:endpoint>
          <con:request>{
  "id": "426789089018",
  "idType": "D",
  "msaLicenseKey": "ASHISH1234",
  "muaCode": "RASTOGI123",
  "reqTime": "2018-11-05T16:00:56.398Z",
  "txnID": "ASHISH1233",
  "ver": "1.0"
}</con:request>
          <con:originalUri>http://13.71.81.26/otp</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="auth" path="/identity/auth" id="c435cc0a-38d8-410d-850e-81cb1ce38970">
      <con:settings/>
      <con:parameters/>
      <con:method name="Method 1" id="ad69aada-ec43-4055-b292-b1f4f8dd0f3b" method="POST">
        <con:settings/>
        <con:parameters/>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json;charset=ISO-8859-1</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element xmlns:auth="http://13.71.81.26/identity/auth">auth:Response</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/json;charset=ISO-8859-1</con:mediaType>
          <con:status>500</con:status>
          <con:params/>
          <con:element xmlns:auth="http://13.71.81.26/identity/auth">auth:Fault</con:element>
        </con:representation>
        <con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="fab9cb96-10b7-44a1-80f6-57121e66a3e6" mediaType="application/json" postQueryString="false">
          <con:settings/>
          <con:endpoint>http://13.71.81.26:8081</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="getOTP" path="/identity/getOTP" id="6d837cd0-ed95-4d5e-bb3e-1a3aebd5c1a4">
      <con:settings/>
      <con:parameters/>
      <con:method name="Method 1" id="1c48d48d-9fc4-4c68-a77c-6971a7d4b08b" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:request name="Request 1" id="11edb9ac-7b12-4abf-9f85-3e6d90307d80" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://13.71.81.26:8081</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  
  
  
  <con:testSuite id="764e0220-a44e-49c6-be22-e3426ac8457a" name="otpGenerator_MOS-27">
    <con:description>TestSuite generated for REST Service [http://13.71.81.26:8081]</con:description>
    <con:settings>
      <con:setting id="IncludeOverview">true</con:setting>
      <con:setting id="IncludeResults">true</con:setting>
      <con:setting id="FlowLayout">false</con:setting>
      <con:setting id="ErrorDetails">true</con:setting>
      <con:setting id="IncludeCoverage">true</con:setting>
      <con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting>
      <con:setting id="GeneratableJUnitReport@Folder"/>
    </con:settings>
    <con:savedRecentRuns>1</con:savedRecentRuns>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="9c87d2a8-1832-4a3e-bfa1-8bb2b7e854e0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="init" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="groovy" name="Groovy Script" id="9efc3e74-a4c5-4370-a0b5-837d9e654fdf">
        <con:settings/>
        <con:config><script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

import lib.*;
def lastDate = Instant.now();//current time
def time20minutebefore=Instant.now().minus(Duration.ofSeconds(20*60));//time20minutebefore


//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.testSuite.setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.testSuite.setPropertyValue("timestamp20minutebefore",time20minutebefore.toString());

log.info(System.getProperty("user.dir"));
def inputFile = new File("C:\\soapui\\InputData.json");


def InputJSON = new JsonSlurper().parseText(inputFile.text);
log.info(InputJSON[0].pos.muaCode)
	testRunner.testCase.testSuite.setPropertyValue("posid",InputJSON[0].pos.id);
	testRunner.testCase.testSuite.setPropertyValue("negid",InputJSON[0].neg.id);
	testRunner.testCase.testSuite.setPropertyValue("posvid",InputJSON[0].pos.vid);
	testRunner.testCase.testSuite.setPropertyValue("negvid",InputJSON[0].neg.vid);
	testRunner.testCase.testSuite.setPropertyValue("posidType",InputJSON[0].pos.idType);
	testRunner.testCase.testSuite.setPropertyValue("negidType",InputJSON[0].neg.idType);
	testRunner.testCase.testSuite.setPropertyValue("posvidType",InputJSON[0].pos.vidType);
	testRunner.testCase.testSuite.setPropertyValue("negvidType",InputJSON[0].neg.vidType);
	//log.info(${#TestSuite#negvidType})
	testRunner.testCase.testSuite.setPropertyValue("posmsaLicenseKey",InputJSON[0].pos.msaLicenseKey);
	testRunner.testCase.testSuite.setPropertyValue("negmsaLicenseKey",InputJSON[0].neg.msaLicenseKey);
	testRunner.testCase.testSuite.setPropertyValue("posmuaCode",InputJSON[0].pos.muaCode);
	testRunner.testCase.testSuite.setPropertyValue("negmuaCode",InputJSON[0].neg.muaCode);
	testRunner.testCase.testSuite.setPropertyValue("postxnID",InputJSON[0].pos.txnID);
	testRunner.testCase.testSuite.setPropertyValue("negtxnID",InputJSON[0].neg.txnID);
	testRunner.testCase.testSuite.setPropertyValue("posver",InputJSON[0].pos.ver);
	testRunner.testCase.testSuite.setPropertyValue("negver",InputJSON[0].neg.ver);</script></con:config>
      </con:testStep>
      <con:testStep type="transfer" name="Property Transfer" id="e8a83504-900f-4148-aca5-c4fe56eba576" disabled="true">
        <con:settings/>
        <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="true" entitize="false" transferChildNodes="false" disabled="false">
            <con:name>currentDate</con:name>
            <con:sourceType>result</con:sourceType>
            <con:sourceStep>Groovy Script</con:sourceStep>
            <con:sourcePath>${TestSuite#timestamp}</con:sourcePath>
            <con:targetType>timestamp</con:targetType>
            <con:targetStep>#TestSuite#</con:targetStep>
            <con:targetPath>timestamp</con:targetPath>
            <con:type>XQUERY</con:type>
            <con:targetTransferType>JSONPATH</con:targetTransferType>
            <con:upgraded>true</con:upgraded>
          </con:transfers>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC Request" id="17d67e95-4bc3-4a89-ae5d-cc245198dcc5" disabled="true">
        <con:settings>
          <con:setting id="prettyPrintResponse">true</con:setting>
        </con:settings>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName xsi:nil="true"/>
          <con:connectionProperties/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-06T05:56:37.515Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>d752e069-67e6-48cb-a7b0-442b04e56148</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>6c60e08f-3771-4936-b26b-be76b6f314f7</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase id="457a1185-9a1e-4a64-ba91-5728118e21e1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_smokeTest" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="Trigger_OTP" id="7e82df28-d2cb-4b75-9922-61012b4a5ba6">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Trigger_OTP" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posid}",
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>Y</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['errorCode']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>${Trigger_OTP#RawRequest#$['txnID']}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Existence Match" id="4ca53e6c-b26c-4b3d-86d0-c8d7794ca02a" name="ResponseTime">
              <con:configuration>
                <path>$['responseTime']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="MaskedEmail">
              <con:configuration>
                <path>$['maskedEmail']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="2bcd9d9d-728f-4471-8a1d-8bcd77b13c7a" name="MaskedMobile">
              <con:configuration>
                <path>$['maskedMobile']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="cb41e716-b983-411b-b9e7-dc08ce48dba5" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedMobile[1]</con:xpath>
                  <con:element>maskedMobile</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedEmail[1]</con:xpath>
                  <con:element>maskedEmail</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://13.71.81.26/otp">
   <status>Y</status>
   <errorCode null="true"/>
   <txnID>ASHISH1233</txnID>
   <responseTime>2018-11-06T09:59:22.994+0000</responseTime>
   <maskedMobile/>
   <maskedEmail/>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration><SLA>4000</SLA></con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="Script Assertion">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSSZ";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.responseTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>id</con:name>
          <con:value>"426789089018"</con:value>
        </con:property>
        <con:property>
          <con:name>idType</con:name>
          <con:value>"D"</con:value>
        </con:property>
        <con:property>
          <con:name>msaLicenseKey</con:name>
          <con:value>"ASHISH1234"</con:value>
        </con:property>
        <con:property>
          <con:name>muaCode</con:name>
          <con:value>"ASHISH1111"</con:value>
        </con:property>
        <con:property>
          <con:name>txnID</con:name>
          <con:value>"ASHISH1233"</con:value>
        </con:property>
        <con:property>
          <con:name>ver</con:name>
          <con:value>"1.0"</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="84b9a9e6-ba66-417d-98b0-978873586ba1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TriggerOTP_Valid_VId" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="Trigger_OTP_VIDD" id="4d51e7b8-e8f7-4479-b7f5-401cb9d3b806">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Trigger_OTP_VIDD" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
    "id": ${#TestSuite#ValidVid},
   "idType" : "V",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
     "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>Y</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['errorCode']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="txnId">
              <con:configuration>
                <path>txnID</path>
                <content>${Trigger_OTP_VIDD#RawRequest#$['txnID']}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Existence Match" id="4ca53e6c-b26c-4b3d-86d0-c8d7794ca02a" name="ResponseTime">
              <con:configuration>
                <path>$['responseTime']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="MaskedEmail">
              <con:configuration>
                <path>$['maskedEmail']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="2bcd9d9d-728f-4471-8a1d-8bcd77b13c7a" name="MaskedMobile">
              <con:configuration>
                <path>$['maskedMobile']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="cb41e716-b983-411b-b9e7-dc08ce48dba5" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedMobile[1]</con:xpath>
                  <con:element>maskedMobile</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedEmail[1]</con:xpath>
                  <con:element>maskedEmail</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://13.71.81.26/otp">
   <status>Y</status>
   <errorCode null="true"/>
   <txnID>ASHISH1233</txnID>
   <responseTime>2018-11-06T09:59:22.994+0000</responseTime>
   <maskedMobile/>
   <maskedEmail/>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="Script Assertion">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSSZ";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.responseTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="ccd2847e-c0ab-4e34-b679-f5bb3826e459" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TimeStamp_Of_OTP_EqualTo_20_Min_UID" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="Trigger_OTP_VIDD" id="fc5d3386-77db-4c94-9780-decb739e5d9d">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Trigger_OTP_VIDD" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
    "id": ${#TestSuite#ValidVid},
   "idType" : "V",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
     "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>Y</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['errorCode']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="txnId">
              <con:configuration>
                <path>txnID</path>
                <content>${Trigger_OTP_VIDD#RawRequest#$['txnID']}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Existence Match" id="4ca53e6c-b26c-4b3d-86d0-c8d7794ca02a" name="ResponseTime">
              <con:configuration>
                <path>$['responseTime']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="MaskedEmail">
              <con:configuration>
                <path>$['maskedEmail']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="2bcd9d9d-728f-4471-8a1d-8bcd77b13c7a" name="MaskedMobile">
              <con:configuration>
                <path>$['maskedMobile']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="cb41e716-b983-411b-b9e7-dc08ce48dba5" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedMobile[1]</con:xpath>
                  <con:element>maskedMobile</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedEmail[1]</con:xpath>
                  <con:element>maskedEmail</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://13.71.81.26/otp">
   <status>Y</status>
   <errorCode null="true"/>
   <txnID>ASHISH1233</txnID>
   <responseTime>2018-11-06T09:59:22.994+0000</responseTime>
   <maskedMobile/>
   <maskedEmail/>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration><SLA>4000</SLA></con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="Script Assertion">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSSZ";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.responseTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="8ee65e5a-1e53-40be-8274-ae60542da048" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TimeStamp_Of_OTP_Olderthan_20_Min_UID" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="TimeStamp_Older_Than_20_Min" id="2115a5e7-ba9a-4e27-8e7b-a75f7d454059">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="TimeStamp_Older_Than_20_Min" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp20minutebefore}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-OTA-002</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Request received at MOSIP is 20 min post the initiation at TSP</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="dateFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			    assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="8c1c32ca-8b03-451d-addf-18f1438338c1" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-OTA-002</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Request received at MOSIP is 20 min post the initiation at TSP</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-OTA-002</errorCode>
         <errorMessage>Request received at MOSIP is 20 min post the initiation at TSP</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T12:12:59.963Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="0aff0cef-51cd-4552-bd75-3b08a9e1ebdb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_Without_uid_Parameters" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="Without_uid_Parameter" id="65b1fcfc-1570-4772-83bd-190dc7070b28">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Without_uid_Parameter" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id":"" ,
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-MLC-002</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Invalid UIN</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="info" disabled="true">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="afca74b5-81cf-4a52-a2ca-26561747e234" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-MLC-002</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Invalid UIN</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-MLC-002</errorCode>
         <errorMessage>Invalid UIN</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T12:27:42.563Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="06a68c4b-1f6f-46e7-9f81-4e6ac2cc56b0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_Without_ver" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="OTP_ Without_ver" id="25d51c7a-b068-46df-8f23-0f1f179c1466">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="OTP_ Without_ver" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id":"${#TestSuite#posid}" ,
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : ""
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>Digits</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>numeric value out of bounds (&lt;1 digits>.&lt;1 digits> expected)</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSSZ";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.responseTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="ca66fede-62da-4c2c-a71e-db6e313795bc" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Digits</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>numeric value out of bounds (&lt;1 digits>.&lt;1 digits> expected)</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>Digits</errorCode>
         <errorMessage>numeric value out of bounds (&lt;1 digits>.&lt;1 digits> expected)</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T12:45:20.281Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="8c5f549f-0ea4-4f41-837d-699670c5fc15" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_Without_reqTime" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="OTP_ Without_reqTime" id="b27a0b26-5d07-4680-8966-12f6e72f17ff">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="OTP_ Without_reqTime" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-DTV-IDV-004</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Unknown error occured</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="5693ee6d-0b0e-4933-b26b-484e2e69bbd1" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-DTV-IDV-004</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Unknown error occured</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-DTV-IDV-004</errorCode>
         <errorMessage>Unknown error occured</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T12:49:21.245Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="1e54b571-f562-48a8-9061-0e187581d31b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_Without_txnID" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="OTP_ Without_txnID" id="acd2304f-9376-46a6-9480-470c91e83601">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="OTP_ Without_txnID" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>Pattern</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>must match "^[A-Z0-9]{10}"</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="b9efe227-0dce-49e8-8cbc-086cc069df23" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Pattern</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>must match "^[A-Z0-9]{10}"</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>Pattern</errorCode>
         <errorMessage>must match "^[A-Z0-9]{10}"</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T13:28:33.754Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="8d96a773-81d6-4b87-b9a8-4ef535fc1721" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_FLOOD" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="groovy" name="Groovy Script" id="31f73ca6-87cb-4c74-90a4-769153b8fdab" disabled="true">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.support.GroovyUtils;
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

if( context.loopIndex == null )
context.loopIndex = 3
for(int i=0;i&lt;context.loopIndex;i++){
def tStep = testRunner.testCase.testSteps["OTP_Request"]
log.info(tStep)
tStep.run(testRunner, context)
def ResponseMessage = testRunner.testCase.testSteps["OTP_Request"].testRequest.response.contentAsString
//def addReq= testRunner.testCase.testSuite.testCases["Test_Generate_OTP"].testSteps["GenOTP"].getPropertyValue("Request")
//log.info("Request" + addReq)
log.info("Response" + ResponseMessage) 	
//log.info(resonseBody);
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Trigger_OTP1" id="799d9a4d-9f95-4562-a061-4500cd802606">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Trigger_OTP1" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>Y</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['errorCode']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>${Trigger_OTP1#RawRequest#$['txnID']}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Existence Match" id="4ca53e6c-b26c-4b3d-86d0-c8d7794ca02a" name="ResponseTime">
              <con:configuration>
                <path>$['responseTime']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="MaskedEmail">
              <con:configuration>
                <path>$['maskedEmail']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="2bcd9d9d-728f-4471-8a1d-8bcd77b13c7a" name="MaskedMobile">
              <con:configuration>
                <path>$['maskedMobile']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="cb41e716-b983-411b-b9e7-dc08ce48dba5" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedMobile[1]</con:xpath>
                  <con:element>maskedMobile</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedEmail[1]</con:xpath>
                  <con:element>maskedEmail</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://13.71.81.26/otp">
   <status>Y</status>
   <errorCode null="true"/>
   <txnID>ASHISH1233</txnID>
   <responseTime>2018-11-06T09:59:22.994+0000</responseTime>
   <maskedMobile/>
   <maskedEmail/>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1310</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="Script Assertion">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSSZ";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.responseTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="3e82ab11-6aa3-4c1f-bdbe-5d04f9527cc8">
              <con:configuration/>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Trigger_OTP2" id="8721062c-78b2-47c6-881e-4dceecbdccfe">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Trigger_OTP2" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>Y</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['errorCode']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>${Trigger_OTP2#RawRequest#$['txnID']}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Existence Match" id="4ca53e6c-b26c-4b3d-86d0-c8d7794ca02a" name="ResponseTime">
              <con:configuration>
                <path>$['responseTime']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="MaskedEmail">
              <con:configuration>
                <path>$['maskedEmail']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="2bcd9d9d-728f-4471-8a1d-8bcd77b13c7a" name="MaskedMobile">
              <con:configuration>
                <path>$['maskedMobile']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="cb41e716-b983-411b-b9e7-dc08ce48dba5" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedMobile[1]</con:xpath>
                  <con:element>maskedMobile</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedEmail[1]</con:xpath>
                  <con:element>maskedEmail</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://13.71.81.26/otp">
   <status>Y</status>
   <errorCode null="true"/>
   <txnID>ASHISH1233</txnID>
   <responseTime>2018-11-06T09:59:22.994+0000</responseTime>
   <maskedMobile/>
   <maskedEmail/>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="Script Assertion">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSSZ";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.responseTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="3e82ab11-6aa3-4c1f-bdbe-5d04f9527cc8">
              <con:configuration/>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Trigger_OTP3" id="37bce047-5658-4ce1-8297-86749fc33b18">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Trigger_OTP3" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>Y</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['errorCode']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>${Trigger_OTP3#RawRequest#$['txnID']}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Existence Match" id="4ca53e6c-b26c-4b3d-86d0-c8d7794ca02a" name="ResponseTime">
              <con:configuration>
                <path>$['responseTime']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="MaskedEmail">
              <con:configuration>
                <path>$['maskedEmail']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="2bcd9d9d-728f-4471-8a1d-8bcd77b13c7a" name="MaskedMobile">
              <con:configuration>
                <path>$['maskedMobile']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="cb41e716-b983-411b-b9e7-dc08ce48dba5" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Y</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:errorCode[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedMobile[1]</con:xpath>
                  <con:element>maskedMobile</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Response[1]/ns1:maskedEmail[1]</con:xpath>
                  <con:element>maskedEmail</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue xsi:nil="true"/>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Response xmlns="http://13.71.81.26/otp">
   <status>Y</status>
   <errorCode null="true"/>
   <txnID>ASHISH1233</txnID>
   <responseTime>2018-11-06T09:59:22.994+0000</responseTime>
   <maskedMobile/>
   <maskedEmail/>
</Response>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="Script Assertion">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSSZ";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.responseTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="3e82ab11-6aa3-4c1f-bdbe-5d04f9527cc8">
              <con:configuration/>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Trigger_OTP4_FLOOD" id="99146cea-06ed-40f5-b9ac-a17f3cc9a15b">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Trigger_OTP4_FLOOD" id="8ddae355-389a-42e3-8dc7-5c6a9964f261" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://172.23.29.101/identity/otp</con:originalUri>
            <con:assertion type="Invalid HTTP Status Codes" id="87ea55d2-3b84-45cb-ae37-52379d191120" name="Invalid HTTP Status Codes">
              <con:configuration><codes>200</codes></con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="e3761cca-e9ec-44b5-995c-64ae47339efd" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration><codes>500</codes></con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="11ac3133-e2e5-489b-a391-e9ae5c62d670" name="JsonPath Match">
              <con:configuration>
                <path>$['status']</path>
                <content>false</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="71b0bfc1-a073-4b71-a297-d3b1020e3654" name="JsonPath Match 2">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-OTA-003</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="17795973-7471-4e71-9bf1-266a0baa1f25" name="JsonPath Match 3">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Innumerous OTP requests received</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="08ea2c6e-d760-4e3c-afaa-47b3c689f06a" name="Script Assertion">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>e2778650-ace5-4d9c-9c80-f274ef87eb39</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
      <con:breakPoints>
        <con:testStepId>e25e1e44-90d3-4bc9-b81e-3abf124d5896</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:testCase id="7da63d57-6594-4fcf-9b5d-108706db7387" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_With_Invalid_id_Parameter" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="invalidUID" id="d5f44c4c-158c-42cf-a186-1ccb09d107e3">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="invalidUID" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id":"${#TestSuite#negid}" ,
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-MLC-002</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Invalid UIN</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="afca74b5-81cf-4a52-a2ca-26561747e234" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-MLC-002</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Invalid UIN</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-MLC-002</errorCode>
         <errorMessage>Invalid UIN</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T12:27:42.563Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="612a413e-ea02-45a3-aa6d-98a886c2fa5a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_With_Invalid_ver" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="invalidVer" id="156921ff-06ee-4c47-b498-eca112d787df">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="invalidVer" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#negver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>Digits</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>numeric value out of bounds (&lt;1 digits>.&lt;1 digits> expected)</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="info">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="ca66fede-62da-4c2c-a71e-db6e313795bc" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Digits</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>numeric value out of bounds (&lt;1 digits>.&lt;1 digits> expected)</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>Digits</errorCode>
         <errorMessage>numeric value out of bounds (&lt;1 digits>.&lt;1 digits> expected)</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T12:45:20.281Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="b0fed019-dcc2-449c-9f12-8eb9ceab0ed1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_With_Invalid_reqTime" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="invalidReqTime" id="f2927121-e84d-430d-81d1-fabc60cd055f">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="invalidReqTime" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": ${#TestSuite#InvalidreqTime},
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-DTV-IDV-004</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Unknown error occured</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="5693ee6d-0b0e-4933-b26b-484e2e69bbd1" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-DTV-IDV-004</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Unknown error occured</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-DTV-IDV-004</errorCode>
         <errorMessage>Unknown error occured</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T12:49:21.245Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="cf490d2d-b14a-4b43-bc16-5367875992b6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_With_Invalid_txnID" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="invalidTxnID" id="3abd14df-6a1d-44f9-9d11-12cd31e902a3">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="invalidTxnID" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#negtxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>Pattern</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage" disabled="true">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>must match "^[A-Z0-9]{10}"</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="c5f4df44-cde5-48a4-80f3-79b9a4eaef05" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_With_Invalid_UID" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="invalidUID" id="a9e6cf36-7cdd-43f8-a063-9708fa7c2b57">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="invalidUID" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#negid},
   "idType" : "${#TestSuite#posidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-MLC-002</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Invalid UIN</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="87e53c23-9678-4956-b34a-004244635049" name="Message Content Assertion 2">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-MLC-002</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Invalid UIN</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-MLC-002</errorCode>
         <errorMessage>Invalid UIN</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T13:14:38.134Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="515ede9f-d902-43f0-9925-1a9e1b6b61a7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_With_Invalid_Vid" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="invalidVID" id="6209c57a-f962-4d44-9df7-b11e11fa2fee">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="invalidVID" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#negvid},
   "idType" : "${#TestSuite#posvidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-MLC-004</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Invalid VID</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="ca66fede-62da-4c2c-a71e-db6e313795bc" name="Message Content Assertion" disabled="true">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Digits</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>numeric value out of bounds (&lt;1 digits>.&lt;1 digits> expected)</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>Digits</errorCode>
         <errorMessage>numeric value out of bounds (&lt;1 digits>.&lt;1 digits> expected)</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T12:45:20.281Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="2d647765-92ae-445b-b2d7-51431712f480" name="Message Content Assertion 2">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-MLC-004</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Invalid VID</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-MLC-004</errorCode>
         <errorMessage>Invalid VID</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T13:17:05.515Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="538da89d-411c-49ed-94c7-fce6f3598b4f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_With_Invalid_UID_Type" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="Copy of invalidUID" id="75877077-ae69-4947-b21b-c3e586a5e143">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Copy of invalidUID" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posid},
   "idType" : "${#TestSuite#negidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-DTV-IDT-601</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Invalid ID type</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="e54b568a-6a23-4a84-aea8-67222d660d3b" name="Message Content Assertion 2">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-DTV-IDT-601</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Invalid ID type</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-DTV-IDT-601</errorCode>
         <errorMessage>Invalid ID type</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T13:19:30.067Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="295c67f2-a2f1-4624-a5e8-7165bb361d41" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Trigger_OTP_With_Invalid_VID_Type" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="invalidVIDType" id="23b7c76e-d768-4bcc-990b-031aa9a2b7a5">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="invalidVIDType" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posvid},
   "idType" : "${#TestSuite#timestamp}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-DTV-IDT-601</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Invalid ID type</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="e54b568a-6a23-4a84-aea8-67222d660d3b" name="Message Content Assertion 2">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-DTV-IDT-601</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Invalid ID type</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-DTV-IDT-601</errorCode>
         <errorMessage>Invalid ID type</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T13:19:30.067Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="8dc7abba-072f-4576-9642-6c8acc833b25" name="JsonPath Match">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Invalid ID type</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="cf9d3d15-8e4c-4c90-bd2e-0bbe10d35e8e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TimeStamp_Of_OTP_Olderthan_20_Min_VID" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="TimeStamp_Older_Than_20_Minn" id="b7ef7cbd-ce7e-4f66-935d-22213603d9a3">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="TimeStamp_Older_Than_20_Minn" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#TestSuite#endpoint}</con:endpoint>
            <con:request>{
  "id": ${#TestSuite#posvid},
   "idType" : "${#TestSuite#posvidType}",
   "msaLicenseKey" : "${#TestSuite#posmsaLicenseKey}",
   "muaCode" : "${#TestSuite#posmuaCode}",
    "reqTime": "${#TestSuite#timestamp20minutebefore}",
   "txnID" : "${#TestSuite#postxnID}",
   "ver" : "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/otp</con:originalUri>
            <con:assertion type="XPath Match" id="ec561e65-1ec6-40f8-b699-739633fec4c2" name="XPath Match">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="d0f6df15-b9d1-4787-9ff4-dd0bdb4a992c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="b200c032-68d6-47c9-a88a-87f812644752" name="Invalid HTTP Status Codes">
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="4a9bc155-251b-47dd-8ffa-7e17936133e6" name="status">
              <con:configuration>
                <path>$['status']</path>
                <content>N</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="1e1be71a-d040-4566-a248-fde82f79d7ce" name="errorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>IDA-OTA-002</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="b5699a85-10a8-4014-be8c-0a280443d425" name="errMessage">
              <con:configuration>
                <path>$['err'][0]['errorMessage']</path>
                <content>Request received at MOSIP is 20 min post the initiation at TSP</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="ec61ee2d-2125-4ffc-aa4d-1adea348b354" name="txnId">
              <con:configuration>
                <path>$['txnID']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="HTTP Header Equals" id="d234aa97-d3d9-45ac-86f0-7b18077d4f2e" name="HTTP Header ContentType">
              <con:configuration>
                <Header>Content-Type</Header>
                <Value>application/json;charset=UTF-8</Value>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="83e44d02-c00a-4ba9-b94e-1b61cbfafdee" name="Response SLA Time">
              <con:configuration>
                <SLA>1000</SLA>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="d2cddcb8-79a2-4b99-ba76-be986fb5633d" name="resTimeFormat">
              <con:configuration>
                <scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fe6586c2-06b9-44df-9332-dc30f7b94ac0" name="message_content">
              <con:configuration>
                <path>$['info']</path>
                <content>null</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="MessageContentAssertion" id="55b48960-5e2b-4af3-a367-d5e8ca5b3b22" name="Message Content Assertion">
              <con:configuration xsi:type="con:MessageContentAssertion">
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:status[1]</con:xpath>
                  <con:element>status</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>false</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorCode[1]</con:xpath>
                  <con:element>errorCode</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>IDA-OTA-002</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:err[1]/ns1:e[1]/ns1:errorMessage[1]</con:xpath>
                  <con:element>errorMessage</con:element>
                  <con:type xsi:nil="true"/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>Request received at MOSIP is 20 min post the initiation at TSP</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:txnID[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:elements>
                  <con:xpath>declare namespace ns1='http://13.71.81.26/otp';
//ns1:Fault[1]/ns1:info[1]/@null</con:xpath>
                  <con:element>@null</con:element>
                  <con:type/>
                  <con:operator>=</con:operator>
                  <con:enabled>true</con:enabled>
                  <con:expectedValue>true</con:expectedValue>
                  <con:hasValue>false</con:hasValue>
                  <con:numberType>false</con:numberType>
                </con:elements>
                <con:originalMessage><![CDATA[<Fault xmlns="http://13.71.81.26/otp">
   <status>false</status>
   <err>
      <e>
         <errorCode>IDA-OTA-002</errorCode>
         <errorMessage>Request received at MOSIP is 20 min post the initiation at TSP</errorMessage>
      </e>
   </err>
   <txnID null="true"/>
   <resTime>2018-11-08T13:40:05.684Z</resTime>
   <info null="true"/>
</Fault>]]></con:originalMessage>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties>
      <con:property>
        <con:name>ValidUid</con:name>
        <con:value>"426789089018"</con:value>
      </con:property>
      <con:property>
        <con:name>UidType</con:name>
        <con:value>"D"</con:value>
      </con:property>
      <con:property>
        <con:name>ValidmsaLicenseKey</con:name>
        <con:value>"MUAKEY1234"</con:value>
      </con:property>
      <con:property>
        <con:name>ValidtxnID</con:name>
        <con:value>"InMUAKEY1233"</con:value>
      </con:property>
      <con:property>
        <con:name>Validver</con:name>
        <con:value>"1.0"</con:value>
      </con:property>
      <con:property>
        <con:name>ValidVid</con:name>
        <con:value>"5371843613598206"</con:value>
      </con:property>
      <con:property>
        <con:name>VidType</con:name>
        <con:value>"V"</con:value>
      </con:property>
      <con:property>
        <con:name>InvalidUid</con:name>
        <con:value>"1234567890"</con:value>
      </con:property>
      <con:property>
        <con:name>InvalidVid</con:name>
        <con:value>"1234567890123456"</con:value>
      </con:property>
      <con:property>
        <con:name>InalidmsaLicenseKey</con:name>
        <con:value>"asdfg123"</con:value>
      </con:property>
      <con:property>
        <con:name>InvalidtxnID</con:name>
        <con:value>"asde1234"</con:value>
      </con:property>
      <con:property>
        <con:name>Invalidver</con:name>
        <con:value>"1.2.3"</con:value>
      </con:property>
      <con:property>
        <con:name>endpoint</con:name>
        <con:value>http://13.71.81.26:8081</con:value>
      </con:property>
      <con:property>
        <con:name>ValidmuaCode</con:name>
        <con:value>"OTPValid123"</con:value>
      </con:property>
      <con:property>
        <con:name>InvalidreqTime</con:name>
        <con:value>"2018-14-09T17:50:56.398"</con:value>
      </con:property>
      <con:property>
        <con:name>InvalidUidType</con:name>
        <con:value>"V"</con:value>
      </con:property>
      <con:property>
        <con:name>InvalidVidType</con:name>
        <con:value>"D"</con:value>
      </con:property>
      <con:property>
        <con:name>reqTime</con:name>
        <con:value/>
      </con:property>
      <con:property>
        <con:name>timestamp</con:name>
        <con:value>2018-11-16T07:15:25.942Z</con:value>
      </con:property>
      <con:property>
        <con:name>timestamp20minutebefore</con:name>
        <con:value>2018-11-16T06:55:25.942Z</con:value>
      </con:property>
      <con:property>
        <con:name>posid</con:name>
        <con:value>426789089018</con:value>
      </con:property>
      <con:property>
        <con:name>negid</con:name>
        <con:value>426789089019</con:value>
      </con:property>
      <con:property>
        <con:name>posidType</con:name>
        <con:value>D</con:value>
      </con:property>
      <con:property>
        <con:name>negidType</con:name>
        <con:value>A</con:value>
      </con:property>
      <con:property>
        <con:name>posmsaLicenseKey</con:name>
        <con:value>MSALICENSE</con:value>
      </con:property>
      <con:property>
        <con:name>negmsaLicenseKey</con:name>
        <con:value>MSALICENSE11</con:value>
      </con:property>
      <con:property>
        <con:name>posmuaCode</con:name>
        <con:value>MUALICENSE</con:value>
      </con:property>
      <con:property>
        <con:name>negmuaCode</con:name>
        <con:value>MUALICENSE11</con:value>
      </con:property>
      <con:property>
        <con:name>postxnID</con:name>
        <con:value>TXNLICENSE</con:value>
      </con:property>
      <con:property>
        <con:name>negtxnID</con:name>
        <con:value>TXNLICENSE11</con:value>
      </con:property>
      <con:property>
        <con:name>posver</con:name>
        <con:value>1.0</con:value>
      </con:property>
      <con:property>
        <con:name>negver</con:name>
        <con:value>1.0.0</con:value>
      </con:property>
      <con:property>
        <con:name>posvid</con:name>
        <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:property>
      <con:property>
        <con:name>negvid</con:name>
        <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:property>
      <con:property>
        <con:name>posvidType</con:name>
        <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:property>
      <con:property>
        <con:name>negvidType</con:name>
        <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:property>
      <con:property>
        <con:name>time20minuteequal</con:name>
      </con:property>
    </con:properties>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite id="279bb25f-8493-4855-9c39-c0b670bb9822" name="Demo_Authentication_MOS_231"><con:description>TestSuite generated for REST Service [http://13.71.81.26:8081]</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="e7b7a88e-5e05-4ce0-8da9-4cf6f71214e9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="init" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="7bd1ef42-d60f-4586-a764-7a34a7a013c2"><con:settings/><con:config><script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper;
import java.time.Instant;
import java.util.Random;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import groovy.xml.*
import groovy.json.*
def lastDate = Instant.now();






DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))



testRunner.testCase.setPropertyValue("timestamp",lastDate.toString()); 

def inputFile = new File(System.getProperty("user.dir")+"\\InputData.json");
def InputJSON = new JsonSlurper().parseText(inputFile.text);


long msaLicenseKey = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L;
String.format("%10d", msaLicenseKey)

testRunner.testCase.testSuite.setPropertyValue("posmsaLicenseKey",msaLicenseKey.toString())
testRunner.testCase.testSuite.setPropertyValue( "posid", InputJSON[0].pos.id.toString() )
testRunner.testCase.testSuite.setPropertyValue( "posidType", InputJSON[0].pos.idType.toString() )
testRunner.testCase.testSuite.setPropertyValue( "negid", InputJSON[0].neg.id.toString() )
testRunner.testCase.testSuite.setPropertyValue( "negidType", InputJSON[0].neg.idType.toString() )



testRunner.testCase.testSuite.setPropertyValue("addrLine1Pri",InputJSON[0].pos.addrLine1Pri.toString())
testRunner.testCase.testSuite.setPropertyValue( "addrLine2Pri", InputJSON[0].pos.addrLine2Pri.toString() )
testRunner.testCase.testSuite.setPropertyValue( "addrLine3Pri", InputJSON[0].pos.addrLine3Pri.toString() )
testRunner.testCase.testSuite.setPropertyValue( "cityPri", InputJSON[0].pos.cityPri.toString() )
testRunner.testCase.testSuite.setPropertyValue( "pinCodePri", InputJSON[0].pos.pinCodePri.toString() )


char firstIndex
char changed
def data 
 data = testRunner.testCase.testSuite.getPropertyValue( "addrLine1Pri" )

      firstIndex = data.charAt(0);
	 changed = (char) ((int)firstIndex + 1);
	data=data.replace(firstIndex, changed);

testRunner.testCase.testSuite.setPropertyValue("negaddrLine1Pri",data)


 data = testRunner.testCase.testSuite.getPropertyValue( "addrLine2Pri" )

      firstIndex = data.charAt(0);
	 changed = (char) ((int)firstIndex + 1);
	data=data.replace(firstIndex, changed);

testRunner.testCase.testSuite.setPropertyValue("negaddrLine2Pri",data)

 data = testRunner.testCase.testSuite.getPropertyValue( "addrLine3Pri" )

      firstIndex = data.charAt(0);
	 changed = (char) ((int)firstIndex + 1);
	data=data.replace(firstIndex, changed);

testRunner.testCase.testSuite.setPropertyValue("negaddrLine3Pri",data)

 data = testRunner.testCase.testSuite.getPropertyValue( "cityPri" )

      firstIndex = data.charAt(0);
	 changed = (char) ((int)firstIndex + 1);
	data=data.replace(firstIndex, changed);

testRunner.testCase.testSuite.setPropertyValue("negcityPri",data)
 data = testRunner.testCase.testSuite.getPropertyValue( "pinCodePri" )

      firstIndex = data.charAt(0);
	 changed = (char) ((int)firstIndex + 1);
	data=data.replace(firstIndex, changed);

testRunner.testCase.testSuite.setPropertyValue("negpinCodePri",data)


    long txnID = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L;
   long muaCode = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L;
   
	testRunner.testCase.testSuite.setPropertyValue("posmuaCode", String.format("%10d", muaCode));
	testRunner.testCase.testSuite.setPropertyValue("postxnID",String.format("%10d", txnID));
	testRunner.testCase.testSuite.setPropertyValue("posver","1.0");
	testRunner.testCase.testSuite.setPropertyValue("negver","1"); 

      long entity = (long) Math.floor(Math.random() * 9_000_000_0000L) + 1_000_000_0000L;
      testRunner.testCase.testSuite.setPropertyValue("negmsaLicenseKey_11digits", String.format("%11d", entity));
      testRunner.testCase.testSuite.setPropertyValue("negmuaCode_11digits", String.format("%11d", entity));
      testRunner.testCase.testSuite.setPropertyValue("negtxnID_11digits", String.format("%11d", entity));
      
      long entity1 = (long) Math.floor(Math.random() * 9_000_000_00L) + 1_000_000_00L;
      testRunner.testCase.testSuite.setPropertyValue("negmsaLicenseKey_9digits", String.format("%9d", entity1));
      testRunner.testCase.testSuite.setPropertyValue("negmuaCode_9digits", String.format("%9d", entity1));
      testRunner.testCase.testSuite.setPropertyValue("negtxnID_9digits", String.format("%9d", entity1));</script></con:config></con:testStep><con:properties><con:property><con:name>posreqTime</con:name><con:value>2018-11-16T13:49:08.524+0530</con:value></con:property><con:property><con:name>timestamp</con:name><con:value>2018-11-16T08:19:08.524Z</con:value></con:property></con:properties></con:testCase><con:testCase id="cdcf3243-eabc-4502-9255-e05ca2f9e279" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="1_1_OTP_MOS-231_SmokeTest" searchProperties="true"><con:description>TestCase generated for REST Resource [otp] located at [/identity/otp]</con:description><con:settings/><con:testStep type="restrequest" name="Request 1" id="bb321f83-17fc-4877-951a-da358a44cae8"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request 1" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#ENDPOINT}</con:endpoint><con:request>{  
   "authType":{  
      "ad":true
   },
   "data":"string",
   "hmac":"string",
   "id":"${#TestSuite#posid}",
   "idType":"${#TestSuite#posidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "ad":{ 
            "addrLine1Pri":"${#TestSuite#addrLine1Pri}",
            "addrLine2Pri":"${#TestSuite#addrLine2Pri}",
            "addrLine3Pri":"${#TestSuite#addrLine3Pri}",
            "cityPri":"${#TestSuite#cityPri}",
            "pinCodePri":"${#TestSuite#pinCodePri}"
         }

      }
   },
   "reqTime":"${#TestCase#posreqTime}",
   "signature":"string",
   "txnID":"1234567890",
   "ver":"1.0"
}

</con:request><con:originalUri>http://13.71.81.26/otp</con:originalUri><con:assertion type="JsonPath RegEx Match" id="5bc7c14c-20c1-47df-8b5a-59325a83ff34" name="JsonPath RegEx Match" disabled="true"><con:configuration><path/><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments><regEx/></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3f86156f-932d-44d5-8e19-fd2e83510c05" name="Script Assertion"><con:configuration><scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.status == true
assert json.err.size() == 0</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>posreqTime</con:name><con:value>2018-11-15T19:01:22.181+0530</con:value></con:property><con:property><con:name>timestamp</con:name><con:value>2018-11-15T13:31:22.169Z</con:value></con:property></con:properties></con:testCase><con:testCase id="f50f8828-f24c-4e03-9aac-16d9c95f8692" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="auth-otp TestCase" searchProperties="true" disabled="true"><con:description>TestCase generated for REST Resource [auth-otp] located at [/identity/auth]</con:description><con:settings/><con:testStep type="restrequest" name="Request 1" id="9ea1ec4c-cb2b-46e6-8c9f-1b94d78a2a0c"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request 1" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://13.71.81.26:8081</con:endpoint><con:request>{
  "authType": {
    "otp": true
  },
  "data": "string",
  "hmac": "string",
  "id": "string",
  "idType": "string",
  "key": {
    "publicKeyCert": "string",
    "sessionKey": "string"
  },
  "msaLicenseKey": "string",
  "muaCode": "string",
  "pii": {
    "pin": {
      "type": "OTP",
      "value": "string"
    }
  },
  "reqTime": "string",
  "signature": "string",
  "txnID": "string",
  "ver": "string"
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c9892e55-b439-48b8-86b6-d231b73ef36f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getOTP TestCase" searchProperties="true" disabled="true"><con:description>TestCase generated for REST Resource [getOTP] located at [/identity/getOTP]</con:description><con:settings/><con:testStep type="restrequest" name="Request 1" id="6ae9c289-c106-4e97-bc47-a0060665d451"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request 1" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json"><con:settings/><con:endpoint>http://13.71.81.26:8081</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="dd96e957-d22c-40fc-88f4-5ee66996abb2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="1_2_OTP_MOS-231_Invalid_AddressLine1" searchProperties="true"><con:description>TestCase generated for REST Resource [otp] located at [/identity/otp]</con:description><con:settings/><con:testStep type="restrequest" name="Request 1" id="cfd23a35-233f-45c5-9b18-0c524b1b4d80"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request 1" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#ENDPOINT}</con:endpoint><con:request>{  
   "authType":{  
      "ad":true
   },
   "data":"string",
   "hmac":"string",
   "id":"${#TestSuite#posid}",
   "idType":"${#TestSuite#posidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "ad":{ 
            "addrLine1Pri":"${#TestSuite#negaddrLine1Pri}",
            "addrLine2Pri":"${#TestSuite#addrLine2Pri}",
            "addrLine3Pri":"${#TestSuite#addrLine3Pri}",
            "cityPri":"${#TestSuite#cityPri}",
            "pinCodePri":"${#TestSuite#pinCodePri}"
         }

      }
   },
   "reqTime":"${#TestCase#posreqTime}",
   "signature":"string",
   "txnID":"1234567890",
   "ver":"1.0"
}

</con:request><con:originalUri>http://13.71.81.26/otp</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="b1bd5c92-c143-47e9-a54f-c3457d4a69f3" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="2e44726e-4921-425c-8c9b-b5a0f7b37f25" name="Script Assertion"><con:configuration><scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 0
assert json.status == false</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>posreqTime</con:name><con:value>2018-11-15T19:01:22.181+0530</con:value></con:property><con:property><con:name>timestamp</con:name><con:value>2018-11-15T13:31:22.169Z</con:value></con:property></con:properties></con:testCase><con:testCase id="ae0b986a-2a7a-4b32-a105-92d2e350726c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="1_3_OTP_MOS-231_Invalid_AddressLine2" searchProperties="true"><con:description>TestCase generated for REST Resource [otp] located at [/identity/otp]</con:description><con:settings/><con:testStep type="restrequest" name="Request 1" id="7a7b517e-e84e-487a-a1f3-c8faf2cd846b"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request 1" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#ENDPOINT}</con:endpoint><con:request>{  
   "authType":{  
      "ad":true
   },
   "data":"string",
   "hmac":"string",
   "id":"${#TestSuite#posid}",
   "idType":"${#TestSuite#posidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "ad":{ 
            "addrLine1Pri":"${#TestSuite#addrLine1Pri}",
            "addrLine2Pri":"${#TestSuite#negaddrLine2Pri}",
            "addrLine3Pri":"${#TestSuite#addrLine3Pri}",
            "cityPri":"${#TestSuite#cityPri}",
            "pinCodePri":"${#TestSuite#pinCodePri}"
         }

      }
   },
   "reqTime":"${#TestCase#posreqTime}",
   "signature":"string",
   "txnID":"1234567890",
   "ver":"1.0"
}

</con:request><con:originalUri>http://13.71.81.26/otp</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5eec2833-6aa4-45a1-8f4f-5512a1547c54" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="dc33d329-8ad2-414a-84ef-b00e1a97de92" name="Script Assertion"><con:configuration><scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 0
assert json.status == false</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>posreqTime</con:name><con:value>2018-11-15T19:01:22.181+0530</con:value></con:property><con:property><con:name>timestamp</con:name><con:value>2018-11-15T13:31:22.169Z</con:value></con:property></con:properties></con:testCase><con:testCase id="8f41bbed-1989-4816-8eea-ab01430b3393" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="1_4_OTP_MOS-231_Invalid_AddressLine3" searchProperties="true"><con:description>TestCase generated for REST Resource [otp] located at [/identity/otp]</con:description><con:settings/><con:testStep type="restrequest" name="Request 1" id="a9033061-1ca6-4eaa-9be9-d66c4df5c9a1"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request 1" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#ENDPOINT}</con:endpoint><con:request>{  
   "authType":{  
      "ad":true
   },
   "data":"string",
   "hmac":"string",
   "id":"${#TestSuite#posid}",
   "idType":"${#TestSuite#posidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "ad":{ 
            "addrLine1Pri":"${#TestSuite#negaddrLine1Pri}",
            "addrLine2Pri":"${#TestSuite#addrLine2Pri}",
            "addrLine3Pri":"${#TestSuite#negaddrLine3Pri}",
            "cityPri":"${#TestSuite#cityPri}",
            "pinCodePri":"${#TestSuite#pinCodePri}"
         }

      }
   },
   "reqTime":"${#TestCase#posreqTime}",
   "signature":"string",
   "txnID":"1234567890",
   "ver":"1.0"
}

</con:request><con:originalUri>http://13.71.81.26/otp</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="66100f78-ceea-41fc-b4b3-143cf519c6f8" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3acb9981-b02f-410a-92f1-48f07680472f" name="Script Assertion"><con:configuration><scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 0
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>posreqTime</con:name><con:value>2018-11-15T19:01:22.181+0530</con:value></con:property><con:property><con:name>timestamp</con:name><con:value>2018-11-15T13:31:22.169Z</con:value></con:property></con:properties></con:testCase><con:testCase id="87ad9a60-4fcd-4128-ba4d-7c5ef3a0af9b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="3_5_OTP_Authenticate_Invalid_reqTime_out_of_limit_req=24_VID" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="authenticate" id="583b74cc-dda5-4f16-8290-d699b2b0ec5e"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Global#ENDPOINT}</con:endpoint><con:request>{  
   "authType":{  
      "ad":true
   },
   "data":"string",
   "hmac":"string",
   "id":"${#TestSuite#posid}",
   "idType":"${#TestSuite#posidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "ad":{ 
            "addrLine1Pri":"${#TestSuite#addrLine1Pri}",
            "addrLine2Pri":"${#TestSuite#addrLine2Pri}",
            "addrLine3Pri":"${#TestSuite#addrLine3Pri}",
            "cityPri":"${#TestSuite#cityPri}",
            "pinCodePri":"${#TestSuite#pinCodePri}"
         }

      }
   },
   "reqTime":"${#TestCase#posreqTime}",
   "signature":"string",
   "txnID":"1234567890",
   "ver":"1.0"
}

</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="GroovyScriptAssertion" id="fe0574dc-4fbc-44cb-9939-15e218be69de" name="Script Assertion"><con:configuration><scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.status == false</scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="4948c7ff-ba81-460b-a3e5-df85e35e4d66" name="Valid HTTP Status Codes"><con:configuration><codes>500</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>timestamp</con:name><con:value>2018-11-15T14:23:33.344Z</con:value></con:property><con:property><con:name>timestamp20minutebefore</con:name><con:value>2018-11-12T03:52:50.619Z</con:value></con:property><con:property><con:name>OTP</con:name><con:value>264721</con:value></con:property><con:property><con:name>posreqTime</con:name><con:value>2018-11-14T19:53:33.345+0530</con:value></con:property></con:properties></con:testCase><con:testCase id="80c96155-2b9c-4ffb-84b6-98d9b1c74587" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="2_1_OTP_MOS-231_Invalid_City" searchProperties="true"><con:description>TestCase generated for REST Resource [otp] located at [/identity/otp]</con:description><con:settings/><con:testStep type="restrequest" name="Request 1" id="75e620e3-1cf9-4d94-9986-cd70e7789333"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request 1" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#ENDPOINT}</con:endpoint><con:request>{  
   "authType":{  
      "ad":true
   },
   "data":"string",
   "hmac":"string",
   "id":"${#TestSuite#posid}",
   "idType":"${#TestSuite#posidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "ad":{ 
            "addrLine1Pri":"${#TestSuite#negaddrLine1Pri}",
            "addrLine2Pri":"${#TestSuite#addrLine2Pri}",
            "addrLine3Pri":"${#TestSuite#addrLine3Pri}",
            "cityPri":"${#TestSuite#negcityPri}",
            "pinCodePri":"${#TestSuite#pinCodePri}"
         }

      }
   },
   "reqTime":"${#TestCase#posreqTime}",
   "signature":"string",
   "txnID":"1234567890",
   "ver":"1.0"
}

</con:request><con:originalUri>http://13.71.81.26/otp</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="7a05b8e5-c6f4-46f6-a165-62e7e25d03cb" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="6736fb8f-de39-41ce-a58e-d585211298cf" name="Script Assertion"><con:configuration><scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 0
assert json.status == false</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>posreqTime</con:name><con:value>2018-11-15T19:01:22.181+0530</con:value></con:property><con:property><con:name>timestamp</con:name><con:value>2018-11-15T13:31:22.169Z</con:value></con:property></con:properties></con:testCase><con:testCase id="6addc9f3-a118-4488-a1aa-e0094e583184" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="2_2_OTP_MOS-231_Invalid_Pincode" searchProperties="true"><con:description>TestCase generated for REST Resource [otp] located at [/identity/otp]</con:description><con:settings/><con:testStep type="restrequest" name="Request 1" id="51a72270-d7a7-4d68-a112-0eef061bc179"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request 1" id="153c62c9-9b4c-4406-8b76-2795a1ffa464" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#ENDPOINT}</con:endpoint><con:request>{  
   "authType":{  
      "ad":true
   },
   "data":"string",
   "hmac":"string",
   "id":"${#TestSuite#posid}",
   "idType":"${#TestSuite#posidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "ad":{ 
            "addrLine1Pri":"${#TestSuite#negaddrLine1Pri}",
            "addrLine2Pri":"${#TestSuite#addrLine2Pri}",
            "addrLine3Pri":"${#TestSuite#addrLine3Pri}",
            "cityPri":"${#TestSuite#cityPri}",
            "pinCodePri":"${#TestSuite#negpinCodePri}"
         }

      }
   },
   "reqTime":"${#TestCase#posreqTime}",
   "signature":"string",
   "txnID":"1234567890",
   "ver":"1.0"
}

</con:request><con:originalUri>http://13.71.81.26/otp</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5b291f97-a1d4-4c88-a866-3388767680f5" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="54c9ba79-4a59-4a28-86b4-cac2fba9c914" name="Script Assertion"><con:configuration><scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 0
assert json.status == false</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>posreqTime</con:name><con:value>2018-11-15T19:01:22.181+0530</con:value></con:property><con:property><con:name>timestamp</con:name><con:value>2018-11-15T13:31:22.169Z</con:value></con:property></con:properties></con:testCase><con:testCase id="ff383e40-030e-4f56-b40b-8aac65b7b74f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="3_1_Demo_Authenticate_Invalid_reqTime_out_of_limit_req&lt;24" searchProperties="true"><con:settings/><con:testStep type="groovy" name="TimeStep" id="0e05df49-93a9-4b2b-b6b2-7fe7ca4cde09"><con:settings/><con:config><script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper;
import java.time.Instant;
import java.util.Random;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import groovy.xml.*
import groovy.json.*
def lastDate = Instant.now();


DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Calendar now = Calendar.getInstance();
	now.add(Calendar.HOUR, -(23));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(now.getTime()))
</script></con:config></con:testStep><con:testStep type="restrequest" name="authenticate" id="a7583955-3987-4644-a644-a66e5841ed2a"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Global#ENDPOINT}</con:endpoint><con:request>{  
   "authType":{  
      "ad":true
   },
   "data":"string",
   "hmac":"string",
   "id":"${#TestSuite#posid}",
   "idType":"${#TestSuite#posidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "ad":{ 
            "addrLine1Pri":"${#TestSuite#addrLine1Pri}",
            "addrLine2Pri":"${#TestSuite#addrLine2Pri}",
            "addrLine3Pri":"${#TestSuite#addrLine3Pri}",
            "cityPri":"${#TestSuite#cityPri}",
            "pinCodePri":"${#TestSuite#pinCodePri}"
         }

      }
   },
   "reqTime":"${#TestCase#posreqTime}",
   "signature":"string",
   "txnID":"1234567890",
   "ver":"1.0"
}

</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="GroovyScriptAssertion" id="fe0574dc-4fbc-44cb-9939-15e218be69de" name="Script Assertion"><con:configuration><scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 0


</scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="4948c7ff-ba81-460b-a3e5-df85e35e4d66" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>timestamp</con:name><con:value>2018-11-15T14:22:48.140Z</con:value></con:property><con:property><con:name>timestamp20minutebefore</con:name><con:value>2018-11-12T03:52:50.619Z</con:value></con:property><con:property><con:name>OTP</con:name><con:value>560647</con:value></con:property><con:property><con:name>posreqTime</con:name><con:value>2018-11-15T14:49:11.147+0530</con:value></con:property></con:properties></con:testCase><con:testCase id="c954d997-8f85-4315-b01c-f7068f51f57e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="3_2_DemoAuthenticate_Invalid_reqTime_out_of_limit_req>24" searchProperties="true"><con:settings/><con:testStep type="groovy" name="TimeStep" id="0af9abec-f4a4-4ded-b224-d1df13d656fb"><con:settings/><con:config><script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper;
import java.time.Instant;
import java.util.Random;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import groovy.xml.*
import groovy.json.*
def lastDate = Instant.now();


DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Calendar now = Calendar.getInstance();
	now.add(Calendar.HOUR, (60*39));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(now.getTime()))

</script></con:config></con:testStep><con:testStep type="restrequest" name="authenticate" id="9b0b375e-0e1e-4efa-bb77-4011b9fd06eb"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Global#ENDPOINT}</con:endpoint><con:request>{  
   "authType":{  
      "ad":true
   },
   "data":"string",
   "hmac":"string",
   "id":"${#TestSuite#posid}",
   "idType":"${#TestSuite#posidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "ad":{ 
            "addrLine1Pri":"${#TestSuite#addrLine1Pri}",
            "addrLine2Pri":"${#TestSuite#addrLine2Pri}",
            "addrLine3Pri":"${#TestSuite#addrLine3Pri}",
            "cityPri":"${#TestSuite#cityPri}",
            "pinCodePri":"${#TestSuite#pinCodePri}"
         }

      }
   },
   "reqTime":"${#TestCase#posreqTime}",
   "signature":"string",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"1.0"
}

</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="GroovyScriptAssertion" id="fe0574dc-4fbc-44cb-9939-15e218be69de" name="Script Assertion"><con:configuration><scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 0


</scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="4948c7ff-ba81-460b-a3e5-df85e35e4d66" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>timestamp</con:name><con:value>2018-11-15T14:23:18.892Z</con:value></con:property><con:property><con:name>timestamp20minutebefore</con:name><con:value>2018-11-12T03:52:50.619Z</con:value></con:property><con:property><con:name>OTP</con:name><con:value>142990</con:value></con:property><con:property><con:name>posreqTime</con:name><con:value>2019-02-22T01:49:11.463+0530</con:value></con:property></con:properties></con:testCase><con:testCase id="c4eae360-0a25-45e1-9344-62de0556416e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="3_3_Demo_Authenticate_Invalid_TxnID_boundaryValueMoreThan10Digits_VID" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Copy of TimeStep" id="04e15628-b4fc-42ad-8bb7-74511c78c267"><con:settings/><con:config><script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper;
import java.time.Instant;
import java.util.Random;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import groovy.xml.*
import groovy.json.*
def lastDate = Instant.now();


DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Calendar now = Calendar.getInstance();
	now.add(Calendar.HOUR, (60*39));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(now.getTime()))

</script></con:config></con:testStep><con:testStep type="restrequest" name="authenticate" id="88abc02a-7ded-4b5e-a199-e69081466d03"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Global#ENDPOINT}</con:endpoint><con:request>{  
   "authType":{  
      "ad":true
   },
   "data":"string",
   "hmac":"string",
   "id":"${#TestSuite#posid}",
   "idType":"${#TestSuite#posidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "ad":{ 
            "addrLine1Pri":"${#TestSuite#addrLine1Pri}",
            "addrLine2Pri":"${#TestSuite#addrLine2Pri}",
            "addrLine3Pri":"${#TestSuite#addrLine3Pri}",
            "cityPri":"${#TestSuite#cityPri}",
            "pinCodePri":"${#TestSuite#pinCodePri}"
         }

      }
   },
   "reqTime":"${#TestCase#posreqTime}",
   "signature":"string",
   "txnID":"${#TestSuite#negtxnID_11digits}",
   "ver":"1.0"
}

</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="GroovyScriptAssertion" id="0c2123bc-1045-4ecd-bfb4-67e94ec6eb5d" name="Script Assertion"><con:configuration><scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.err.errorCode[0] == "Pattern"
assert json.err.errorMessage[0] == "TxnId size must be 10" 

</scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="db245879-32ca-47a5-aa3d-abcda2d63ee1" name="Valid HTTP Status Codes"><con:configuration><codes>500</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>OTP</con:name><con:value>043695</con:value></con:property><con:property><con:name>posreqTime</con:name><con:value>2019-02-22T01:49:11.776+0530</con:value></con:property><con:property><con:name>timestamp</con:name><con:value>2018-11-15T05:04:27.627Z</con:value></con:property><con:property><con:name>timestamp20minutebefore</con:name><con:value>2018-11-09T12:17:25.349Z</con:value></con:property></con:properties></con:testCase><con:testCase id="bc158c42-df3b-4491-bbc1-d5fc00b9f7a6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="3_4_OTP_Authenticate_Invalid_TxnID_boundaryValueLessThan10Digits_VID" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Copy of TimeStep" id="50ee6e09-8746-4d18-95a8-e8edab53f31a"><con:settings/><con:config><script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper;
import java.time.Instant;
import java.util.Random;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import groovy.xml.*
import groovy.json.*
def lastDate = Instant.now();


DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Calendar now = Calendar.getInstance();
	now.add(Calendar.HOUR, (60*39));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(now.getTime()))

</script></con:config></con:testStep><con:testStep type="restrequest" name="authenticate" id="b90049e4-f87b-477c-9a87-000ddab08e15"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Global#ENDPOINT}</con:endpoint><con:request>{  
   "authType":{  
      "ad":true
   },
   "data":"string",
   "hmac":"string",
   "id":"${#TestSuite#posid}",
   "idType":"${#TestSuite#posidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "ad":{ 
            "addrLine1Pri":"${#TestSuite#addrLine1Pri}",
            "addrLine2Pri":"${#TestSuite#addrLine2Pri}",
            "addrLine3Pri":"${#TestSuite#addrLine3Pri}",
            "cityPri":"${#TestSuite#cityPri}",
            "pinCodePri":"${#TestSuite#pinCodePri}"
         }

      }
   },
   "reqTime":"${#TestCase#posreqTime}",
   "signature":"string",
   "txnID":"${#TestSuite#negtxnID_9digits}",
   "ver":"1.0"
}

</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a843b9a7-f6df-4ba5-ba5c-685169dccf24" name="Valid HTTP Status Codes"><con:configuration><codes>500</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="d2cc46ac-4db6-4bf1-a106-e08b6458bbee" name="Script Assertion"><con:configuration><scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>OTP</con:name><con:value>111641</con:value></con:property><con:property><con:name>posreqTime</con:name><con:value>2019-02-22T01:49:11.910+0530</con:value></con:property><con:property><con:name>timestamp</con:name><con:value>2018-11-15T05:04:28.904Z</con:value></con:property><con:property><con:name>timestamp20minutebefore</con:name><con:value>2018-11-09T12:17:25.873Z</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>ENDPOINT</con:name><con:value>http://13.71.81.26:8081</con:value></con:property><con:property><con:name>posmsaLicenseKey</con:name><con:value>4252956985</con:value></con:property><con:property><con:name>posid</con:name><con:value>426789089018</con:value></con:property><con:property><con:name>posidType</con:name><con:value>D</con:value></con:property><con:property><con:name>negid</con:name><con:value>4267890890181</con:value></con:property><con:property><con:name>negidType</con:name><con:value>D</con:value></con:property><con:property><con:name>addrLine1Pri</con:name><con:value>No.12, Rajaji Avenue</con:value></con:property><con:property><con:name>addrLine2Pri</con:name><con:value>Sathya Nagar</con:value></con:property><con:property><con:name>addrLine3Pri</con:name><con:value>East Mambalam</con:value></con:property><con:property><con:name>cityPri</con:name><con:value>Chennai</con:value></con:property><con:property><con:name>pinCodePri</con:name><con:value>600017</con:value></con:property><con:property><con:name>posmuaCode</con:name><con:value>6984471738</con:value></con:property><con:property><con:name>postxnID</con:name><con:value>2869050270</con:value></con:property><con:property><con:name>posver</con:name><con:value>1.0</con:value></con:property><con:property><con:name>negver</con:name><con:value>1</con:value></con:property><con:property><con:name>negmsaLicenseKey_11digits</con:name><con:value>21009898215</con:value></con:property><con:property><con:name>negmuaCode_11digits</con:name><con:value>21009898215</con:value></con:property><con:property><con:name>negtxnID_11digits</con:name><con:value>21009898215</con:value></con:property><con:property><con:name>negmsaLicenseKey_9digits</con:name><con:value>932130829</con:value></con:property><con:property><con:name>negmuaCode_9digits</con:name><con:value>932130829</con:value></con:property><con:property><con:name>negtxnID_9digits</con:name><con:value>932130829</con:value></con:property><con:property><con:name>negpinCodePri</con:name><con:value>700017</con:value></con:property><con:property><con:name>negaddrLine1Pri</con:name><con:value>Oo.12, Rajaji Avenue</con:value></con:property><con:property><con:name>negaddrLine2Pri</con:name><con:value>Tathya Nagar</con:value></con:property><con:property><con:name>negaddrLine3Pri</con:name><con:value>Fast Mambalam</con:value></con:property><con:property><con:name>negcityPri</con:name><con:value>Dhennai</con:value></con:property></con:properties></con:testSuite>
  <con:testSuite id="8ec32e1b-8bf1-4ac7-9ebf-8cc3a5fbbade" name="OTP_Authentication_MOS_41">
    <con:settings/>
    <con:savedRecentRuns>1</con:savedRecentRuns>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="43755f5f-a0cf-4fc6-a724-758e0f0dd144" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="init" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="d50d28ae-fd04-4b16-959b-e45f4a4c432f">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper;
import java.time.Instant;
import java.util.Random;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import groovy.xml.*
import groovy.json.*
def lastDate = Instant.now();

testRunner.testCase.setPropertyValue("timestamp",lastDate.toString()); 

def inputFile = new File(System.getProperty("user.dir")+"\\InputData.json");
def InputJSON = new JsonSlurper().parseText(inputFile.text);


long msaLicenseKey = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L;
String.format("%10d", msaLicenseKey)
testRunner.testCase.testSuite.setPropertyValue("posmsaLicenseKey",msaLicenseKey.toString())

testRunner.testCase.testSuite.setPropertyValue( "posid", InputJSON[0].pos.id.toString() )
testRunner.testCase.testSuite.setPropertyValue( "posidType", InputJSON[0].pos.idType.toString() )
testRunner.testCase.testSuite.setPropertyValue( "negid", InputJSON[0].neg.id.toString() )
testRunner.testCase.testSuite.setPropertyValue( "negidType", InputJSON[0].neg.idType.toString() )

    long txnID = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L;
   long muaCode = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L;
   
	testRunner.testCase.testSuite.setPropertyValue("posmuaCode", String.format("%10d", muaCode));
	testRunner.testCase.testSuite.setPropertyValue("postxnID",String.format("%10d", txnID));
	testRunner.testCase.testSuite.setPropertyValue("posver","1.0");
	testRunner.testCase.testSuite.setPropertyValue("negver","1"); 

      long entity = (long) Math.floor(Math.random() * 9_000_000_0000L) + 1_000_000_0000L;
      testRunner.testCase.testSuite.setPropertyValue("negmsaLicenseKey_11digits", String.format("%11d", entity));
      testRunner.testCase.testSuite.setPropertyValue("negmuaCode_11digits", String.format("%11d", entity));
      testRunner.testCase.testSuite.setPropertyValue("negtxnID_11digits", String.format("%11d", entity));
      
      long entity1 = (long) Math.floor(Math.random() * 9_000_000_00L) + 1_000_000_00L;
      testRunner.testCase.testSuite.setPropertyValue("negmsaLicenseKey_9digits", String.format("%9d", entity1));
      testRunner.testCase.testSuite.setPropertyValue("negmuaCode_9digits", String.format("%9d", entity1));
      testRunner.testCase.testSuite.setPropertyValue("negtxnID_9digits", String.format("%9d", entity1));</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="JDBC_ENV_Setup" id="b1292a99-7f8d-4449-9f65-adb6bea08bb9">
        <con:settings/>
        <con:config>
          <script>import groovy.sql.Sql

// Set activeEnviroment from SOAP-UI  to set SQL Properties in User Script 
def activeEnviroment = com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "ENV" )
def driver= 'org.postgresql.Driver'
def url = ''
def user = ''
def password = ''
def url_ida = ''
def user_ida = ''
def password_ida = ''
if (activeEnviroment == 'QA') {
def port= '9001'
 host_ida  = '13.71.81.26'
def QA = '104.211.228.46'
 url_ida='jdbc:postgresql://'+host_ida+':'+port+'/postgres'
 url = 'jdbc:postgresql://'+QA+':'+port+'/postgres'
 user_ida = 'postgres'
 password_ida= 'admin'
 user = 'repuser'
 password = 'Mosip@dev123'


testRunner.testCase.testSuite.project.setPropertyValue( "user", user)
testRunner.testCase.testSuite.project.setPropertyValue( "url", url)
testRunner.testCase.testSuite.project.setPropertyValue( "password", password)
testRunner.testCase.testSuite.project.setPropertyValue( "driver", driver)

testRunner.testCase.testSuite.project.setPropertyValue( "user_ida", user_ida)
testRunner.testCase.testSuite.project.setPropertyValue( "url_ida", url_ida)
testRunner.testCase.testSuite.project.setPropertyValue( "password_ida", password_ida)
// Connect to the SQL instance.
//def sql = Sql.newInstance(url, user, password, driver)

// Use the SQL instance.
// ...

// Close the SQL instance.
//sql.close()	
}
else if (activeEnviroment == 'DEV') {
def port= '9001'
def DEV = '104.211.208.136'
 url = 'jdbc:postgresql://'+DEV+':'+port+'/postgres'
 user = 'audituser'
 password = 'Mosip@dev123'

testRunner.testCase.testSuite.project.setPropertyValue( "user", user)
testRunner.testCase.testSuite.project.setPropertyValue( "url", url)
testRunner.testCase.testSuite.project.setPropertyValue( "password", password)
testRunner.testCase.testSuite.project.setPropertyValue( "driver", driver)
 
// Connect to the SQL instance.
//def sql = Sql.newInstance(url, user, password, driver)

// Use the SQL instance.
// ...

// Close the SQL instance.
//sql.close()	
}
com.eviware.soapui.support.GroovyUtils.registerJdbcDriver(driver)
def sql = Sql.newInstance(url_ida, user_ida, password_ida, driver)
log.info(sql)
def row= sql.rows("SELECT dob,age,email,mobile, u.id as uid,v.id as vid FROM ida.uin as u, ida.indv_demographic as d,ida.vid as v WHERE  u.uin_ref_id = d.uin_ref_id and d.uin_ref_id=v.uin_ref_id")</script>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC_Request" id="84187056-ef3d-4457-bb7a-c5399682017c">
        <con:settings>
          <con:setting id="prettyPrintResponse">true</con:setting>
        </con:settings>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName xsi:nil="true"/>
          <con:driver>${#Project#driver}</con:driver>
          <con:connectionString>${#Project#url_ida}?user=${#Project#user_ida}&amp;password=${#Project#password_ida}</con:connectionString>
          <con:connectionProperties/>
          <con:query>SELECT dob,age,email,mobile, u.id as uid,v.id as vid FROM ida.uin as u, ida.indv_demographic as d,ida.vid as v WHERE  u.uin_ref_id = d.uin_ref_id and d.uin_ref_id=v.uin_ref_id</con:query>
          <con:assertion type="JDBC Status" id="f3da55c0-b80e-4129-bd16-9b02dfc30c08" name="JDBC Status"/>
          <con:assertion type="JDBC Timeout" id="7d1e7d0c-db66-4d2f-94d8-1cef826ebcff" name="JDBC Timeout"/>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="XML_Parsing" id="f62b5d5c-3e1c-4262-a72f-f1f7eb69896c">
        <con:settings/>
        <con:config>
          <script>import groovy.xml.*
import groovy.json.*
def dbresponse = context.expand( '${JDBC_Request#ResponseAsXml}' )
 def dob = context.expand('${JDBC_Request#ResponseAsXml#//Results/ResultSet//Row//INDV_DEMOGRAPHIC.DOB}')
 def age = context.expand('${JDBC_Request#ResponseAsXml#//Results/ResultSet//Row//INDV_DEMOGRAPHIC.AGE}')
 def email = context.expand('${JDBC_Request#ResponseAsXml#//Results/ResultSet//Row//INDV_DEMOGRAPHIC.EMAIL}')
 def mobile = context.expand('${JDBC_Request#ResponseAsXml#//Results/ResultSet//Row//INDV_DEMOGRAPHIC.MOBILE}')
 def uid = context.expand('${JDBC_Request#ResponseAsXml#//Results/ResultSet//Row//UIN.UID}')
 def vid = context.expand('${JDBC_Request#ResponseAsXml#//Results/ResultSet//Row//VID.VID}')

testRunner.testCase.testSuite.setPropertyValue( "posvid", vid )
testRunner.testCase.testSuite.setPropertyValue( "posuid", uid )
testRunner.testCase.testSuite.setPropertyValue( "posmobile", mobile )
testRunner.testCase.testSuite.setPropertyValue( "posemail", email )
testRunner.testCase.testSuite.setPropertyValue( "posage", age )
testRunner.testCase.testSuite.setPropertyValue( "posdob", dob )</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:03:10.944Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="db2e019f-c39c-4c9e-a246-510ef1570039" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_Smoke" searchProperties="true">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="groovy" name="Groovy Script" id="695a01ed-078b-4c99-87c6-df06eee15f44">
        <con:settings/>
        <con:config><script>import java.time.Instant;
import java.time.Duration; 

import java.time.Instant


def lastDate = Instant.now();//current time
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script></con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="43ff0494-5e8b-415c-9a11-3d62f67ce6d9">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>http://13.71.81.26:8081</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posid}",
  "idType": "${#TestSuite#posidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="3a4f261e-0f03-4130-815a-2c67e688bdc7" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="3ae44cf3-1e6f-4198-818f-703570ab6117" name="Script Assertion">
              <con:configuration><scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null
log.info json</scriptText></con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="3ce87ec8-a76f-4667-909a-508b193a83f0">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="0c732bcb-84a4-45e1-b094-465463965ef2" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="ac5faceb-8fba-4152-a5f1-8a3f3b4b1195" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="bc349b2d-bfab-4b60-a2c2-9824c775294a">
        <con:settings/>
        <con:config><script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;


def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString

def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", object.OTP )
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))</script></con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="efde6530-a669-4773-93ad-5ce47eee7d7c">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
	"authType": {
		"otp": true
	},
	"data": "string",
	"hmac": "string",
	"id": "${#TestSuite#posuid}",
	"idType": "${#TestSuite#posidType}",
	"key": {
		"publicKeyCert": "string",
		"sessionKey": "string"
	},
	"msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
	"muaCode": "${#TestSuite#posmuaCode}",
	"pii": {
		"pin": {
			"type": "OTP",
			"value": "${#TestCase#OTP}"
		}
	},
	"reqTime": "${#TestCase#posreqTime}",
	"signature": "string",
	"txnID": "${#TestSuite#postxnID}",
	"ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="5e3b0d6c-091a-4b5a-bf72-287b61861ee5" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 0</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="fe377f2d-e4f5-4217-ba04-da0754c799b4" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay" id="90c0eeb3-7392-467f-9ef6-beb45cb5c291">
        <con:settings/>
        <con:config>
          <delay>1000</delay>
        </con:config>
      </con:testStep>
      <con:loadTest id="23e1d280-d9b9-42d0-bb7b-c282d9b66a73" name="LoadTest 1">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
          <con:setting id="hasBeenConvertedToLoadUITest">true</con:setting>
        </con:settings>
        <con:threadCount>16</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>521364</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-16T11:33:12.503+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:03:11.287Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-09T12:17:23.453Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="64f909bc-0e91-4009-bab5-55bad21fa0b6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_Invalid_reqTime_out_of_limit_req=24" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="2c07ffc1-0643-4536-8535-e092bb991d79">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="f4992c48-8a30-45ec-a905-d81e1c2055ca">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posid}",
  "idType": "${#TestSuite#posidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="d609ddf4-1647-4bec-be22-60d1cad3dbe7" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="311bd375-1ea9-420e-87a4-715634591c0b">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="97add5e7-a46e-4dc3-9f55-1b845fa116f6" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="dbdd2a95-2fb2-4652-aa72-e5f0e93665c3">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;

def lastDate = Instant.now();//current time

def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString
testRunner.testCase.testSuite.setPropertyValue("timestamp",lastDate.toString()); 
log.info(content);
def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", object.OTP )

DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Calendar now = Calendar.getInstance();
	now.add(Calendar.HOUR, -(60*22));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(now.getTime()))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="f3125579-1437-4dbe-88de-686a92549094">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "authType": {
    "otp": true
  },
  "data": "string",
  "hmac": "string",
  "id": "${#TestSuite#posid}",
  "idType": "${#TestSuite#posidType}",
  "key": {
    "publicKeyCert": "string",
    "sessionKey": "string"
  },
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "pii": {
    "pin": {
      "type": "OTP",
      "value": "${#TestCase#OTP}"
    }
  },
  "reqTime": "${#TestCase#posreqTime}",
  "signature": "string",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="fe0574dc-4fbc-44cb-9939-15e218be69de" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.err.errorCode[0] == "IDA-RQV-TMOUT-001"
assert json.err.errorMessage[0] == "Request should be reached within 24Hrs"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="4948c7ff-ba81-460b-a3e5-df85e35e4d66" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:03:14.066Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-12T03:52:50.619Z</con:value>
        </con:property>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>873414</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-09-22T11:33:14.576+0530</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="6129758e-81b5-4488-ba15-8b211f8955b8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_Invalid_OTP" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="f9905b75-03b7-4b5e-8c2a-72c433eb1951">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="a7c59209-a577-4cfd-8c7d-9f88d4663988">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posid}",
  "idType": "${#TestSuite#posidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="d609ddf4-1647-4bec-be22-60d1cad3dbe7" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="0c53382e-a01d-4433-a68f-423c67046a6e">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="97add5e7-a46e-4dc3-9f55-1b845fa116f6" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="533400a2-cba9-43df-a0b2-4a1096e28984">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Random
def lastDate = Instant.now();//current time

    Random rnd = new Random();
    int number = rnd.nextInt(999999);
    

def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString
testRunner.testCase.testSuite.setPropertyValue("timestamp",lastDate.toString()); 
log.info(content);
def object = jsonSlurper.parseText(content);
log.info(object.OTP);

testRunner.testCase.setPropertyValue( "OTP", String.format("%06d", number))
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Calendar now = Calendar.getInstance();
	now.add(Calendar.MINUTE, -50);
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(now.getTime()))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="b8b3cc22-f9c9-4718-a0e4-6f82f9a2ea64">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "authType": {
    "otp": true
  },
  "data": "string",
  "hmac": "string",
  "id": "${#TestSuite#posid}",
  "idType": "${#TestSuite#posidType}",
  "key": {
    "publicKeyCert": "string",
    "sessionKey": "string"
  },
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "pii": {
    "pin": {
      "type": "OTP",
      "value": "${#TestCase#OTP}"
    }
  },
  "reqTime": "${#TestCase#posreqTime}",
  "signature": "string",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="fe0574dc-4fbc-44cb-9939-15e218be69de" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.err.errorCode[0] == "IDA-OTA-006"
assert json.err.errorMessage[0] == "OTP is invalid"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="4948c7ff-ba81-460b-a3e5-df85e35e4d66" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="408e4381-f39f-4fff-b66f-375605bb8e78" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:03:14.789Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-12T04:06:36.966Z</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-16T10:43:15.271+0530</con:value>
        </con:property>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>105792</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="7991f70c-5d9f-44a0-ab01-44b3f9bfde93" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_Invalid_TxnID_boundaryValueMoreThan10Digits" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="43d4671d-fd5c-4b5f-802f-4d8bfbb528c3">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="61cfbd8e-443c-4cf1-8ff0-be8c866c4e44">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posid}",
  "idType": "${#TestSuite#posidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="23588ce4-ca73-465b-8f03-080d0f26099b" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="ecc9d255-1dcd-4a60-9915-adf8d70f8f8e">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="26451348-052c-4483-967f-bc1b5e098c78" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="4879b932-1073-4ed0-8f90-e09fcb949226">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
def lastDate = Instant.now();//current time

def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString
testRunner.testCase.testSuite.setPropertyValue("timestamp",lastDate.toString()); 
log.info(content);
def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", object.OTP )
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="52f85215-d7d8-4c46-bc14-c4ef96863c78">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "authType": {
    "otp": true
  },
  "data": "string",
  "hmac": "string",
  "id": "${#TestSuite#posid}",
  "idType": "${#TestSuite#posidType}",
  "key": {
    "publicKeyCert": "string",
    "sessionKey": "string"
  },
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "pii": {
    "pin": {
      "type": "OTP",
      "value": "${#TestCase#OTP}"
    }
  },
  "reqTime": "${#TestCase#posreqTime}",
  "signature": "string",
  "txnID": "${#TestSuite#negtxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="0c2123bc-1045-4ecd-bfb4-67e94ec6eb5d" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.err.errorCode[0] == "Pattern"
assert json.err.errorMessage[0] == "TxnId size must be 10"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="db245879-32ca-47a5-aa3d-abcda2d63ee1" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>985535</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-16T11:41:27.969+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:11:26.569Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-09T12:17:25.349Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="49cdc764-0013-4744-bc8c-0e099ff687cb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_Smoke_Invalid_boundaryvalueLessThan10Digits" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="35e608d1-2d9c-4723-a139-fa1d17b4dea9">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="f11c2d92-9853-499a-8905-9d9840ae1bb2">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posid}",
  "idType": "${#TestSuite#posidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="9c732405-548a-4b76-a9cc-76256518b37f" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="022ab766-99d6-4aa6-b495-ccf295f01a13">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="c9bc2f0f-5dd9-4181-a1c5-e683c6dce98d" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="3d2ac93d-c187-46ef-998f-603122c2ad52">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
def lastDate = Instant.now();//current time

def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString
testRunner.testCase.testSuite.setPropertyValue("timestamp",lastDate.toString()); 
log.info(content);
def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", object.OTP )
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="a7f4ff56-bdad-4bc6-95ad-03baf6fedf60">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "authType": {
    "otp": true
  },
  "data": "string",
  "hmac": "string",
  "id": "${#TestSuite#posid}",
  "idType": "${#TestSuite#posidType}",
  "key": {
    "publicKeyCert": "string",
    "sessionKey": "string"
  },
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "pii": {
    "pin": {
      "type": "OTP",
      "value": "${#TestCase#OTP}"
    }
  },
  "reqTime": "${#TestCase#posreqTime}",
  "signature": "string",
  "txnID": "${#TestSuite#negtxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="658500a2-7908-4956-a20b-ed7314141e0a" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.err.errorCode[0] == "Pattern"
assert json.err.errorMessage[0] == "TxnId size must be 10"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="a843b9a7-f6df-4ba5-ba5c-685169dccf24" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>192208</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-16T11:34:17.114+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:04:16.640Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-09T12:17:25.873Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="a1bc1d55-0685-4e7b-b82b-d65b02b3688f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_Invalid_TxnID_equalTo10Digits" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="79798ef3-c527-43de-b4cc-c0e4855fffee">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="31b3f127-5f01-4a72-ad1d-a96bb914b81f">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posid}",
  "idType": "${#TestSuite#posidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="7e73a29d-f4c7-4968-9669-1daa29bb0ff1" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="90b6718f-bbcb-43db-bc13-4ad7b2f0c29c">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="cb4171f4-1988-4d48-be52-4820afd100a1" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="55476547-03da-4a1f-88c2-21406bbb61d4">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
def lastDate = Instant.now();//current time

def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString
testRunner.testCase.testSuite.setPropertyValue("timestamp",lastDate.toString()); 
log.info(content);
def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", object.OTP )
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="03eae278-bbb7-4205-94a2-e45427d92790">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "authType": {
    "otp": true
  },
  "data": "string",
  "hmac": "string",
  "id": "${#TestSuite#posid}",
  "idType": "${#TestSuite#posidType}",
  "key": {
    "publicKeyCert": "string",
    "sessionKey": "string"
  },
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "pii": {
    "pin": {
      "type": "OTP",
      "value": "${#TestCase#OTP}"
    }
  },
  "reqTime": "${#TestCase#posreqTime}",
  "signature": "string",
  "txnID": "${#TestSuite#posmsaLicenseKey}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="fa3b5726-8714-45e1-aec2-8191e1347584" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.err.errorCode[0] == "IDA-OTA-007"
assert json.err.errorMessage[0] == "Input txnID does not match txnID of OTP Request"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="18d4b289-2037-44aa-8538-f1b73c27c633" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>274170</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-16T11:34:18.154+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:04:17.663Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-09T12:17:26.143Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="f832d02b-ecd2-4f88-8508-b17bc98b7c29" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate__Invalid_OTP_OTPMissing" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="3f5d6107-0cfd-450f-9369-42ab05686406">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="2bd68e61-c2d9-4fe6-9dfe-3b255322a630">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posid}",
  "idType": "${#TestSuite#posidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="d609ddf4-1647-4bec-be22-60d1cad3dbe7" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="6f5fe5a0-b5b1-428e-b8d3-dc210ff49f8a">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="97add5e7-a46e-4dc3-9f55-1b845fa116f6" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="0b016f8e-f12a-46fd-bad6-aae650b5e48c">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
def lastDate = Instant.now();//current time

def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString
testRunner.testCase.testSuite.setPropertyValue("timestamp",lastDate.toString()); 
log.info(content);
def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", object.OTP )
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="9cd4e87b-a516-4fb5-bfdf-0d58310911e9">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "authType": {
    "otp": true
  },
  "data": "string",
  "hmac": "string",
  "id": "${#TestSuite#posid}",
  "idType": "${#TestSuite#posidType}",
  "key": {
    "publicKeyCert": "string",
    "sessionKey": "string"
  },
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "pii": {
    "pin": {
      "type": "OTP",
      "value": ""
    }
  },
  "reqTime": "${#TestCase#posreqTime}",
  "signature": "string",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="fe0574dc-4fbc-44cb-9939-15e218be69de" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.err.errorCode[0] == "IDA-OTA-006"
assert json.err.errorMessage[0] == "OTP is invalid"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="4948c7ff-ba81-460b-a3e5-df85e35e4d66" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>942866</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-16T11:34:18.885+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:04:18.386Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-09T12:17:26.413Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="bffd597b-bc95-4531-941d-e0dbbbe2ec66" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_ValidTxnID_InvalidOTP" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="4095ea76-3be8-425b-9f43-f2f48885c5de">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="357142ee-0fea-4555-896b-87d5da7686c0">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posuid}",
  "idType": "${#TestSuite#posidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="3a4f261e-0f03-4130-815a-2c67e688bdc7" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="3ae44cf3-1e6f-4198-818f-703570ab6117" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null
log.info json</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="d94da7b6-676d-4ca9-b1cb-d1318675ce9e">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="0c732bcb-84a4-45e1-b094-465463965ef2" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="ac5faceb-8fba-4152-a5f1-8a3f3b4b1195" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="96d3dd6a-f2e1-4a8e-8672-4146d43bf050">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random
def lastDate = Instant.now();//current time



 Random rnd = new Random();
    int number = rnd.nextInt(999999);
def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString
testRunner.testCase.testSuite.setPropertyValue("timestamp",lastDate.toString()); 
log.info(content);
def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", Integer.toString(number))
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="9d904350-7bbc-4ead-bbeb-f57605e63ad7">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
	"authType": {
		"otp": true
	},
	"data": "string",
	"hmac": "string",
	"id": "${#TestSuite#posid}",
	"idType": "${#TestSuite#posidType}",
	"key": {
		"publicKeyCert": "string",
		"sessionKey": "string"
	},
	"msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
	"muaCode": "${#TestSuite#posmuaCode}",
	"pii": {
		"pin": {
			"type": "OTP",
			"value": "${##OTP}"
		}
	},
	"reqTime": "${#TestCase#posreqTime}",
	"signature": "string",
	"txnID": "${#TestSuite#postxnID}",
	"ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="5e3b0d6c-091a-4b5a-bf72-287b61861ee5" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.err[0].errorCode == "IDA-OTA-006"
assert json.err[0].errorMessage == "OTP is invalid"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="fe377f2d-e4f5-4217-ba04-da0754c799b4" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="31e211f9-160a-4633-a27c-fc7018e565b8" name="Response SLA">
              <con:configuration>
                <SLA>600</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay" id="c340b5ea-bc91-41f4-889e-ccda9bcb7364">
        <con:settings/>
        <con:config>
          <delay>1000</delay>
        </con:config>
      </con:testStep>
      <con:loadTest id="54e6c81c-fda7-46cb-b66d-69e9934e1451" name="LoadTest 1">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
          <con:setting id="hasBeenConvertedToLoadUITest">true</con:setting>
        </con:settings>
        <con:threadCount>16</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>465757</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-15T10:56:18.131+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:04:19.049Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-09T12:17:23.453Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="0b126deb-605d-4c3f-b8bf-2ad97cf5ca47" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_InValidTxnID_validOTP" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="4458b250-9da7-4df4-a0ea-ea018528b4f9">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="13377a74-2d63-4fc3-989b-45a028504591">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posuid}",
  "idType": "${#TestSuite#posidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="3a4f261e-0f03-4130-815a-2c67e688bdc7" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="3ae44cf3-1e6f-4198-818f-703570ab6117" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null
log.info json</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="a35af2e6-29bc-413a-a17b-c2345384dbf8">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="0c732bcb-84a4-45e1-b094-465463965ef2" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="ac5faceb-8fba-4152-a5f1-8a3f3b4b1195" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="1d77dd47-72ab-4403-8f7e-7740d91fc249">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;

 Random rnd = new Random();
    int number = rnd.nextInt(999999);
testRunner.testCase.setPropertyValue( "OTP", Integer.toString(number))
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="e63dedaa-210e-4a4e-8c3e-9dd2014cb7b5">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
	"authType": {
		"otp": true
	},
	"data": "string",
	"hmac": "string",
	"id": "${#TestSuite#posid}",
	"idType": "${#TestSuite#posidType}",
	"key": {
		"publicKeyCert": "string",
		"sessionKey": "string"
	},
	"msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
	"muaCode": "${#TestSuite#posmuaCode}",
	"pii": {
		"pin": {
			"type": "OTP",
			"value": "${#TestCase#OTP}"
		}
	},
	"reqTime": "${#TestCase#posreqTime}",
	"signature": "string",
	"txnID": "${#TestSuite#negtxnID}",
	"ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="5e3b0d6c-091a-4b5a-bf72-287b61861ee5" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.err[0].errorCode == "Pattern"
assert json.err[0].errorMessage == "TxnId size must be 10"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="fe377f2d-e4f5-4217-ba04-da0754c799b4" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="31e211f9-160a-4633-a27c-fc7018e565b8" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay" id="0052c305-f7cf-451f-9900-a28eec217559">
        <con:settings/>
        <con:config>
          <delay>1000</delay>
        </con:config>
      </con:testStep>
      <con:loadTest id="5dc11492-92f5-4730-9afd-9e0946bce110" name="LoadTest 1">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
          <con:setting id="hasBeenConvertedToLoadUITest">true</con:setting>
        </con:settings>
        <con:threadCount>16</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>109962</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-15T11:00:50.967+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:04:19.272Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-09T12:17:23.453Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="ab6f1ca9-6043-4e83-be72-c5233dc4a2ce" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_InValidTxnID_InValidOTP" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="0cb1fb74-734f-4aa9-a737-1252d2bf8075">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="5665dcb2-2d10-468c-b9ca-cebfc579c59a">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posuid}",
  "idType": "${#TestSuite#posidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="3a4f261e-0f03-4130-815a-2c67e688bdc7" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="3ae44cf3-1e6f-4198-818f-703570ab6117" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null
log.info json</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="0485c681-a1e0-4cda-a170-25261d668612">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="0c732bcb-84a4-45e1-b094-465463965ef2" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="ac5faceb-8fba-4152-a5f1-8a3f3b4b1195" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="f4ef0ef4-f430-400b-b815-06cba053dd36">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;

 Random rnd = new Random();
    int number = rnd.nextInt(999999);
testRunner.testCase.setPropertyValue( "OTP", Integer.toString(number))
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="10a0ceb2-a61c-4b7f-a1d1-55a7afa556af">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
	"authType": {
		"otp": true
	},
	"data": "string",
	"hmac": "string",
	"id": "${#TestSuite#posid}",
	"idType": "${#TestSuite#posidType}",
	"key": {
		"publicKeyCert": "string",
		"sessionKey": "string"
	},
	"msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
	"muaCode": "${#TestSuite#posmuaCode}",
	"pii": {
		"pin": {
			"type": "OTP",
			"value": "${#TestCase#OTP}"
		}
	},
	"reqTime": "${#TestCase#posreqTime}",
	"signature": "string",
	"txnID": "${#TestSuite#postxnID}",
	"ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="5e3b0d6c-091a-4b5a-bf72-287b61861ee5" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 0</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="fe377f2d-e4f5-4217-ba04-da0754c799b4" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="31e211f9-160a-4633-a27c-fc7018e565b8" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay" id="bd431a8b-212b-40fd-99cb-e19440ab2d47">
        <con:settings/>
        <con:config>
          <delay>1000</delay>
        </con:config>
      </con:testStep>
      <con:loadTest id="ff91c5d5-10ee-40f3-a990-e6a8be9a70ba" name="LoadTest 1">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
          <con:setting id="hasBeenConvertedToLoadUITest">true</con:setting>
        </con:settings>
        <con:threadCount>16</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>553846</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-15T11:04:28.704+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:04:19.510Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-09T12:17:23.453Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="3348f706-1c12-4b15-af2d-394fa9169aa3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_Invalid_reqTime_out_of_limit_req&lt;24" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="7b52c5a6-3569-4544-9038-04f44a752b4b">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="8db3108f-e93f-4498-970d-3ca5c691efdb">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posid}",
  "idType": "${#TestSuite#posidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="d609ddf4-1647-4bec-be22-60d1cad3dbe7" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="732d7faa-aa12-41d5-a790-3cd037085c6a">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="97add5e7-a46e-4dc3-9f55-1b845fa116f6" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="77dd43c4-be91-49ef-8f9c-618a889c02c4">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;

def lastDate = Instant.now();//current time

def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString
testRunner.testCase.testSuite.setPropertyValue("timestamp",lastDate.toString()); 
log.info(content);
def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", object.OTP )

DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Calendar now = Calendar.getInstance();
	now.add(Calendar.HOUR, -(60*24));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(now.getTime()))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="86bf1aae-e4e4-4dd8-ade5-03e43244d1f5">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "authType": {
    "otp": true
  },
  "data": "string",
  "hmac": "string",
  "id": "${#TestSuite#posid}",
  "idType": "${#TestSuite#posidType}",
  "key": {
    "publicKeyCert": "string",
    "sessionKey": "string"
  },
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "pii": {
    "pin": {
      "type": "OTP",
      "value": "${#TestCase#OTP}"
    }
  },
  "reqTime": "${#TestCase#posreqTime}",
  "signature": "string",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="fe0574dc-4fbc-44cb-9939-15e218be69de" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.err.errorCode[0] == "IDA-RQV-TMOUT-001"
assert json.err.errorMessage[0] == "Request should be reached within 24Hrs"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="4948c7ff-ba81-460b-a3e5-df85e35e4d66" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:04:19.722Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-12T03:52:50.619Z</con:value>
        </con:property>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>560647</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-09-16T11:06:28.894+0530</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="dcad7b5a-b25f-466e-b476-b9b0305cd4db" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_Invalid_reqTime_out_of_limit_req>24" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="19e6ef7a-9ecf-4284-8937-3ad793b38d96">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="4b0e7166-fe61-4556-b83d-1f77011bd660">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posid}",
  "idType": "${#TestSuite#posidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="d609ddf4-1647-4bec-be22-60d1cad3dbe7" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="6e4669af-c009-4a16-9de9-68c192df4e36">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="97add5e7-a46e-4dc3-9f55-1b845fa116f6" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="2fb87494-b50e-4866-b4af-c465ab858fc6">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;

def lastDate = Instant.now();//current time

def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString
testRunner.testCase.testSuite.setPropertyValue("timestamp",lastDate.toString()); 
log.info(content);
def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", object.OTP )

DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Calendar now = Calendar.getInstance();
	now.add(Calendar.HOUR, -(60*25));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(now.getTime()))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="abc904d4-4418-4ea1-81a9-39701983edc8">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "authType": {
    "otp": true
  },
  "data": "string",
  "hmac": "string",
  "id": "${#TestSuite#posid}",
  "idType": "${#TestSuite#posidType}",
  "key": {
    "publicKeyCert": "string",
    "sessionKey": "string"
  },
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "pii": {
    "pin": {
      "type": "OTP",
      "value": "${#TestCase#OTP}"
    }
  },
  "reqTime": "${#TestCase#posreqTime}",
  "signature": "string",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="fe0574dc-4fbc-44cb-9939-15e218be69de" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.err.errorCode[0] == "IDA-RQV-TMOUT-001"
assert json.err.errorMessage[0] == "Request should be reached within 24Hrs"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="4948c7ff-ba81-460b-a3e5-df85e35e4d66" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:04:19.964Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-12T03:52:50.619Z</con:value>
        </con:property>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>142990</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-09-13T23:19:03.906+0530</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="3510fba9-f13e-4e67-b153-46fbf76d30c7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_Smoke_VID" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="6ce33a30-3f33-40f3-b408-0b8200c18490">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="2ce5b3c4-1a88-45a9-b5e0-01cf9425186a">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="3a4f261e-0f03-4130-815a-2c67e688bdc7" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="3ae44cf3-1e6f-4198-818f-703570ab6117" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null
log.info json</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="b0588a6c-dab9-4f05-9e5b-c4ded566ed32">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="0c732bcb-84a4-45e1-b094-465463965ef2" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="ac5faceb-8fba-4152-a5f1-8a3f3b4b1195" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="c658d778-4c55-4c77-a76c-b8d6a79aab7b">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;


def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString

def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", object.OTP )
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="ac54ebe8-444d-4a19-8e19-081b8c27f968">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
	"authType": {
		"otp": true
	},
	"data": "string",
	"hmac": "string",
	"id": "${#TestSuite#posvid}",
	"idType": "${#TestSuite#posvidType}",
	"key": {
		"publicKeyCert": "string",
		"sessionKey": "string"
	},
	"msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
	"muaCode": "${#TestSuite#posmuaCode}",
	"pii": {
		"pin": {
			"type": "OTP",
			"value": "${#TestCase#OTP}"
		}
	},
	"reqTime": "${#TestCase#posreqTime}",
	"signature": "string",
	"txnID": "${#TestSuite#postxnID}",
	"ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="5e3b0d6c-091a-4b5a-bf72-287b61861ee5" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 0</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="fe377f2d-e4f5-4217-ba04-da0754c799b4" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay" id="344b8b57-0b9e-4082-b543-5de8ecc7654e">
        <con:settings/>
        <con:config>
          <delay>1000</delay>
        </con:config>
      </con:testStep>
      <con:loadTest id="2dd01e56-7220-470e-af26-a480240b8cce" name="LoadTest 1">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
          <con:setting id="hasBeenConvertedToLoadUITest">true</con:setting>
        </con:settings>
        <con:threadCount>16</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>540897</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-16T11:34:21.707+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:04:20.156Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-09T12:17:23.453Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="56784c75-b115-4c51-882c-98f9fd2181ed" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_Invalid_reqTime_out_of_limit_req=24_VID" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="16dcb1f5-83c5-43e2-b749-352c3cb2b24e">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="ddf39a3e-c2ba-4e71-be4d-3b6389b94982">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="d609ddf4-1647-4bec-be22-60d1cad3dbe7" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="daa41850-8136-40a6-92b3-23f4473163c2">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="97add5e7-a46e-4dc3-9f55-1b845fa116f6" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="44939948-6ae3-4df0-a8f1-7440f6e870ad">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;

def lastDate = Instant.now();//current time

def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString
testRunner.testCase.testSuite.setPropertyValue("timestamp",lastDate.toString()); 
log.info(content);
def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", object.OTP )

DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Calendar now = Calendar.getInstance();
	now.add(Calendar.HOUR, -(60*22));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(now.getTime()))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="32f2feed-88b4-473b-a4be-98a423d1eb40">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "authType": {
    "otp": true
  },
  "data": "string",
  "hmac": "string",
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "key": {
    "publicKeyCert": "string",
    "sessionKey": "string"
  },
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "pii": {
    "pin": {
      "type": "OTP",
      "value": "${#TestCase#OTP}"
    }
  },
  "reqTime": "${#TestCase#posreqTime}",
  "signature": "string",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="fe0574dc-4fbc-44cb-9939-15e218be69de" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.err.errorCode[0] == "IDA-OTA-009"
assert json.err.errorMessage[0] == "Request could not be processed. Please try again"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="4948c7ff-ba81-460b-a3e5-df85e35e4d66" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:04:23.520Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-12T03:52:50.619Z</con:value>
        </con:property>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>080409</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-09-22T11:34:23.996+0530</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="1cc9da27-6faf-4cae-a42d-52d96a7dcc27" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_Invalid_OTP_VID" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="8d4382cf-f77a-4f8d-aaa3-06a39531fe6b">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="a2cb4533-811f-42df-85bd-aceed3a6fe19">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="d609ddf4-1647-4bec-be22-60d1cad3dbe7" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="e5db1514-7d7b-4475-ac6f-4344a1e45fe5">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="97add5e7-a46e-4dc3-9f55-1b845fa116f6" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="4503c58f-8c65-4743-a944-d54835ac51e4">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Random
def lastDate = Instant.now();//current time

    Random rnd = new Random();
    int number = rnd.nextInt(999999);
    

def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString
testRunner.testCase.testSuite.setPropertyValue("timestamp",lastDate.toString()); 
log.info(content);
def object = jsonSlurper.parseText(content);
log.info(object.OTP);

testRunner.testCase.setPropertyValue( "OTP", String.format("%06d", number))
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Calendar now = Calendar.getInstance();
	now.add(Calendar.MINUTE, -50);
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(now.getTime()))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="b841fe61-4ac0-437b-b4b6-785e7127f301">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "authType": {
    "otp": true
  },
  "data": "string",
  "hmac": "string",
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "key": {
    "publicKeyCert": "string",
    "sessionKey": "string"
  },
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "pii": {
    "pin": {
      "type": "OTP",
      "value": "${#TestCase#OTP}"
    }
  },
  "reqTime": "${#TestCase#posreqTime}",
  "signature": "string",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="fe0574dc-4fbc-44cb-9939-15e218be69de" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.err.errorCode[0] == "IDA-OTA-006"
assert json.err.errorMessage[0] == "OTP is invalid"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="4948c7ff-ba81-460b-a3e5-df85e35e4d66" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="408e4381-f39f-4fff-b66f-375605bb8e78" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:04:24.205Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-12T04:06:36.966Z</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-16T10:49:11.143+0530</con:value>
        </con:property>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>731332</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="7c21fcca-e22b-4b5f-ae6a-0c965d2aea11" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_Invalid_TxnID_boundaryValueMoreThan10Digits_VID" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="2b546c68-ed1a-45f0-9099-94e254114979">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="27dd5eae-b2f3-45b8-9959-48194689cb03">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="23588ce4-ca73-465b-8f03-080d0f26099b" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="cc05b751-bead-4ad6-a198-4a5c37ea25f8">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="26451348-052c-4483-967f-bc1b5e098c78" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="7697d3fb-5b03-4d88-b565-e1e6088be920">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
def lastDate = Instant.now();//current time

def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString
testRunner.testCase.testSuite.setPropertyValue("timestamp",lastDate.toString()); 
log.info(content);
def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", object.OTP )
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="d55e3b8e-565a-45d1-ac9c-801978fb70a7">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "authType": {
    "otp": true
  },
  "data": "string",
  "hmac": "string",
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "key": {
    "publicKeyCert": "string",
    "sessionKey": "string"
  },
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "pii": {
    "pin": {
      "type": "OTP",
      "value": "${#TestCase#OTP}"
    }
  },
  "reqTime": "${#TestCase#posreqTime}",
  "signature": "string",
  "txnID": "${#TestSuite#negtxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="0c2123bc-1045-4ecd-bfb4-67e94ec6eb5d" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.err.errorCode[0] == "Pattern"
assert json.err.errorMessage[0] == "TxnId size must be 10"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="db245879-32ca-47a5-aa3d-abcda2d63ee1" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>971364</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-16T11:35:26.256+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:05:24.852Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-09T12:17:25.349Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="f6e972ef-70ef-4405-9b20-f7604939283b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_Invalid_TxnID_boundaryValueLessThan10Digits_VID" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="fa65a233-c25b-4c29-a197-0f22a6283c37">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="7059048d-4464-434e-8cf0-adbdbde6ef47">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="9c732405-548a-4b76-a9cc-76256518b37f" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="bb0d52cc-9b4d-4aed-ab88-507748303d8f">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="c9bc2f0f-5dd9-4181-a1c5-e683c6dce98d" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="01a79b7d-a3f4-46f7-8d24-b3565063a17a">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
def lastDate = Instant.now();//current time

def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString
testRunner.testCase.testSuite.setPropertyValue("timestamp",lastDate.toString()); 
log.info(content);
def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", object.OTP )
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="c23fdf37-e8c6-4d8f-939b-ca96411b78c8">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "authType": {
    "otp": true
  },
  "data": "string",
  "hmac": "string",
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "key": {
    "publicKeyCert": "string",
    "sessionKey": "string"
  },
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "pii": {
    "pin": {
      "type": "OTP",
      "value": "${#TestCase#OTP}"
    }
  },
  "reqTime": "${#TestCase#posreqTime}",
  "signature": "string",
  "txnID": "${#TestSuite#negtxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="658500a2-7908-4956-a20b-ed7314141e0a" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.err.errorCode[0] == "Pattern"
assert json.err.errorMessage[0] == "TxnId size must be 10"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="a843b9a7-f6df-4ba5-ba5c-685169dccf24" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>653626</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-16T11:35:26.887+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:05:26.472Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-09T12:17:25.873Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="5bbb2af6-a270-497d-bd0a-d7a37d3ee7ca" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_Smoke_Invalid_WrongTxnID_equalTo10Digits_VID" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="b09c3c5c-05fa-4e49-815f-2c813bc23a3f">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString()); 
def testCaseProperty = testRunner.testCase.testSuite.getPropertyValue("postxnID");
 char firstIndex = testCaseProperty.charAt(0);
	char changed = (char) ((int)firstIndex + 1);
	testCaseProperty=testCaseProperty.replace(testCaseProperty.charAt(0), changed);

testRunner.testCase.testSuite.setPropertyValue("negtxnID",testCaseProperty);</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="4cc59a48-511a-4110-82b1-660a1c0efcf7">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="7e73a29d-f4c7-4968-9669-1daa29bb0ff1" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="aefd85d1-e0f2-4ffe-99fe-96149d86f5d1">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="cb4171f4-1988-4d48-be52-4820afd100a1" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="1e59f0d1-450c-4bf3-a5e1-65271f584a6e">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
def lastDate = Instant.now();//current time

def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString
testRunner.testCase.testSuite.setPropertyValue("timestamp",lastDate.toString()); 
log.info(content);
def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", object.OTP )
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="39f51273-e210-4355-89db-5e49e046a1be">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "authType": {
    "otp": true
  },
  "data": "string",
  "hmac": "string",
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "key": {
    "publicKeyCert": "string",
    "sessionKey": "string"
  },
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "pii": {
    "pin": {
      "type": "OTP",
      "value": "${#TestCase#OTP}"
    }
  },
  "reqTime": "${#TestCase#posreqTime}",
  "signature": "string",
  "txnID": "${#TestSuite#negtxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="fa3b5726-8714-45e1-aec2-8191e1347584" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.err.errorCode[0] == "IDA-OTA-007"
assert json.err.errorMessage[0] == "Input txnID does not match txnID of OTP Request"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="18d4b289-2037-44aa-8538-f1b73c27c633" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>164042</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-16T11:35:27.511+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:05:27.096Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-09T12:17:26.143Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="c965d87d-a974-4373-b165-345929815426" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate__Invalid_OTP_OTPMissing_VID" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="85b752a2-2d6e-4b04-af54-142dae7061d1">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="bff5f4be-957d-4af0-90d4-a81e977691ca">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="d609ddf4-1647-4bec-be22-60d1cad3dbe7" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="34ea96db-d127-457f-9391-c81a36a2f718">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="97add5e7-a46e-4dc3-9f55-1b845fa116f6" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="90b9fed4-7c33-4244-8a0b-b91793a191ef">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
def lastDate = Instant.now();//current time

def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString
testRunner.testCase.testSuite.setPropertyValue("timestamp",lastDate.toString()); 
log.info(content);
def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", object.OTP )
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="7f8abae4-8c77-4304-8bad-e0a6b168a4af">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "authType": {
    "otp": true
  },
  "data": "string",
  "hmac": "string",
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "key": {
    "publicKeyCert": "string",
    "sessionKey": "string"
  },
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "pii": {
    "pin": {
      "type": "OTP",
      "value": ""
    }
  },
  "reqTime": "${#TestCase#posreqTime}",
  "signature": "string",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="fe0574dc-4fbc-44cb-9939-15e218be69de" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.err.errorCode[0] == "IDA-OTA-006"
assert json.err.errorMessage[0] == "OTP is invalid"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="4948c7ff-ba81-460b-a3e5-df85e35e4d66" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>420040</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-16T11:35:28.144+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:05:27.706Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-09T12:17:26.413Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="159dbe4b-e4f8-4079-9e1d-2723b4bf2bcc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_InValidTxnID_validOTP_VID" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="21058e6b-d333-44da-9f6f-393d329a4e47">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="69aade5f-cd4e-4679-94df-1b867ee528e5">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="3a4f261e-0f03-4130-815a-2c67e688bdc7" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="3ae44cf3-1e6f-4198-818f-703570ab6117" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null
log.info json</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="2ca425aa-0540-4ed8-a489-1b65447bde6b">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="0c732bcb-84a4-45e1-b094-465463965ef2" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="ac5faceb-8fba-4152-a5f1-8a3f3b4b1195" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="d1806478-7e7b-4439-a51d-e57e29a11062">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;

 Random rnd = new Random();
    int number = rnd.nextInt(999999);
testRunner.testCase.setPropertyValue( "OTP", Integer.toString(number))
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="65649f17-2186-4dcb-901b-e2c8964e20ad">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
	"authType": {
		"otp": true
	},
	"data": "string",
	"hmac": "string",
	"id": "${#TestSuite#posvid}",
	"idType": "${#TestSuite#posvidType}",
	"key": {
		"publicKeyCert": "string",
		"sessionKey": "string"
	},
	"msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
	"muaCode": "${#TestSuite#posmuaCode}",
	"pii": {
		"pin": {
			"type": "OTP",
			"value": "${#TestCase#OTP}"
		}
	},
	"reqTime": "${#TestCase#posreqTime}",
	"signature": "string",
	"txnID": "${#TestSuite#postxnID}",
	"ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="5e3b0d6c-091a-4b5a-bf72-287b61861ee5" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 0</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="fe377f2d-e4f5-4217-ba04-da0754c799b4" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="31e211f9-160a-4633-a27c-fc7018e565b8" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay" id="03b50aa9-72e7-41dc-8aff-11256881e4f8">
        <con:settings/>
        <con:config>
          <delay>1000</delay>
        </con:config>
      </con:testStep>
      <con:loadTest id="97a2f9c4-dd31-4c0d-93a3-0603d161b627" name="LoadTest 1">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
          <con:setting id="hasBeenConvertedToLoadUITest">true</con:setting>
        </con:settings>
        <con:threadCount>16</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>186790</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-14T20:24:42.219+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:05:28.293Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-09T12:17:23.453Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="3c23b6d4-deb9-4e81-8ea6-1aea90d184ac" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_ValidTxnID_InvalidOTP_VID" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="092f78bc-f5e9-44f6-8ca5-cf81009aabc2">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="1568a990-0e2f-440c-89dd-9970199bf361">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="3a4f261e-0f03-4130-815a-2c67e688bdc7" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="3ae44cf3-1e6f-4198-818f-703570ab6117" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null
log.info json</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="e66d7b27-33c9-4edd-b97a-469beec0d91d">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="0c732bcb-84a4-45e1-b094-465463965ef2" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="ac5faceb-8fba-4152-a5f1-8a3f3b4b1195" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="80fa5e25-fec8-4db2-8f0c-586744ad2b2a">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;

 Random rnd = new Random();
    int number = rnd.nextInt(999999);
testRunner.testCase.setPropertyValue( "OTP", Integer.toString(number))
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="facfea6b-11f5-4de4-b854-9a250a53ff64">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
	"authType": {
		"otp": true
	},
	"data": "string",
	"hmac": "string",
	"id": "${#TestSuite#posvid}",
	"idType": "${#TestSuite#posvidType}",
	"key": {
		"publicKeyCert": "string",
		"sessionKey": "string"
	},
	"msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
	"muaCode": "${#TestSuite#posmuaCode}",
	"pii": {
		"pin": {
			"type": "OTP",
			"value": "${getOTP#Response#OTP}"
		}
	},
	"reqTime": "${#TestCase#posreqTime}",
	"signature": "string",
	"txnID": "${#TestSuite#negtxnID}",
	"ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="5e3b0d6c-091a-4b5a-bf72-287b61861ee5" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 0</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="fe377f2d-e4f5-4217-ba04-da0754c799b4" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="31e211f9-160a-4633-a27c-fc7018e565b8" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay" id="43b19fbb-2335-4afe-9ce2-7bc02a7571eb">
        <con:settings/>
        <con:config>
          <delay>1000</delay>
        </con:config>
      </con:testStep>
      <con:loadTest id="9495f847-48cf-4a34-97cf-9ce412cc004c" name="LoadTest 1">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
          <con:setting id="hasBeenConvertedToLoadUITest">true</con:setting>
        </con:settings>
        <con:threadCount>16</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>186790</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-14T20:24:42.219+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:05:28.552Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-09T12:17:23.453Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="27af59cd-dd25-4beb-9ec2-b03dd1e566f0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_InValidTxnID_InValidOTP_VID" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="e4011d78-ea51-40bc-86c9-efab9c51857f">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="4e8b4776-076f-4c55-bf38-ad18059dafc8">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="3a4f261e-0f03-4130-815a-2c67e688bdc7" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="3ae44cf3-1e6f-4198-818f-703570ab6117" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null
log.info json</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="71b117d0-45c2-4538-a3e7-551689153391">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="0c732bcb-84a4-45e1-b094-465463965ef2" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="ac5faceb-8fba-4152-a5f1-8a3f3b4b1195" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="09970a9d-de0a-4833-b4de-0b3781f694fa">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;

 Random rnd = new Random();
    int number = rnd.nextInt(999999);
testRunner.testCase.setPropertyValue( "OTP", Integer.toString(number))
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="6d35377a-9090-4db6-8e2c-bd35e2980a6c">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
	"authType": {
		"otp": true
	},
	"data": "string",
	"hmac": "string",
	"id": "${#TestSuite#posvid}",
	"idType": "${#TestSuite#posvidType}",
	"key": {
		"publicKeyCert": "string",
		"sessionKey": "string"
	},
	"msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
	"muaCode": "${#TestSuite#posmuaCode}",
	"pii": {
		"pin": {
			"type": "OTP",
			"value": "${#TestCase#OTP}"
		}
	},
	"reqTime": "${#TestCase#posreqTime}",
	"signature": "string",
	"txnID": "${#TestSuite#postxnID}",
	"ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="5e3b0d6c-091a-4b5a-bf72-287b61861ee5" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 0</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="fe377f2d-e4f5-4217-ba04-da0754c799b4" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="31e211f9-160a-4633-a27c-fc7018e565b8" name="Response SLA">
              <con:configuration>
                <SLA>200</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay" id="23f273bd-7377-40f8-9c95-5b6fd13508d3">
        <con:settings/>
        <con:config>
          <delay>1000</delay>
        </con:config>
      </con:testStep>
      <con:loadTest id="ac156cfe-db09-4b40-b821-74e4718aa9a3" name="LoadTest 1">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
          <con:setting id="hasBeenConvertedToLoadUITest">true</con:setting>
        </con:settings>
        <con:threadCount>16</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>186790</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-14T20:24:42.219+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:05:28.788Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-09T12:17:23.453Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="50725358-a058-4ca6-9686-70cf9163c84e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_Invalid_reqTime_out_of_limit_req&lt;24_VID" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="e2d1e90b-94dd-43dd-990e-c3f1b387e0c9">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="080ce8b7-840b-421b-8fd0-70d86770cf5d">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="d609ddf4-1647-4bec-be22-60d1cad3dbe7" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="018399f9-e1d5-46b8-925c-c3848fe12966">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="97add5e7-a46e-4dc3-9f55-1b845fa116f6" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="15cc20a8-dc7f-4b99-9b14-099d682a5a86">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;

def lastDate = Instant.now();//current time

def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString
testRunner.testCase.testSuite.setPropertyValue("timestamp",lastDate.toString()); 
log.info(content);
def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", object.OTP )

DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Calendar now = Calendar.getInstance();
	now.add(Calendar.HOUR, -(60*24));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(now.getTime()))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="0ec44faf-a2ae-4bfe-bb10-76b59d83fe9c">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "authType": {
    "otp": true
  },
  "data": "string",
  "hmac": "string",
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "key": {
    "publicKeyCert": "string",
    "sessionKey": "string"
  },
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "pii": {
    "pin": {
      "type": "OTP",
      "value": "${#TestCase#OTP}"
    }
  },
  "reqTime": "${#TestCase#posreqTime}",
  "signature": "string",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="fe0574dc-4fbc-44cb-9939-15e218be69de" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.err.errorCode[0] == "IDA-OTA-009"
assert json.err.errorMessage[0] == "Request could not be processed. Please try again"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="4948c7ff-ba81-460b-a3e5-df85e35e4d66" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:05:29.008Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-12T03:52:50.619Z</con:value>
        </con:property>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>045528</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-13T19:15:31.946+0530</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="8a8630ce-1645-4dc3-92d2-1fb75641e77a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_Invalid_reqTime_out_of_limit_req>24_VID" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="e29a0da5-84d2-433e-83d9-7a01e01cb144">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time

//testRunner.testCase.testSuite["OTP_Generator"].setPropertyValue("timestamp",lastDate.toString());
//testRunner.testCase.testSuite.testCases["Ini"].setPropertyValue("timestamp",lastDate.toString()); 
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="645e6277-3b40-4bf8-bfdc-6f891232deba">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="d609ddf4-1647-4bec-be22-60d1cad3dbe7" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="b209b61c-4f9f-4ed3-a42f-8f629eba9a47">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="97add5e7-a46e-4dc3-9f55-1b845fa116f6" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="178fb313-6e98-436c-8b12-17a9aa340e79">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;

def lastDate = Instant.now();//current time

def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString
testRunner.testCase.testSuite.setPropertyValue("timestamp",lastDate.toString()); 
log.info(content);
def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", object.OTP )

DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Calendar now = Calendar.getInstance();
	now.add(Calendar.HOUR, -(60*25));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(now.getTime()))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="6d6402bd-0ff2-45e0-b140-a3d23dffd31e">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "authType": {
    "otp": true
  },
  "data": "string",
  "hmac": "string",
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "key": {
    "publicKeyCert": "string",
    "sessionKey": "string"
  },
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "pii": {
    "pin": {
      "type": "OTP",
      "value": "${#TestCase#OTP}"
    }
  },
  "reqTime": "${#TestCase#posreqTime}",
  "signature": "string",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="fe0574dc-4fbc-44cb-9939-15e218be69de" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.err.errorCode[0] == "IDA-OTA-009"
assert json.err.errorMessage[0] == "Request could not be processed. Please try again"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="4948c7ff-ba81-460b-a3e5-df85e35e4d66" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:05:29.237Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-12T03:52:50.619Z</con:value>
        </con:property>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>045528</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-13T19:15:31.946+0530</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="0d000297-49d0-4efa-9687-3611e8f4af56" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_Smoke_InvalidUIN" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="8ff84ba2-b30d-44f6-a9bc-af8addb9e5f8">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="ba2b86e2-1484-4350-b5e9-7817a0dd009e">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posuid}",
  "idType": "${#TestSuite#posidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="3a4f261e-0f03-4130-815a-2c67e688bdc7" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="3ae44cf3-1e6f-4198-818f-703570ab6117" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null
log.info json</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="2625f0eb-e96a-478b-8412-d168eec84146">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="0c732bcb-84a4-45e1-b094-465463965ef2" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="ac5faceb-8fba-4152-a5f1-8a3f3b4b1195" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="405c0866-5b60-4c23-935a-58e27f39051c">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;


def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString

def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", object.OTP )
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="5faa3dae-296d-4799-ab65-045f538dd76d">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
	"authType": {
		"otp": true
	},
	"data": "string",
	"hmac": "string",
	"id": "${#TestSuite#negid}",
	"idType": "${#TestSuite#posidType}",
	"key": {
		"publicKeyCert": "string",
		"sessionKey": "string"
	},
	"msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
	"muaCode": "${#TestSuite#posmuaCode}",
	"pii": {
		"pin": {
			"type": "OTP",
			"value": "${getOTP#Response#OTP}"
		}
	},
	"reqTime": "${#TestCase#posreqTime}",
	"signature": "string",
	"txnID": "${#TestSuite#postxnID}",
	"ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="5e3b0d6c-091a-4b5a-bf72-287b61861ee5" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 0</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="fe377f2d-e4f5-4217-ba04-da0754c799b4" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay" id="e4a1e226-1180-4018-bc08-912a388f1935">
        <con:settings/>
        <con:config>
          <delay>1000</delay>
        </con:config>
      </con:testStep>
      <con:loadTest id="bc34a7b0-a0a0-44dd-9735-6d0a0d7d1211" name="LoadTest 1">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
          <con:setting id="hasBeenConvertedToLoadUITest">true</con:setting>
        </con:settings>
        <con:threadCount>16</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>508774</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-16T11:35:29.925+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:05:29.461Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-09T12:17:23.453Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="e3212635-0e86-4a16-9679-b85f7bf83082" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_Smoke_InvalidVID" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="70cb39bb-1c9a-4505-8b84-4a32fe48f3d9">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="1ca848bc-9be3-4e21-8b12-5de2353e1cf1">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="3a4f261e-0f03-4130-815a-2c67e688bdc7" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="3ae44cf3-1e6f-4198-818f-703570ab6117" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null
log.info json</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="2c4d854d-4698-4b20-a6bf-f587abf05df6">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="0c732bcb-84a4-45e1-b094-465463965ef2" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="ac5faceb-8fba-4152-a5f1-8a3f3b4b1195" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="d00ebc07-4f38-4761-837f-1b08ff5d0367">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;


def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString

def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", object.OTP )
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="1690a206-54ed-47f9-bff0-e54b9d43679f">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
	"authType": {
		"otp": true
	},
	"data": "string",
	"hmac": "string",
	"id": "${#TestSuite#negvid}",
	"idType": "${#TestSuite#posidType}",
	"key": {
		"publicKeyCert": "string",
		"sessionKey": "string"
	},
	"msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
	"muaCode": "${#TestSuite#posmuaCode}",
	"pii": {
		"pin": {
			"type": "OTP",
			"value": "${getOTP#Response#OTP}"
		}
	},
	"reqTime": "${#TestCase#posreqTime}",
	"signature": "string",
	"txnID": "${#TestSuite#postxnID}",
	"ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="5e3b0d6c-091a-4b5a-bf72-287b61861ee5" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 0</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="fe377f2d-e4f5-4217-ba04-da0754c799b4" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay" id="7819cd13-a2ab-4126-8bc8-195e58308d97">
        <con:settings/>
        <con:config>
          <delay>1000</delay>
        </con:config>
      </con:testStep>
      <con:loadTest id="564d4fd4-90b0-4698-a17a-3c4432c36feb" name="LoadTest 1">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
          <con:setting id="hasBeenConvertedToLoadUITest">true</con:setting>
        </con:settings>
        <con:threadCount>16</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>288579</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-14T18:17:55.383+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:05:30.069Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-09T12:17:23.453Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="ad268698-a35d-466d-b43e-c439d92e8459" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OTP_Authenticate_Smoke_Invalid_ver_UID" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="f63be5a2-f5eb-4524-b916-ec154fb23003">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="46f05113-0c98-4a13-b021-8d68e7266190">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posuid}",
  "idType": "${#TestSuite#posidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="3a4f261e-0f03-4130-815a-2c67e688bdc7" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="3ae44cf3-1e6f-4198-818f-703570ab6117" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null
log.info json</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="38b3a5f6-d5fb-40c6-93a2-6449465001c6">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="0c732bcb-84a4-45e1-b094-465463965ef2" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="ac5faceb-8fba-4152-a5f1-8a3f3b4b1195" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="b204f501-f388-4ced-95d0-b3f3ae88816e">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;


def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString

def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", object.OTP )
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="b7a5d225-b756-4a07-8495-117a61278741">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
	"authType": {
		"otp": true
	},
	"data": "string",
	"hmac": "string",
	"id": "${#TestSuite#posid}",
	"idType": "${#TestSuite#posidType}",
	"key": {
		"publicKeyCert": "string",
		"sessionKey": "string"
	},
	"msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
	"muaCode": "${#TestSuite#posmuaCode}",
	"pii": {
		"pin": {
			"type": "OTP",
			"value": "${getOTP#Response#OTP}"
		}
	},
	"reqTime": "${#TestCase#posreqTime}",
	"signature": "string",
	"txnID": "${#TestSuite#postxnID}",
	"ver": "${#TestSuite#negver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="5e3b0d6c-091a-4b5a-bf72-287b61861ee5" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 0</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="fe377f2d-e4f5-4217-ba04-da0754c799b4" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay" id="10efd2a5-0bda-4592-8e90-6e11b7ab1914">
        <con:settings/>
        <con:config>
          <delay>1000</delay>
        </con:config>
      </con:testStep>
      <con:loadTest id="4762fe13-e640-4c43-963c-dbdb305853a0" name="LoadTest 1">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
          <con:setting id="hasBeenConvertedToLoadUITest">true</con:setting>
        </con:settings>
        <con:threadCount>16</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>284408</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-16T11:35:30.843+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:05:30.300Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-09T12:17:23.453Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="74519756-8105-4643-b1df-f51cb14b35e6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Copy of OTP_Authenticate_Smoke_Invalid_ver_VID" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="fad1ca34-9744-4cd8-8519-be440d4cd0c1">
        <con:settings/>
        <con:config>
          <script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def lastDate = Instant.now();//current time
testRunner.testCase.setPropertyValue("timestamp",lastDate.toString());</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="genOTP" id="458e9bf2-af95-444c-98a6-42d70c62725b">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="genOTP" id="09792654-dfaf-4987-9f11-8be71cc7339d" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
  "id": "${#TestSuite#posvid}",
  "idType": "${#TestSuite#posvidType}",
  "msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
  "muaCode": "${#TestSuite#posmuaCode}",
  "reqTime": "${#TestCase#timestamp}",
  "txnID": "${#TestSuite#postxnID}",
  "ver": "${#TestSuite#posver}"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/otp</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="3a4f261e-0f03-4130-815a-2c67e688bdc7" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="3ae44cf3-1e6f-4198-818f-703570ab6117" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 6
assert json.status == "Y"
assert json.maskedMobile == null
assert json.maskedEmail == null
log.info json</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getOTP" id="74d5db7f-f1d8-4dba-8c36-ca1b0455b09a">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/getOTP" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getOTP" id="8edd2709-4f58-4a1e-916b-4a9848d89269" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request/>
            <con:originalUri>http://13.71.81.26/getOTP</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="0c732bcb-84a4-45e1-b094-465463965ef2" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="GroovyScriptAssertion" id="ac5faceb-8fba-4152-a5f1-8a3f3b4b1195" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 1</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="getOTP_Script" id="49237796-873b-45aa-823b-1d2cfc4dedef">
        <con:settings/>
        <con:config>
          <script>import groovy.json.*;
import java.time.Instant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;


def jsonSlurper = new JsonSlurper()
def content = testRunner.testCase.testSteps["getOTP"].testRequest.response.contentAsString

def object = jsonSlurper.parseText(content);
log.info(object.OTP);
testRunner.testCase.setPropertyValue( "OTP", object.OTP )
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date))</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="authenticate" id="6990ce73-3e1d-4ace-8563-c4c3afa550f1">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="authenticate" id="b552e9d5-fd31-4921-9158-2db2f42a1d54" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{
	"authType": {
		"otp": true
	},
	"data": "string",
	"hmac": "string",
	"id": "${#TestSuite#posvid}",
	"idType": "${#TestSuite#posvidType}",
	"key": {
		"publicKeyCert": "string",
		"sessionKey": "string"
	},
	"msaLicenseKey": "${#TestSuite#posmsaLicenseKey}",
	"muaCode": "${#TestSuite#posmuaCode}",
	"pii": {
		"pin": {
			"type": "OTP",
			"value": "${#TestCase#OTP}"
		}
	},
	"reqTime": "${#TestCase#posreqTime}",
	"signature": "string",
	"txnID": "${#TestSuite#postxnID}",
	"ver": "#{#TestSuite#negver}"
	}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="5e3b0d6c-091a-4b5a-bf72-287b61861ee5" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
assert json.size() == 5
assert json.err.size() == 1
assert json.err[0].errorCode == "Digits"
assert json.err[0].errorMessage == "Version range max integer 1 digit and max fraction 1 digit only"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="fe377f2d-e4f5-4217-ba04-da0754c799b4" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay" id="01cc8b1b-2134-43db-80ad-832563781dc9">
        <con:settings/>
        <con:config>
          <delay>1000</delay>
        </con:config>
      </con:testStep>
      <con:loadTest id="311322b3-7180-4d70-bd30-569df63899cb" name="LoadTest 1">
        <con:settings>
          <con:setting id="HttpSettings@close-connections">false</con:setting>
          <con:setting id="hasBeenConvertedToLoadUITest">true</con:setting>
        </con:settings>
        <con:threadCount>16</con:threadCount>
        <con:startDelay>0</con:startDelay>
        <con:sampleInterval>250</con:sampleInterval>
        <con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
        <con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
        <con:historyLimit>-1</con:historyLimit>
        <con:testLimit>60</con:testLimit>
        <con:limitType>TIME</con:limitType>
        <con:loadStrategy>
          <con:type>Simple</con:type>
        </con:loadStrategy>
        <con:assertion type="Step Status" name="Step Status"/>
        <con:maxAssertionErrors>100</con:maxAssertionErrors>
        <con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
        <con:strategyInterval>500</con:strategyInterval>
        <con:reportParameters/>
      </con:loadTest>
      <con:properties>
        <con:property>
          <con:name>OTP</con:name>
          <con:value>281340</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-15T11:25:13.165+0530</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp</con:name>
          <con:value>2018-11-16T06:05:30.989Z</con:value>
        </con:property>
        <con:property>
          <con:name>timestamp20minutebefore</con:name>
          <con:value>2018-11-09T12:17:23.453Z</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:properties>
      <con:property>
        <con:name>timestamp</con:name>
        <con:value>2018-11-16T06:11:27.968Z</con:value>
      </con:property>
      <con:property>
        <con:name>timestamp20minutebefore</con:name>
        <con:value>2018-11-09T12:17:23.353Z</con:value>
      </con:property>
      <con:property>
        <con:name>posid</con:name>
        <con:value>426789089018</con:value>
      </con:property>
      <con:property>
        <con:name>negid</con:name>
        <con:value>4267890890181</con:value>
      </con:property>
      <con:property>
        <con:name>posvid</con:name>
        <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">5371843613598206</con:value>
      </con:property>
      <con:property>
        <con:name>negvid</con:name>
        <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
      </con:property>
      <con:property>
        <con:name>posidType</con:name>
        <con:value>D</con:value>
      </con:property>
      <con:property>
        <con:name>negidType</con:name>
        <con:value>D</con:value>
      </con:property>
      <con:property>
        <con:name>posvidType</con:name>
        <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">V</con:value>
      </con:property>
      <con:property>
        <con:name>negvidType</con:name>
        <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F</con:value>
      </con:property>
      <con:property>
        <con:name>posmsaLicenseKey</con:name>
        <con:value>2161813649</con:value>
      </con:property>
      <con:property>
        <con:name>negmsaLicenseKey</con:name>
        <con:value>MSALICENSE11</con:value>
      </con:property>
      <con:property>
        <con:name>posmuaCode</con:name>
        <con:value>9363987135</con:value>
      </con:property>
      <con:property>
        <con:name>negmuaCode</con:name>
        <con:value>MUALICENSE11</con:value>
      </con:property>
      <con:property>
        <con:name>postxnID</con:name>
        <con:value>2945984023</con:value>
      </con:property>
      <con:property>
        <con:name>negtxnID</con:name>
        <con:value>3945984033</con:value>
      </con:property>
      <con:property>
        <con:name>posver</con:name>
        <con:value>1.0</con:value>
      </con:property>
      <con:property>
        <con:name>negver</con:name>
        <con:value>1</con:value>
      </con:property>
      <con:property>
        <con:name>endpoint</con:name>
        <con:value>http://13.71.81.26:8081</con:value>
      </con:property>
      <con:property>
        <con:name>posuid</con:name>
        <con:value>426789089018</con:value>
      </con:property>
      <con:property>
        <con:name>posmobile</con:name>
        <con:value>044-22273388</con:value>
      </con:property>
      <con:property>
        <con:name>posemail</con:name>
        <con:value>sathishk@gmail.com</con:value>
      </con:property>
      <con:property>
        <con:name>posage</con:name>
        <con:value>22</con:value>
      </con:property>
      <con:property>
        <con:name>posdob</con:name>
        <con:value>2001-07-16</con:value>
      </con:property>
      <con:property>
        <con:name>negmsaLicenseKey_11digits</con:name>
        <con:value>40282760868</con:value>
      </con:property>
      <con:property>
        <con:name>negmuaCode_11digits</con:name>
        <con:value>40282760868</con:value>
      </con:property>
      <con:property>
        <con:name>negtxnID_11digits</con:name>
        <con:value>40282760868</con:value>
      </con:property>
      <con:property>
        <con:name>negmsaLicenseKey_9digits</con:name>
        <con:value>345593569</con:value>
      </con:property>
      <con:property>
        <con:name>negmuaCode_9digits</con:name>
        <con:value>345593569</con:value>
      </con:property>
      <con:property>
        <con:name>negtxnID_9digits</con:name>
        <con:value>345593569</con:value>
      </con:property>
    </con:properties>
    <con:reportParameters/>
  </con:testSuite>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:testSuite id="3f3ea0a2-9833-4f5e-aa53-5a83e3c211de" name="UIDvalidation_MOS-11">
    <con:settings/>
    <con:savedRecentRuns>1</con:savedRecentRuns>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="5fced413-0590-45c1-bdb7-408552d85582" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="init" searchProperties="true">
      <con:settings/>
      <con:testStep type="groovy" name="Groovy Script" id="d271981b-0a48-489b-9e4e-925807d9e1fe">
        <con:settings/>
        <con:config><script>import groovy.sql.Sql
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Random; 
import groovy.json.JsonSlurper;
import java.lang.Math; 
import java.time.Instant;
import java.time.Duration; 
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;  

def url='jdbc:postgresql://13.71.81.26:9001/postgres'
def user = 'postgres'
def password= 'admin'
def driver= 'org.postgresql.Driver'

com.eviware.soapui.support.GroovyUtils.registerJdbcDriver(driver)
def sql = Sql.newInstance(url,user,password,driver)
def id= sql.rows("select id from ida.uin")
def ref= sql.rows("select uin_ref_id from ida.uin")
def posid=id[0].id.toString()
def posRef=ref[0].uin_ref_id.toString()
def negRef=ref[0].uin_ref_id.toString()
long muaCode = (long) Math.floor(Math.random() * 9_000_000_0000L) + 1_000_000_0000L; 
String.format("%10d", muaCode) 

long txnID = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_0000L; 
String.format("%10d", txnID) 

DateFormat dateFormat= new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
	Date date = new Date();
	System.out.println(dateFormat.format(date));
testRunner.testCase.setPropertyValue( "posreqTime", dateFormat.format(date)) 

log.info(System.getProperty("user.dir"));
def inputFile = new File(System.getProperty("user.dir")+"\\FinalTestData.json");

def InputJSON = new JsonSlurper().parseText(inputFile.text);

testRunner.testCase.testSuite.setPropertyValue("posid",InputJSON[0].pos.id);
testRunner.testCase.testSuite.setPropertyValue("negid",InputJSON[0].neg.id);
testRunner.testCase.testSuite.setPropertyValue("posidType",InputJSON[0].pos.idType);
testRunner.testCase.testSuite.setPropertyValue("posidType",InputJSON[0].neg.idType);
testRunner.testCase.testSuite.setPropertyValue("posmuaCode",InputJSON[0].pos.muaCode);
testRunner.testCase.testSuite.setPropertyValue("negmuaCode",muaCode.toString());
testRunner.testCase.testSuite.setPropertyValue("posage",InputJSON[0].pos.age.toString());
testRunner.testCase.testSuite.setPropertyValue("negage",InputJSON[0].neg.age.toString());
testRunner.testCase.testSuite.setPropertyValue("posreqTime",dateFormat.format(date));
testRunner.testCase.testSuite.setPropertyValue("negreqTime",InputJSON[0].neg.reqTime);
testRunner.testCase.testSuite.setPropertyValue("postxnID",InputJSON[0].pos.txnID);
testRunner.testCase.testSuite.setPropertyValue("negtxnID",txnID.toString());
testRunner.testCase.testSuite.setPropertyValue("posPhoneNo",InputJSON[0].pos.phone);
testRunner.testCase.testSuite.setPropertyValue("negPhoneNo",InputJSON[0].neg.phone);
testRunner.testCase.testSuite.setPropertyValue("posGender",InputJSON[0].pos.gender);
testRunner.testCase.testSuite.setPropertyValue("negGender",InputJSON[0].neg.gender);
testRunner.testCase.testSuite.setPropertyValue("posDob",InputJSON[0].pos.dob);
testRunner.testCase.testSuite.setPropertyValue("negDob",InputJSON[0].neg.dob);
testRunner.testCase.testSuite.setPropertyValue("posAddrLine1Pri",InputJSON[0].pos.addrLine1Pri);
testRunner.testCase.testSuite.setPropertyValue("negAddrLine1Pri",InputJSON[0].neg.addrLine1Pri);
testRunner.testCase.testSuite.setPropertyValue("posAddrLine2Pri",InputJSON[0].pos.addrLine2Pri);
testRunner.testCase.testSuite.setPropertyValue("negAddrLine2Pri",InputJSON[0].neg.addrLine2Pri);
testRunner.testCase.testSuite.setPropertyValue("posAddrLine3Pri",InputJSON[0].neg.addrLine3Pri);
testRunner.testCase.testSuite.setPropertyValue("negAddrLine3Pri",InputJSON[0].neg.addrLine3Pri);
testRunner.testCase.testSuite.setPropertyValue("posCityPri",InputJSON[0].pos.cityPri);
testRunner.testCase.testSuite.setPropertyValue("negCityPri",InputJSON[0].neg.cityPri);
testRunner.testCase.testSuite.setPropertyValue("posAd",InputJSON[0].pos.ad.toString());
testRunner.testCase.testSuite.setPropertyValue("posBio",InputJSON[0].pos.bio.toString());
testRunner.testCase.testSuite.setPropertyValue("posPi",InputJSON[0].pos.pi.toString());
testRunner.testCase.testSuite.setPropertyValue("erroMessageWrongUIN",InputJSON[0].neg.errorMessageUIN);
testRunner.testCase.testSuite.setPropertyValue("erroMessageExpiredUIN",InputJSON[0].neg.errorMessageExpiredUIN);
testRunner.testCase.testSuite.setPropertyValue("erroMessageInvalidInput",InputJSON[0].neg.errorMessageInvalidInput);
testRunner.testCase.testSuite.setPropertyValue("erroCodeWrongUIN",InputJSON[0].neg.errorMessageUINcode);
testRunner.testCase.testSuite.setPropertyValue("erroCodeExpiredUIN",InputJSON[0].neg.errorMessageExpiredUINCode);
sql.close()</script></con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC Request" id="eb723786-988c-47e3-98ae-d2eb31c4e726"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>org.postgresql.Driver</con:driver><con:connectionString>jdbc:postgresql://13.71.81.26:9001/postgres?user=postgres&amp;password=admin</con:connectionString><con:query>select id from ida.uin</con:query><con:assertion type="Simple Contains" id="0d9c1fd1-cb40-4706-ba0a-957cca980858" name="ValidUID"><con:configuration><token> &lt;UIN.ID>${#TestSuite#posid}&lt;/UIN.ID></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties>
        <con:property>
          <con:name>user_id</con:name>
          <con:value>{id=426789089018, uin_ref_id=12345, is_active=true, cr_by=ida, cr_dtimes=2018-11-13 15:42:28.323423, upd_by=null, upd_dtimes=null, is_deleted=false, del_dtimes=null}</con:value>
        </con:property>
        <con:property>
          <con:name>posreqTime</con:name>
          <con:value>2018-11-16T12:05:13.394+0530</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="8b125007-ce29-4d5d-b21f-f2a1e322afa6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AuthenticatingDB_Invalid_UID" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="AuthenticatingDB_Wrong_UID" id="b8205fd4-042e-4137-a62d-a4234d661b10">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/auth" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AuthenticatingDB_Wrong_UID" id="c034856e-369f-4f89-9740-7b945842aec8" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":"${#TestSuite#posAd}",
      "bio":false,
      "fad":false,
      "otp":false,
      "pi":"${#TestSuite#posPi}",
      "pin":false
   },
   "data":"string",
   "hmac":"string",
   "id":"${#TestSuite#negid}",
   "idType":"${#TestSuite#posidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"string",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{
			"dob":"${#TestSuite#posDob}",
			"gender": "${#TestSuite#posGender}",
            "age": ${#TestSuite#posage},
			"phone":"${#TestSuite#posPhoneNo}"
         },
		   "ad": {
        "addrLine1Pri": "${#TestSuite#posaddrLine1Pri}",
        "addrLine2Pri": "${#TestSuite#posaddrLine2Pri}",
        "addrLine3Pri": "${#TestSuite#posaddrLine3Pri}",
        "cityPri": "${#TestSuite#poscityPri}",
		 "pinCodePri": "600017"

      }
   }
   },
   "reqTime":"${#TestSuite#posreqTime}",
   "signature":"string",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"1.0"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="JsonPath Match" id="071229cc-7511-416b-ab62-30c64bdc9db2" name="status">
              <con:configuration><path>$['status']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="7296f280-e23c-45e8-813a-9c3ba0ed7854" name="Invalid HTTP Status Codes">
              <con:configuration><codes>200,400,404</codes></con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="e7257257-db2d-4b19-8f0b-3793a9753041" name="ErrorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>${#TestSuite#erroCodeWrongUIN}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fbc1a902-3d94-439d-94b0-0be0b5be614e" name="ErrorMessage">
              <con:configuration><path>$['err'][0]['errorMessage']</path><content>${#TestSuite#erroMessageWrongUIN}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="e79e3a66-5c91-41f4-91d0-b0de4907c0ae" name="Valid HTTP Status Codes"><con:configuration><codes>500</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0794af15-5487-4841-ace8-94377c955125" name="txnID"><con:configuration><path>$['txnID']</path><content>${#TestSuite#postxnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="03c216cf-9fce-42eb-8256-1664c351a10f" name="info"><con:configuration><path>$['info']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="326658b5-f719-408b-a571-9ec3f66d5d01" name="Script Assertion"><con:configuration><scriptText>import java.text.DateFormat;
import java.text.SimpleDateFormat;

def json = new groovy.json.JsonSlurper().parseText(context.response) 

def responseTime= json.resTime.toString().split('T')[0];

DateFormat dateFormat= new SimpleDateFormat("yyyy-MM-dd");
	Date date = new Date();
	assert responseTime == dateFormat.format(date);</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="ca6a6073-7dea-4dc1-b34b-f0002319ddc3" name="Response SLA"><con:configuration><SLA>600</SLA></con:configuration></con:assertion><con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      
      <con:testStep type="restrequest" name="AuthenticatingDB_Empty_UID" id="a9e702d9-575d-4fa1-ba00-37c32d3847ad">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/auth" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AuthenticatingDB_Empty_UID" id="c034856e-369f-4f89-9740-7b945842aec8" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":"${#TestSuite#posAd}",
      "bio":false,
      "fad":false,
      "otp":false,
      "pi":"${#TestSuite#posPi}",
      "pin":false
   },
   "data":"string",
   "hmac":"string",
   "id":"",
   "idType":"${#TestSuite#posidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"string",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{
			"dob":"${#TestSuite#posDob}",
			"gender": "${#TestSuite#posGender}",
            "age": ${#TestSuite#posage},
			"phone":"${#TestSuite#posPhoneNo}"
         },
		   "ad": {
        "addrLine1Pri": "${#TestSuite#posaddrLine1Pri}",
        "addrLine2Pri": "${#TestSuite#posaddrLine2Pri}",
        "addrLine3Pri": "${#TestSuite#posaddrLine3Pri}",
        "cityPri": "${#TestSuite#poscityPri}",
		 "pinCodePri": "600017"

      }
   }
   },
   "reqTime":"${#TestSuite#posreqTime}",
   "signature":"string",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"1.0"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="JsonPath Match" id="071229cc-7511-416b-ab62-30c64bdc9db2" name="status">
              <con:configuration><path>$['status']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="7296f280-e23c-45e8-813a-9c3ba0ed7854" name="Invalid HTTP Status Codes">
              <con:configuration><codes>200,400,404</codes></con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="e7257257-db2d-4b19-8f0b-3793a9753041" name="ErrorCode">
              <con:configuration>
                <path>$['err'][0]['errorCode']</path>
                <content>${#TestSuite#erroCodeWrongUIN}</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fbc1a902-3d94-439d-94b0-0be0b5be614e" name="ErrorMessage">
              <con:configuration><path>$['err'][0]['errorMessage']</path><content>${#TestSuite#erroMessageWrongUIN}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="e79e3a66-5c91-41f4-91d0-b0de4907c0ae" name="Valid HTTP Status Codes"><con:configuration><codes>500</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0794af15-5487-4841-ace8-94377c955125" name="txnID"><con:configuration><path>$['txnID']</path><content>${#TestSuite#postxnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="03c216cf-9fce-42eb-8256-1664c351a10f" name="info"><con:configuration><path>$['info']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="326658b5-f719-408b-a571-9ec3f66d5d01" name="ResponseDate"><con:configuration><scriptText>import java.text.DateFormat;
import java.text.SimpleDateFormat;

def json = new groovy.json.JsonSlurper().parseText(context.response) 

def responseTime= json.resTime.toString().split('T')[0];

DateFormat dateFormat= new SimpleDateFormat("yyyy-MM-dd");
	Date date = new Date();
	assert responseTime == dateFormat.format(date);</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="ca6a6073-7dea-4dc1-b34b-f0002319ddc3" name="Response SLA"><con:configuration><SLA>600</SLA></con:configuration></con:assertion><con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep><con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="1247e1dd-2cbc-4c98-9327-a023e6537ee3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AuthenticatingDB_Invalid_MuaCode" searchProperties="true">
      <con:settings/>
      <con:testStep type="restrequest" name="AuthenticatingDB_Wrong_Non10Digit_MuaCode" id="229cd734-25f8-4826-b014-6db4f9a5cc2f">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AuthenticatingDB_Wrong_Non10Digit_MuaCode" id="c034856e-369f-4f89-9740-7b945842aec8" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":"${#TestSuite#posAd}",
      "bio":false,
      "fad":false,
      "otp":false,
      "pi":"${#TestSuite#posPi}",
      "pin":false
   },
   "data":"string",
   "hmac":"string",
   "id":"${#TestSuite#posid}",
   "idType":"${#TestSuite#posidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"string",
   "muaCode":"12345678",
   "pii":{  
      "demo":{  
         "pi":{
			"dob":"${#TestSuite#posDob}",
			"gender": "${#TestSuite#posGender}",
              "age": ${#TestSuite#posage},
			"phone":"${#TestSuite#posPhoneNo}"
         },
		   "ad": {
        "addrLine1Pri": "${#TestSuite#posaddrLine1Pri}",
        "addrLine2Pri": "${#TestSuite#posaddrLine2Pri}",
        "addrLine3Pri": "${#TestSuite#posaddrLine3Pri}",
        "cityPri": "${#TestSuite#poscityPri}",
		 "pinCodePri": "600017"

      }
   }
   },
   "reqTime":"${#TestSuite#posreqTime}",
   "signature":"string",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"1.0"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="JsonPath Match" id="071229cc-7511-416b-ab62-30c64bdc9db2" name="status">
              <con:configuration><path>$['status']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="7296f280-e23c-45e8-813a-9c3ba0ed7854" name="Invalid HTTP Status Codes">
              <con:configuration><codes>200,400,404</codes></con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="e7257257-db2d-4b19-8f0b-3793a9753041" name="ErrorCode">
              <con:configuration><path>$['err'][0]['errorCode']</path><content>Size</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fbc1a902-3d94-439d-94b0-0be0b5be614e" name="ErrorMessage">
              <con:configuration><path>$['err'][0]['errorMessage']</path><content>MuaCode size should be min 10</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="e79e3a66-5c91-41f4-91d0-b0de4907c0ae" name="Valid HTTP Status Codes"><con:configuration><codes>500</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0794af15-5487-4841-ace8-94377c955125" name="txnID"><con:configuration><path>$['txnID']</path><content>${#TestSuite#postxnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="03c216cf-9fce-42eb-8256-1664c351a10f" name="info"><con:configuration><path>$['info']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="326658b5-f719-408b-a571-9ec3f66d5d01" name="Script Assertion"><con:configuration><scriptText>import java.text.DateFormat;
import java.text.SimpleDateFormat;

def json = new groovy.json.JsonSlurper().parseText(context.response) 

def responseTime= json.resTime.toString().split('T')[0];

DateFormat dateFormat= new SimpleDateFormat("yyyy-MM-dd");
	Date date = new Date();
	assert responseTime == dateFormat.format(date);</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="ca6a6073-7dea-4dc1-b34b-f0002319ddc3" name="Response SLA"><con:configuration><SLA>600</SLA></con:configuration></con:assertion><con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      
      <con:testStep type="restrequest" name="AuthenticatingDB_Empty_MuaCode" id="416945ed-18bb-4a53-b945-ba0d743dc7ae">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AuthenticatingDB_Empty_MuaCode" id="c034856e-369f-4f89-9740-7b945842aec8" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":"${#TestSuite#posAd}",
      "bio":false,
      "fad":false,
      "otp":false,
      "pi":"${#TestSuite#posPi}",
      "pin":false
   },
   "data":"string",
   "hmac":"string",
   "id":"${#TestSuite#posid}",
   "idType":"${#TestSuite#posidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"string",
   "muaCode":"",
   "pii":{  
      "demo":{  
         "pi":{
			"dob":"${#TestSuite#posDob}",
			"gender": "${#TestSuite#posGender}",
            "age": ${#TestSuite#posage},
			"phone":"${#TestSuite#posPhoneNo}"
         },
		   "ad": {
        "addrLine1Pri": "${#TestSuite#posaddrLine1Pri}",
        "addrLine2Pri": "${#TestSuite#posaddrLine2Pri}",
        "addrLine3Pri": "${#TestSuite#posaddrLine3Pri}",
        "cityPri": "${#TestSuite#poscityPri}",
		 "pinCodePri": "600017"

      }
   }
   },
   "reqTime":"${#TestSuite#posreqTime}",
   "signature":"string",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"1.0"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="JsonPath Match" id="071229cc-7511-416b-ab62-30c64bdc9db2" name="status">
              <con:configuration><path>$['status']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="7296f280-e23c-45e8-813a-9c3ba0ed7854" name="Invalid HTTP Status Codes">
              <con:configuration><codes>200,400,404</codes></con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="e7257257-db2d-4b19-8f0b-3793a9753041" name="ErrorCode">
              <con:configuration><path>$['err'][0]['errorCode']</path><content>Size</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath Match" id="fbc1a902-3d94-439d-94b0-0be0b5be614e" name="ErrorMessage">
              <con:configuration><path>$['err'][0]['errorMessage']</path><content>Missing Input Parameter </content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="e79e3a66-5c91-41f4-91d0-b0de4907c0ae" name="Valid HTTP Status Codes"><con:configuration><codes>500</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0794af15-5487-4841-ace8-94377c955125" name="txnID"><con:configuration><path>$['txnID']</path><content>${#TestSuite#postxnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="03c216cf-9fce-42eb-8256-1664c351a10f" name="info"><con:configuration><path>$['info']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="326658b5-f719-408b-a571-9ec3f66d5d01" name="Script Assertion"><con:configuration><scriptText>import java.text.DateFormat;
import java.text.SimpleDateFormat;

def json = new groovy.json.JsonSlurper().parseText(context.response) 

def responseTime= json.resTime.toString().split('T')[0];

DateFormat dateFormat= new SimpleDateFormat("yyyy-MM-dd");
	Date date = new Date();
	assert responseTime == dateFormat.format(date);</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="ca6a6073-7dea-4dc1-b34b-f0002319ddc3" name="Response SLA"><con:configuration><SLA>600</SLA></con:configuration></con:assertion><con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep><con:testStep type="restrequest" name="AuthenticatingDB_Wrong_10Digit_MuaCode" id="e7794b6a-6321-429d-b4d5-d95cf8ee7196">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/auth" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AuthenticatingDB_Wrong_10Digit_MuaCode" id="c034856e-369f-4f89-9740-7b945842aec8" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":"${#TestSuite#posAd}",
      "bio":false,
      "fad":false,
      "otp":false,
      "pi":"${#TestSuite#posPi}",
      "pin":false
   },
   "data":"string",
   "hmac":"string",
   "id":"${#TestSuite#posid}",
   "idType":"${#TestSuite#posidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"string",
   "muaCode":"1234567440",
   "pii":{  
      "demo":{  
         "pi":{
			"dob":"${#TestSuite#posDob}",
			"gender": "${#TestSuite#posGender}",
            "age": ${#TestSuite#posage},
			"phone":"${#TestSuite#posPhoneNo}"
         },
		   "ad": {
        "addrLine1Pri": "${#TestSuite#posaddrLine1Pri}",
        "addrLine2Pri": "${#TestSuite#posaddrLine2Pri}",
        "addrLine3Pri": "${#TestSuite#posaddrLine3Pri}",
        "cityPri": "${#TestSuite#poscityPri}",
		 "pinCodePri": "600017"

      }
   }
   },
   "reqTime":"${#TestSuite#posreqTime}",
   "signature":"string",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"1.0"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="JsonPath Match" id="071229cc-7511-416b-ab62-30c64bdc9db2" name="status">
              <con:configuration><path>$['status']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="7296f280-e23c-45e8-813a-9c3ba0ed7854" name="Invalid HTTP Status Codes">
              <con:configuration><codes>400,404</codes></con:configuration>
            </con:assertion>
            
            
            <con:assertion type="Valid HTTP Status Codes" id="e79e3a66-5c91-41f4-91d0-b0de4907c0ae" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0794af15-5487-4841-ace8-94377c955125" name="txnID"><con:configuration><path>$['txnID']</path><content>${#TestSuite#postxnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="03c216cf-9fce-42eb-8256-1664c351a10f" name="info"><con:configuration><path>$['info']['idType']</path><content>D</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="326658b5-f719-408b-a571-9ec3f66d5d01" name="resTime"><con:configuration><scriptText>import java.text.DateFormat;
import java.text.SimpleDateFormat;

def json = new groovy.json.JsonSlurper().parseText(context.response) 

def responseTime= json.resTime.toString().split('T')[0];

DateFormat dateFormat= new SimpleDateFormat("yyyy-MM-dd");
	Date date = new Date();
	assert responseTime == dateFormat.format(date);</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="ca6a6073-7dea-4dc1-b34b-f0002319ddc3" name="Response SLA"><con:configuration><SLA>600</SLA></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="873171d3-87fc-401d-894b-f286b892ec69" name="Version"><con:configuration><path>['info']['ver']</path><content>1.0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="806cef75-d47e-4ba9-bf12-a46de8dddb81"><con:configuration/></con:assertion><con:assertion type="GroovyScriptAssertion" id="3b53a3bb-9749-4109-af14-2bedb7be6411"><con:configuration/></con:assertion><con:assertion type="GroovyScriptAssertion" id="d0786231-6ccc-49a5-a4fc-fd145b07289e" name="reqTime"><con:configuration><scriptText>import java.text.DateFormat;
import java.text.SimpleDateFormat;

def json = new groovy.json.JsonSlurper().parseText(context.response) 

def responseTime= json.info.reqTime.toString().split('T')[0];

DateFormat dateFormat= new SimpleDateFormat("yyyy-MM-dd");
	Date date = new Date();
	assert responseTime == dateFormat.format(date);</scriptText></con:configuration></con:assertion><con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep><con:properties/>
      <con:reportParameters/>
    </con:testCase><con:testCase id="94f489bc-ddc9-4b60-af44-e0d63750ebc8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AuthenticatingDB_Invalid_TxnID" searchProperties="true">
      <con:settings/>
      
      
      <con:properties/>
      <con:reportParameters/>
    </con:testCase><con:testCase id="c4a25ad9-a6eb-4324-be6e-8451ec6b8914" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AuthenticatingDB_ValidValues_SmokeTest" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="AuthenticatingDB_Valid_values" id="51837c94-b75b-419e-bb76-88537e91c1f0">
        <con:settings/>
        <con:config service="http://13.71.81.26:8081" methodName="Method 1" resourcePath="/identity/otp" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="AuthenticatingDB_Valid_values" id="c034856e-369f-4f89-9740-7b945842aec8" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Global#ENDPOINT}</con:endpoint>
            <con:request>{  
   "authType":{  
      "ad":"${#TestSuite#posAd}",
      "bio":false,
      "fad":false,
      "otp":false,
      "pi":"${#TestSuite#posPi}",
      "pin":false
   },
   "data":"string",
   "hmac":"string",
   "id":"${#TestSuite#posid}",
   "idType":"${#TestSuite#posidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"string",
   "muaCode":"1234567440",
   "pii":{  
      "demo":{  
         "pi":{
			"dob":"${#TestSuite#posDob}",
			"gender": "${#TestSuite#posGender}",
            "age": ${#TestSuite#posage},
			"phone":"${#TestSuite#posPhoneNo}"
         },
		   "ad": {
        "addrLine1Pri": "${#TestSuite#posaddrLine1Pri}",
        "addrLine2Pri": "${#TestSuite#posaddrLine2Pri}",
        "addrLine3Pri": "${#TestSuite#posaddrLine3Pri}",
        "cityPri": "${#TestSuite#poscityPri}",
		 "pinCodePri": "600017"

      }
   }
   },
   "reqTime":"${#TestSuite#posreqTime}",
   "signature":"string",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"1.0"
}</con:request>
            <con:originalUri>http://13.71.81.26/identity/auth</con:originalUri>
            <con:assertion type="JsonPath Match" id="071229cc-7511-416b-ab62-30c64bdc9db2" name="status">
              <con:configuration><path>$['status']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration>
            </con:assertion>
            <con:assertion type="Invalid HTTP Status Codes" id="7296f280-e23c-45e8-813a-9c3ba0ed7854" name="Invalid HTTP Status Codes">
              <con:configuration><codes>400,404</codes></con:configuration>
            </con:assertion>
            
            
            <con:assertion type="Valid HTTP Status Codes" id="e79e3a66-5c91-41f4-91d0-b0de4907c0ae" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0794af15-5487-4841-ace8-94377c955125" name="txnID"><con:configuration><path>$['txnID']</path><content>${#TestSuite#postxnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="03c216cf-9fce-42eb-8256-1664c351a10f" name="info"><con:configuration><path>$['info']['idType']</path><content>D</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="326658b5-f719-408b-a571-9ec3f66d5d01" name="resTime"><con:configuration><scriptText>import java.text.DateFormat;
import java.text.SimpleDateFormat;

def json = new groovy.json.JsonSlurper().parseText(context.response) 

def responseTime= json.resTime.toString().split('T')[0];

DateFormat dateFormat= new SimpleDateFormat("yyyy-MM-dd");
	Date date = new Date();
	assert responseTime == dateFormat.format(date);</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="ca6a6073-7dea-4dc1-b34b-f0002319ddc3" name="Response SLA"><con:configuration><SLA>600</SLA></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="873171d3-87fc-401d-894b-f286b892ec69" name="Version"><con:configuration><path>['info']['ver']</path><content>1.0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e01071c0-1d93-4dea-a500-8aacb08b2b22"><con:configuration/></con:assertion><con:assertion type="JsonPath Match" id="70aeaccc-ab7c-436e-9b07-baf6d3b067ab"><con:configuration/></con:assertion><con:assertion type="JsonPath Match" id="b816c68c-52d3-4ec8-8b24-37045aa2304b" name="reqTime"><con:configuration><path>$['info']['reqTime']</path><content>${#TestSuite#posreqTime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep><con:properties/></con:testCase><con:testCase id="3eeeff91-ebed-4cb6-b2d2-6f8accbafbca" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AuthenticatingDB_Invalid_Demographicvalues" searchProperties="true">
      <con:settings/>
      
      
      <con:properties/>
      <con:reportParameters/>
    </con:testCase><con:testCase id="1948bf4a-0142-409b-ad7b-dee64cde43d8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AuthenticatingDB_InValidValues_NullValues" searchProperties="true"><con:settings/><con:properties/></con:testCase><con:testCase id="7458c0db-5a61-41d2-8cdc-f54ee5d7a418" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AuthenticatingDB_InValid_RequestTime" searchProperties="true"><con:settings/><con:properties/></con:testCase><con:testCase id="5b3982d4-7ad8-426a-9693-c8848ba86286" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AuthenticatingDB_InValidValues_authType" searchProperties="true"><con:settings/><con:properties/></con:testCase><con:testCase id="b86efbe8-24f3-4369-b924-3d0469559806" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AuthenticatingDB_InValid_values_EmptyRequest" searchProperties="true"><con:settings/><con:properties/></con:testCase><con:testCase id="9b2a0334-0d21-4928-8109-bb9aae773763" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AuthenticatingDB_InValidValues_Signature" searchProperties="true"><con:settings/><con:properties/></con:testCase><con:testCase id="21c858d4-898f-44f5-be3f-f1206ea0f124" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AuthenticatingDB_InValidValues_version" searchProperties="true"><con:settings/><con:properties/></con:testCase><con:properties>
      <con:property>
        <con:name>posid</con:name>
        <con:value>426789089018</con:value>
      </con:property>
      <con:property>
        <con:name>negid</con:name>
        <con:value>4267890890181</con:value>
      </con:property>
      <con:property>
        <con:name>posidType</con:name>
        <con:value>D</con:value>
      </con:property>
      <con:property>
        <con:name>posmuaCode</con:name>
        <con:value>1234567890</con:value>
      </con:property>
      <con:property>
        <con:name>negmuaCode</con:name>
        <con:value>27171839304</con:value>
      </con:property>
      <con:property>
        <con:name>posage</con:name>
        <con:value>16</con:value>
      </con:property>
      <con:property>
        <con:name>negage</con:name>
        <con:value>43</con:value>
      </con:property>
      <con:property>
        <con:name>posreqTime</con:name>
        <con:value>2018-11-16T12:05:13.394+0530</con:value>
      </con:property>
      <con:property>
        <con:name>negreqTime</con:name>
        <con:value>2030-11-23T07:22:57.086+0000</con:value>
      </con:property>
      <con:property>
        <con:name>postxnID</con:name>
        <con:value>1234567890</con:value>
      </con:property>
      <con:property>
        <con:name>negtxnID</con:name>
        <con:value>15180023466</con:value>
      </con:property>
      <con:property>
        <con:name>posPhoneNo</con:name>
        <con:value>044-22273388</con:value>
      </con:property>
      <con:property>
        <con:name>negPhoneNo</con:name>
        <con:value>044-2227t388</con:value>
      </con:property>
      <con:property>
        <con:name>posGender</con:name>
        <con:value>M</con:value>
      </con:property>
      <con:property>
        <con:name>negGender</con:name>
        <con:value>F</con:value>
      </con:property>
      <con:property>
        <con:name>posDob</con:name>
        <con:value>2001-07-16</con:value>
      </con:property>
      <con:property>
        <con:name>negDob</con:name>
        <con:value>abc</con:value>
      </con:property>
      <con:property>
        <con:name>posAddrLine1Pri</con:name>
        <con:value>No.12, Rajaji Avenue</con:value>
      </con:property>
      <con:property>
        <con:name>negAddrLine1Pri</con:name>
        <con:value>No.12, Rajaji Avenue</con:value>
      </con:property>
      <con:property>
        <con:name>posAddrLine2Pri</con:name>
        <con:value>Sathya Nagar</con:value>
      </con:property>
      <con:property>
        <con:name>negAddrLine2Pri</con:name>
        <con:value>Sathya Nagar</con:value>
      </con:property>
      <con:property>
        <con:name>posAddrLine3Pri</con:name>
        <con:value>East Mambalam</con:value>
      </con:property>
      <con:property>
        <con:name>negAddrLine3Pri</con:name>
        <con:value>East Mambalam</con:value>
      </con:property>
      <con:property>
        <con:name>posCityPri</con:name>
        <con:value>Chennai</con:value>
      </con:property>
      <con:property>
        <con:name>negCityPri</con:name>
        <con:value>Pune</con:value>
      </con:property>
      <con:property>
        <con:name>posAd</con:name>
        <con:value>true</con:value>
      </con:property>
      <con:property>
        <con:name>posBio</con:name>
        <con:value>false</con:value>
      </con:property>
      <con:property>
        <con:name>posPi</con:name>
        <con:value>true</con:value>
      </con:property>
      <con:property>
        <con:name>erroMessageWrongUIN</con:name>
        <con:value>Invalid UIN</con:value>
      </con:property>
      <con:property>
        <con:name>erroMessageExpiredUIN</con:name>
        <con:value>UIN has been deactivated</con:value>
      </con:property>
      <con:property>
        <con:name>erroMessageInvalidInput</con:name>
        <con:value>Invalid Input Parameter</con:value>
      </con:property>
      <con:property>
        <con:name>erroCodeWrongUIN</con:name>
        <con:value>IDA-MLC-002</con:value>
      </con:property>
      <con:property>
        <con:name>erroCodeExpiredUIN</con:name>
        <con:value>IDA-MLC-003</con:value>
      </con:property>
    </con:properties>
    <con:reportParameters/>
  </con:testSuite><con:testSuite id="06dd86b8-f3fe-488a-9d91-525f01b85862" name="Authenticate_Demographic_MOS-212"><con:description>TestSuite generated for REST Service [http://13.71.81.26:8081]</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="bfee6d99-b081-4814-baf2-50c927889794" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="init" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="Groovy Script" id="94b2c2e5-b9c9-4691-9da5-7c7092d12539" disabled="true"><con:settings/><con:config><script>//import java.time.Instant;
//import java.time.Duration; 
//import groovy.json.JsonSlurper
//import java.time.Instant
//import java.io.File;
//import java.io.FileNotFoundException;
//import java.io.FileReader;
//import java.io.IOException;
//
//
////Generating 10 digit msaLicenseKey
// long msaLicenseKey = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L; 
//String.format("%10d", msaLicenseKey) 
//testRunner.testCase.testSuite.setPropertyValue("posmsaLicenseKey",msaLicenseKey.toString())
//
////Generating 10 digit muaCode
// long muaCode1 = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L; 
//String.format("%10d", muaCode1) 
//log.info(muaCode1)
//testRunner.testCase.testSuite.setPropertyValue("posmuaCode",muaCode1.toString())
//
////generating txnID
//long txnID = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L; 
//String.format("%10d", txnID) 
//testRunner.testCase.testSuite.setPropertyValue("postxnID",msaLicenseKey.toString())
//
//
//
//log.info(System.getProperty("user.dir")+"\\DemoInput.json");
//def inputFile = new File(System.getProperty("user.dir")+"\\DemoInput.json");
//log.info(inputFile.text);
//def InputJSON = new JsonSlurper().parseText(inputFile.text);
//
//log.info(InputJSON[0].pos.ad.toString())
//testRunner.testCase.testSuite.setPropertyValue("posad",InputJSON[0].pos.ad.toString());
//testRunner.testCase.testSuite.setPropertyValue("posbio",InputJSON[0].pos.bio.toString());
//testRunner.testCase.testSuite.setPropertyValue("posfad",InputJSON[0].pos.fad.toString());
//testRunner.testCase.testSuite.setPropertyValue("posotp",InputJSON[0].pos.otp.toString());
//testRunner.testCase.testSuite.setPropertyValue("pospi",InputJSON[0].pos.pi.toString());
//testRunner.testCase.testSuite.setPropertyValue("pospin",InputJSON[0].pos.pin.toString());
//testRunner.testCase.testSuite.setPropertyValue("posdata",InputJSON[0].pos.data);
//testRunner.testCase.testSuite.setPropertyValue("poshmac",InputJSON[0].pos.hmac);
////testRunner.testCase.testSuite.setPropertyValue("posuid",InputJSON[0].pos.uid);
//testRunner.testCase.testSuite.setPropertyValue("posuidtype",InputJSON[0].pos.uidType);
//testRunner.testCase.testSuite.setPropertyValue("posvid",InputJSON[0].pos.vid);
//testRunner.testCase.testSuite.setPropertyValue("posvidtype",InputJSON[0].pos.vidType);
//testRunner.testCase.testSuite.setPropertyValue("pospublicKeyCert",InputJSON[0].pos.publicKeyCert);
//testRunner.testCase.testSuite.setPropertyValue("possessionKey",InputJSON[0].pos.sessionKey);
////testRunner.testCase.testSuite.setPropertyValue("posmsaLicenseKey",InputJSON[0].pos.msaLicenseKey);
////testRunner.testCase.testSuite.setPropertyValue("posmuaCode",InputJSON[0].pos.muaCode);
//testRunner.testCase.testSuite.setPropertyValue("posdob",InputJSON[0].pos.dob);
//testRunner.testCase.testSuite.setPropertyValue("posgender",InputJSON[0].pos.gender);
//testRunner.testCase.testSuite.setPropertyValue("posemail",InputJSON[0].pos.email);
//testRunner.testCase.testSuite.setPropertyValue("posphone",InputJSON[0].pos.phone);
//testRunner.testCase.testSuite.setPropertyValue("possignature",InputJSON[0].pos.signature);
////testRunner.testCase.testSuite.setPropertyValue("postxnID",InputJSON[0].pos.txnID);
//testRunner.testCase.testSuite.setPropertyValue("posver",InputJSON[0].pos.ver);
//
//
//








//taking data from DB

import groovy.sql.Sql
def url='jdbc:postgresql://13.71.81.26:9001/postgres'
def user = 'postgres'
def password= 'admin'
def driver= 'org.postgresql.Driver'

//com.eviware.soapui.support.GroovyUtils.registerJdbcDriver(driver)//to load driver
//def sql = Sql.newInstance(url,user,password,driver)
//def query=testRunner.testCase.getPropertyValue("query")//query for joining uid and demographic table
//def row= sql.rows("SELECT * FROM ida.vid inner join  ida.indv_demographic on ida.vid.uin_ref_id = ida.indv_demographic.uin_ref_id inner join ida.uin on  ida.indv_demographic.uin_ref_id=ida.uin.uin_ref_id")//query for getting all the data from two table
////def row= sql.rows(" SELECT v.*, u.id as uid,v.id as vid FROM ida.uin as u, ida.indv_demographic as d,ida.vid as v WHERE  u.uin_ref_id = d.uin_ref_id and d.uin_ref_id=v.uin_ref_id")
//log.info(row)
//def user_id=row[0].id//taking uid from result
//testRunner.testCase.testSuite.setPropertyValue("posuid",user_id)
//log.info(user_id)
////TestRunner.TestCase.TestSuite.setPropertyValue("posuid",user_id)
////log.info(user_id)
//sql.close()





//com.eviware.soapui.support.GroovyUtils.registerJdbcDriver(driver)
//def sql = Sql.newInstance(url,user,password,driver)
//def row= sql.rows(" SELECT v.*,u.*, u.id as uid,v.id as vid FROM ida.uin as u, ida.indv_demographic as d,ida.vid as v WHERE  u.uin_ref_id = d.uin_ref_id and d.uin_ref_id=v.uin_ref_id")
//log.info(row.uid)
//
//def user_id=row[0].toString()
//testRunner.testCase.setPropertyValue("user_id",user_id)
//log.info(user_id)
//sql.close()
com.eviware.soapui.support.GroovyUtils.registerJdbcDriver(driver)
def sql = Sql.newInstance(url,user,password,driver)
def row= sql.rows(" SELECT dob,age,email,mobile, u.id as uid,v.id as vid FROM ida.uin as u, ida.indv_demographic as d,ida.vid as v WHERE  u.uin_ref_id = d.uin_ref_id and d.uin_ref_id=v.uin_ref_id")

def user_id=row[0].toString()
testRunner.testCase.setPropertyValue("user_id",user_id)
log.info(user_id)
sql.close()






























</script></con:config></con:testStep><con:testStep type="groovy" name="JDBC_Env_Setup" id="1d6c3a87-8e9e-4408-be0c-17c6db5cf5b4" disabled="true"><con:settings/><con:config><script>// Set activeEnviroment from SOAP-UI  to set SQL Properties in User Script 
def activeEnviroment = com.eviware.soapui.SoapUI.globalProperties.getPropertyValue("ENV")
def driver =''
if (activeEnviroment == 'QA') {
def port= '9001'
def host_ida  = '13.71.81.26'
def QA = '104.211.228.46'
def url_ida='jdbc:postgresql://'+host_ida+':'+port+'/postgres'
def url = 'jdbc:postgresql://'+QA+':'+port+'/postgres'
def user_ida = 'postgres'
def password_ida= 'admin'
def user = 'repuser'
def password = 'Mosip@dev123'

testRunner.testCase.testSuite.project.setPropertyValue( "user", user)
testRunner.testCase.testSuite.project.setPropertyValue( "url", url)
testRunner.testCase.testSuite.project.setPropertyValue( "password", password)
testRunner.testCase.testSuite.project.setPropertyValue( "driver", driver)

testRunner.testCase.testSuite.project.setPropertyValue( "user_ida", user_ida)
testRunner.testCase.testSuite.project.setPropertyValue( "url_ida", url_ida)
testRunner.testCase.testSuite.project.setPropertyValue( "password_ida", password_ida)
// Connect to the SQL instance.
//def sql = Sql.newInstance(url, user, password, driver)

// Use the SQL instance.
// ...

// Close the SQL instance.
//sql.close()	
}
else if (activeEnviroment == 'DEV') {
def port= '9001'
def DEV = '104.211.208.136'
def url = 'jdbc:postgresql://'+DEV+':'+port+'/postgres'
def user = 'audituser'
def password = 'Mosip@dev123'
 driver= 'org.postgresql.Driver'
testRunner.testCase.testSuite.project.setPropertyValue( "user", user)
testRunner.testCase.testSuite.project.setPropertyValue( "url", url)
testRunner.testCase.testSuite.project.setPropertyValue( "password", password)
testRunner.testCase.testSuite.project.setPropertyValue( "driver", driver)

// Connect to the SQL instance.
//def sql = Sql.newInstance(url, user, password, driver)

// Use the SQL instance.
// ...

// Close the SQL instance.
//sql.close()	
}
log.info(driver)
com.eviware.soapui.support.GroovyUtils.registerJdbcDriver(driver)</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_Request" id="87f0055d-9606-46b3-a22b-a737c1344b2a" disabled="true"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>org.postgresql.Driver</con:driver><con:connectionString>jdbc:postgresql://13.71.81.26:9001/postgres?user=postgres&amp;password=admin</con:connectionString><con:connectionProperties/><con:query>SELECT dob,age,email,mobile, u.id as uid,v.id as vid FROM ida.uin as u, ida.indv_demographic as d,ida.vid as v WHERE  u.uin_ref_id = d.uin_ref_id and d.uin_ref_id=v.uin_ref_id
</con:query><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="data feching" id="21d64b55-ac3d-43b0-85ee-614627782b53"><con:settings/><con:config><script>import java.time.Instant;
import java.time.Duration; 
import groovy.json.JsonSlurper
import java.time.Instant
import java.text.SimpleDateFormat;
import java.util.Calendar; 
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import groovy.xml.*
import groovy.json.*
import java.text.DateFormat;
/*Generating 10 digit msaLicenseKey
 * 
 */
 long msaLicenseKey = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L; 
String.format("%10d", msaLicenseKey) 
testRunner.testCase.testSuite.setPropertyValue("posmsaLicenseKey",msaLicenseKey.toString())

/*Generating 10 digit muaCode
 * 
 */
 long muaCode1 = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L; 
String.format("%10d", muaCode1) 
testRunner.testCase.testSuite.setPropertyValue("posmuaCode",muaCode1.toString())

/*
 * generating 10 digits txnID
 */
long txnID = (long) Math.floor(Math.random() * 9_000_000_000L) + 1_000_000_000L; 
String.format("%10d", txnID) 
testRunner.testCase.testSuite.setPropertyValue("postxnID",msaLicenseKey.toString())

/*
 * Generating 9 digits no
 */
 long no = (long) Math.floor(Math.random() * 9_000_000_00L) + 1_000_000_00L; 
String.format("%10d", no) 
/*
 * Generating 11 digits no
 */
 long no1 = (long) Math.floor(Math.random() * 9_000_000_000_0L) + 1_000_000_000_0L; 
String.format("%10d", no) 
/*
 * Invalid txnID 
 */
testRunner.testCase.testSuite.setPropertyValue("negtxnID9",no.toString())
testRunner.testCase.testSuite.setPropertyValue("negtxnID11",no1.toString())
/*
 * Invalid muaCode
 */
 testRunner.testCase.testSuite.setPropertyValue("negmuaCode9",no.toString())
  testRunner.testCase.testSuite.setPropertyValue("negmuaCode11",no1.toString())
 /*
  * Invalid msaLicenseKey
  */
 testRunner.testCase.testSuite.setPropertyValue("negmsaLicenseKey9",no.toString())
 testRunner.testCase.testSuite.setPropertyValue("negmsaLicenseKey11",no1.toString())


  
/*
 * Reading data from source file
 */
log.info(System.getProperty("user.dir"));
def inputFile = new File(System.getProperty("user.dir")+"\\DemoInput.json");
def InputJSON = new JsonSlurper().parseText(inputFile.text);
testRunner.testCase.testSuite.setPropertyValue("posad",InputJSON[0].pos.ad.toString());
testRunner.testCase.testSuite.setPropertyValue("posbio",InputJSON[0].pos.bio.toString());
testRunner.testCase.testSuite.setPropertyValue("posfad",InputJSON[0].pos.fad.toString());
testRunner.testCase.testSuite.setPropertyValue("posotp",InputJSON[0].pos.otp.toString());
testRunner.testCase.testSuite.setPropertyValue("pospi",InputJSON[0].pos.pi.toString());
testRunner.testCase.testSuite.setPropertyValue("pospin",InputJSON[0].pos.pin.toString());
testRunner.testCase.testSuite.setPropertyValue("posdata",InputJSON[0].pos.data);
testRunner.testCase.testSuite.setPropertyValue("poshmac",InputJSON[0].pos.hmac);
testRunner.testCase.testSuite.setPropertyValue("posuid",InputJSON[0].pos.uid);
testRunner.testCase.testSuite.setPropertyValue("posuidtype",InputJSON[0].pos.uidType);
testRunner.testCase.testSuite.setPropertyValue("posvid",InputJSON[0].pos.vid);
testRunner.testCase.testSuite.setPropertyValue("posvidtype",InputJSON[0].pos.vidType);
testRunner.testCase.testSuite.setPropertyValue("pospublicKeyCert",InputJSON[0].pos.publicKeyCert);
testRunner.testCase.testSuite.setPropertyValue("possessionKey",InputJSON[0].pos.sessionKey);
//testRunner.testCase.testSuite.setPropertyValue("posmsaLicenseKey",InputJSON[0].pos.msaLicenseKey);
//testRunner.testCase.testSuite.setPropertyValue("posmuaCode",InputJSON[0].pos.muaCode);
testRunner.testCase.testSuite.setPropertyValue("posdob",InputJSON[0].pos.dob);
testRunner.testCase.testSuite.setPropertyValue("posgender",InputJSON[0].pos.gender);
testRunner.testCase.testSuite.setPropertyValue("posemail",InputJSON[0].pos.email);
testRunner.testCase.testSuite.setPropertyValue("posphone",InputJSON[0].pos.phone);
testRunner.testCase.testSuite.setPropertyValue("possignature",InputJSON[0].pos.signature);

testRunner.testCase.testSuite.setPropertyValue("posver",InputJSON[0].pos.ver);
testRunner.testCase.testSuite.setPropertyValue("negpi",InputJSON[0].neg.pi.toString());
testRunner.testCase.testSuite.setPropertyValue("neguid",InputJSON[0].neg.uid);
testRunner.testCase.testSuite.setPropertyValue("negvid",InputJSON[0].neg.vid);
testRunner.testCase.testSuite.setPropertyValue("neguidType",InputJSON[0].neg.uidType);
testRunner.testCase.testSuite.setPropertyValue("negvidType",InputJSON[0].neg.vidType);
testRunner.testCase.testSuite.setPropertyValue("negdob",InputJSON[0].neg.dob);
testRunner.testCase.testSuite.setPropertyValue("neggender",InputJSON[0].neg.gender);
def neg=testRunner.testCase.testSuite.setPropertyValue("negemail",InputJSON[0].neg.email);
log.info(InputJSON[0].neg.email)
testRunner.testCase.testSuite.setPropertyValue("negdomain",InputJSON[0].neg.domain);
testRunner.testCase.testSuite.setPropertyValue("negphone",InputJSON[0].neg.phone);
testRunner.testCase.testSuite.setPropertyValue("negver",InputJSON[0].neg.ver);

/*
 * genarating time
 */
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
/*
 * current time stamp
 */
Calendar now = Calendar.getInstance();
testRunner.testCase.testSuite.setPropertyValue( "currentTimeStamp", dateFormat.format(now.getTime())) 
def current=Calendar.getInstance();;
log.info(current)
//log.info(now)
/*
 * time stamp equal to 24 hour
 */
now.add(Calendar.HOUR, -24);
def timeStampEqualTo24 = now.getTime()
log.info(timeStampEqualTo24)
testRunner.testCase.testSuite.setPropertyValue( "timeStampEqualTo24", dateFormat.format(timeStampEqualTo24.getTime()))
now=Calendar.getInstance();
/*
 * time stamp greater than 24 hour
 */
 now.add(Calendar.HOUR, -49);
def timeStampGreaterThan24 = now.getTime()
log.info(timeStampGreaterThan24)
testRunner.testCase.testSuite.setPropertyValue( "timeStampGreaterThan24", dateFormat.format(timeStampGreaterThan24.getTime()))
now=Calendar.getInstance();
/*
 * timeStamp between 24
 */
 now.add(Calendar.HOUR, -69);
def timeStampBetween24 = now.getTime()
testRunner.testCase.testSuite.setPropertyValue( "timeStampBetween24", dateFormat.format(timeStampBetween24.getTime()))
//log.info(dateFormat.format(timeStampBetween24.getTime())

















   


   

 










</script></con:config></con:testStep><con:properties><con:property><con:name>query</con:name><con:value> SELECT * FROM ida.uin, ida.indv_demographic WHERE  ida.uin.uin_ref_id = ida.indv_demographic.uin_ref_id</con:value></con:property><con:property><con:name>user_id</con:name><con:value>{dob=2001-07-16, age=22, email=sathishk@gmail.com, mobile=044-22273388, uid=426789089018, vid=5371843613598206}</con:value></con:property><con:property><con:name>posreqTime</con:name><con:value>2018-11-11T22:37:52.811+0530</con:value></con:property><con:property><con:name>currentTimeStamp</con:name><con:value>2018-11-11T22:42:11.736+0530</con:value></con:property><con:property><con:name>timeStampGreaterThan24</con:name><con:value>2018-11-12T18:42:11.736+0530</con:value></con:property><con:property><con:name>timeStampBetween24</con:name><con:value>2018-11-11T22:42:11.736+0530</con:value></con:property><con:property><con:name>timeStampEqualTo24</con:name><con:value>2018-11-13T19:42:11.736+0530</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase id="0334320d-5617-4367-a298-1c2be0b82eb7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Email_Authentication_Smoke" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Email_Authentication_With_Valid_UID_Smoke" id="1f60499f-8ac6-4d17-b69c-85038eb73cab"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Email_Authentication_With_Valid_UID_Smoke" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#endpoint}</con:endpoint><con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}
</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="1e735b49-5efe-4e7b-b358-61994220de1a" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="27391cfb-f393-4dcc-b6fd-501d8cef6351" name="JsonPath Match"><con:configuration><path>$['status']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="10b7b379-6008-4301-85d9-5a53e143d184" name="JsonPath Match 2"><con:configuration><path>$['err']</path><content>[]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="620e93ac-ab17-4a43-8b2f-52ccf915088f" name="JsonPath Match 3"><con:configuration><path>$['txnID']</path><content>${#TestSuite#postxnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5fc3cd6d-4f86-4e28-9129-da16e25e52e3" name="JsonPath Match 5"><con:configuration><path>$['info']['idType']</path><content>D</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="37591982-7711-479e-b348-09774c218467" name="JsonPath Match 6"><con:configuration><path>$['info']['ver']</path><content>1.0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="38f521c0-de21-47a8-a199-0e8baa4cf9bc" name="JsonPath Match 7"><con:configuration><path>$['info']['matchInfos']</path><content>[]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bf10ac43-3e95-4148-940d-a48924cd4baf" name="JsonPath Match 8"><con:configuration><path>$['info']['usageData']</path><content>0x8e0000008e000000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Email_Authentication_With_Valid_VID_Smoke" id="1d3e2604-dafd-488a-bb99-995cb7fe7ed9"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Email_Authentication_With_Valid_VID_Smoke" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#endpoint}</con:endpoint><con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posvid}",
   "idType":"${#TestSuite#posvidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}
</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d0368937-5251-4330-88e5-a5a3975624b1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4c14c8db-717a-41be-8ef1-31114fb5d848" name="JsonPath Match"><con:configuration><path>$['status']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="512e4578-7b35-4ccc-814e-faece2c11720" name="JsonPath Match 2"><con:configuration><path>$['err']</path><content>[]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="208f8475-18cf-48a8-b8c6-474ba3e75d52" name="JsonPath Match 3"><con:configuration><path>$['txnID']</path><content>${#TestSuite#postxnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="26ab80d8-de17-4c84-ac1b-a88290a1224a" name="JsonPath Match 5"><con:configuration><path>$['info']['idType']</path><content>V</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d21cee0d-f21c-4cf5-82cd-7aafa1b240b2" name="JsonPath Match 6"><con:configuration><path>$['info']['ver']</path><content>1.0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="dc11c3c5-b7f7-4d57-9c93-b43ac81cbdad" name="JsonPath Match 7"><con:configuration><path>$['info']['matchInfos']</path><content>[]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="77e00985-d601-4c6c-bcaa-2cc1adeaee02" name="JsonPath Match 8"><con:configuration><path>$['info']['usageData']</path><content>0x8e0000008e000000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="7ff9c6ac-b006-4d32-87a4-a9629622cf44" name="Response SLA"><con:configuration><SLA>600</SLA></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="9929765c-153a-4765-9f73-961b8b4bd5ba" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Email_Authentication_With_Invalid_UID" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Auth_With_Valid_Email_Invalid_UID" id="08e3b3f9-35ef-4a94-a8dd-f350be0b4efe"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Auth_With_Valid_Email_Invalid_UID" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#endpoint}</con:endpoint><con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#neguid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}
</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="Invalid HTTP Status Codes" id="8bd0a797-6d86-4e43-a780-6185da3bd1ad" name="Invalid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c775490a-a43f-4ab0-9705-fa9becefe7c3" name="JsonPath Match"><con:configuration><path>$['err'][0]['errorCode']</path><content>IDA-MLC-002</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e7ecfc5-fc69-432b-a202-c0bdd209c817" name="JsonPath Match 2"><con:configuration><path>$['err'][0]['errorMessage']</path><content>Invalid UIN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3160df39-483d-4265-b5b3-79e2ca151652" name="JsonPath Match 3"><con:configuration><path>$['info']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="4b073183-bfd2-452e-a8ba-726b0e7c40e8" name="Response SLA"><con:configuration><SLA>500</SLA></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8087d968-b820-4b2d-b18f-6069f2e3f491" name="JsonPath Match 4"><con:configuration><path>$['status']</path><content>N</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="689f7ba2-1eba-4ce1-85b8-465f46555176" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="1f39d8b7-9aeb-4b38-bbc7-c0c9f5be9f69" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth_With_Valid_txnID" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Valid_txnID" id="a10a7859-2402-4e44-ae24-2a63ff7637d9"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Valid_txnID" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#endpoint}</con:endpoint><con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}
</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="JsonPath Match" id="6193fb2b-582f-4f38-9753-e9065bca9049" name="JsonPath Match"><con:configuration><path>$['status']</path><content>Y</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="39bec793-a33e-4ed3-aff5-9890636953d5" name="JsonPath Match 2"><con:configuration><path>$['errorCode']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8cff150-816d-4dee-85bf-d9f1a2285fcb" name="JsonPath Match 3"><con:configuration><path>$['txnID']</path><content>${#TestSuite#postxnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ac0c05b3-91b8-4bba-9bcf-046fdda9ca6e" name="JsonPath Match 4"><con:configuration><path>$['maskedMobile']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="55672853-24ce-4d1e-95de-7b6707fca7e4" name="JsonPath Match 5"><con:configuration><path>$['maskedEmail']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="8fad5b7d-854e-450f-80e0-b429626a9a96" name="Response SLA"><con:configuration><SLA>6000</SLA></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4e76b164-27a8-41e0-8329-df91eb3daaeb" name="Script Assertion"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSSZ";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.responseTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="de0214c1-3ba1-4dd4-ab2e-1297e514f1d5" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="1bb6f09c-3e40-423a-9aae-1825dc76c29c" name="Invalid HTTP Status Codes"><con:configuration><codes>400,500</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="5c98620d-23fc-4406-ae63-2dc26f3ce093" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth_With_Invalid_txnID" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Authenticate_Invalid_Without_txnID" id="66cda7ad-bff7-4daa-a0a0-c080671825bf"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Authenticate_Invalid_Without_txnID" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#endpoint}</con:endpoint><con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"",
   "ver":"${#TestSuite#posver}"
}
</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="Invalid HTTP Status Codes" id="cb94820a-e20c-409e-b027-ea8200d0a41d" name="Invalid HTTP Status Codes"><con:configuration><codes>500,200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="65e60879-128d-4392-9e16-72a188ac3968" name="JsonPath Match"><con:configuration><path>$['status']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3076e1c5-18f4-4041-bec7-6fc33bbc0695" name="JsonPath Match 2"><con:configuration><path>$['err']</path><content>[{"errorCode":"Pattern","errorMessage":"TxnId size must be 10"}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2254f752-c85b-476a-bda3-fb3bb05bd4cc" name="JsonPath Match 3"><con:configuration><path>$['err'][0]['errorCode']</path><content>Pattern</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c69461c4-c0ce-464d-9744-d8b59e15faf0" name="JsonPath Match 4"><con:configuration><path>$['err'][0]['errorMessage']</path><content>TxnId size must be 10</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6522e32f-07f3-4ece-bad0-817f7646dc35" name="JsonPath Match 5"><con:configuration><path>$['txnID']</path><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f0fb3b0a-879f-4be2-8bc1-186793548c88" name="JsonPath Match 6"><con:configuration><path>$['info']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="3f7672d8-2791-48ef-a355-a979ab5146fc" name="Response SLA"><con:configuration><SLA>600</SLA></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="10ee0c26-e30e-492a-aa5c-f69746e822aa" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="92457dfc-8b94-4620-92a7-3affa7f0c028" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth_With_Valid_muaCode" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Auth_With_Valid_muaCode" id="4b0f928b-f336-4ac0-b941-d03b731f87be"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Auth_With_Valid_muaCode" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#endpoint}</con:endpoint><con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}
</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="024c7624-a29f-4b9a-866f-d31ebaf04b97" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6dd48b09-1a24-48b9-9fc5-60e885dbed58" name="JsonPath Match"><con:configuration><path>$['status']</path><content>Y</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="86b98b8a-b52b-4d03-89e7-4038ce5b2308" name="JsonPath Match 2"><con:configuration><path>$['errorCode']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="002832d7-88eb-4642-acec-5bcd7217cf11" name="JsonPath Match 3"><con:configuration><path>$['txnID']</path><content>${#TestSuite#postxnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8c415306-25d5-46a3-b782-a57fc3816e67" name="JsonPath Match 4"><con:configuration><path>$['maskedMobile']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3b9cd6c4-0569-45e0-9c52-6808c07a72ee" name="JsonPath Match 5"><con:configuration><path>$['maskedEmail']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="a9bc2531-21de-4d61-8b87-f19d8b858f9a" name="Response SLA"><con:configuration><SLA>600</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="65c18944-2da4-4467-9504-45911ffa1f94" name="Invalid HTTP Status Codes"><con:configuration><codes>400,500</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="11ed764f-420c-47cb-867a-eb9374b404e8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth_With_Invalid_muaCode" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Authenticate_Invalid_Wrong_muaCode_boundaryValue9Digits" id="0ab05a38-05af-4c02-8935-5c04ead7f1e8"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Authenticate_Invalid_Wrong_muaCode_boundaryValue9Digits" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#endpoint}</con:endpoint><con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#negmuaCode9}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}
</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="Invalid HTTP Status Codes" id="6dde9bc2-02c7-4864-99ce-91659d0e973a" name="Invalid HTTP Status Codes"><con:configuration><codes>500,200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2a4007b2-0f21-44f9-aa86-3498666ca37f" name="JsonPath Match"><con:configuration><path>$['status']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="42d0885b-7eb5-4706-a8c5-78f0c9538ec8" name="JsonPath Match 2"><con:configuration><path>$['err']</path><content>[{"errorCode":"Size","errorMessage":"MuaCode size should be min 10"}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="affba3cc-9a5b-4ac1-9d1f-25be09374fed" name="JsonPath Match 3"><con:configuration><path>$['err'][0]['errorCode']</path><content>Size</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f6c1c4b6-24f7-4272-ac5c-b1bb9a1ca3d2" name="JsonPath Match 4"><con:configuration><path>$['err'][0]['errorMessage']</path><content>MuaCode size should be min 10</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5fb534d8-810a-42d5-af52-7a5ad4793e6e" name="JsonPath Match 5"><con:configuration><path>$['txnID']</path><content>${#TestSuite#postxnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7f8fed85-969e-43e8-9823-e0c78ac8c100" name="JsonPath Match 6"><con:configuration><path>$['info']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="523e16ba-663a-4d53-9c95-3ff8905c6aeb" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="b326416e-5ddb-4627-8742-8545d2a6194c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth_With_Valid_msaLicense_Key" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Auth_With_Valid_msaLicenseKey" id="14416cdf-dbcf-471f-8414-7d920af846ae"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Auth_With_Valid_msaLicenseKey" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#endpoint}</con:endpoint><con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}
</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="92adf56a-f03a-43b7-a32c-4b3aed6e35a6" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="a4798dff-52e9-4077-a239-dc42d5b110fb" name="Invalid HTTP Status Codes"><con:configuration><codes>400,500</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="d596e82f-676b-442a-89f8-6ba878f81b27" name="Script Assertion"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="5f3efd2f-76bd-4e6a-9188-bb8329ae400b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth_With_CurrentTimeStamp" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="currentTimeStamp" id="4255479e-2f84-4a27-846e-d93ec5dbac58"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="currentTimeStamp" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#endpoint}</con:endpoint><con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}
</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d6bad752-4f1f-4e88-840c-1244f2e4b293" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9551f628-e8a9-496b-ba65-90e146875143" name="JsonPath Match"><con:configuration><path>$['status']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="9ea1146b-67bf-4b09-9bb0-e656e4349e6e" name="Invalid HTTP Status Codes"><con:configuration><codes>400,500</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="6bbe8537-1757-420a-8d0c-2a687f8c0eb0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth_With_TimeStampGreaterThan24" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="timeStampGreaterThan24Hour" id="89b6838a-6dad-4266-8860-5cf50fa05c68"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="timeStampGreaterThan24Hour" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#endpoint}</con:endpoint><con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#timeStampGreaterThan24}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}
</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="05b0fc2c-2dea-47f3-b156-aa70ccc0ca6f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>500</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="54bc94ea-f055-4a83-872d-986beb7e19e2" name="JsonPath Match"><con:configuration><path>$['err']</path><content>[{"errorCode":"IDA-RQV-TMOUT-001","errorMessage":"Request should be reached within 24Hrs"}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b23303f4-1b72-442e-a07f-db9615936e6c" name="JsonPath Match 2"><con:configuration><path>$['err'][0]['errorCode']</path><content>IDA-RQV-TMOUT-001</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4c8a6301-119d-4f20-8ce6-f121ad109a05" name="JsonPath Match 3"><con:configuration><path>$['err'][0]['errorMessage']</path><content>Request should be reached within 24Hrs</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="13e1acd6-9967-48f1-8cb2-88c19f74aa0a" name="JsonPath Match 4"><con:configuration><path>$['txnID']</path><content>${#TestSuite#postxnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="72780eff-bfa0-4010-a0ed-5a25c45f0231" name="JsonPath Match 5"><con:configuration><path>$['info']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="c8f0084d-7dae-4703-ab9e-ca879799be9b" name="Response SLA"><con:configuration><SLA>600</SLA></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="28778567-3aab-4c4e-8753-0bd6c0d5a727" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth_With_Invalid_Time_Format" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Auth_With_Invalid_Time_Format" id="e83e2269-6dc1-4aa8-9ad9-dc9830f06b05"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Auth_With_Invalid_Time_Format" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#endpoint}</con:endpoint><con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#timeStampLessThan24}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}
</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="Invalid HTTP Status Codes" id="375864f0-f88f-4e4b-8be1-384f4564b88b" name="Invalid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="a05427da-c7a1-4ee6-9e28-226793dcab59" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>500</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="88793757-76d6-47c9-af84-da4e2778b72f" name="Response SLA"><con:configuration><SLA>600</SLA></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1e1b7301-4367-4d97-9e10-b9dcd8a76195" name="JsonPath Match"><con:configuration><path>$['status']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1ea71365-4ecc-45d7-9615-ed254af9bb29" name="JsonPath Match 2"><con:configuration><path>$['txnID']</path><content>${#TestSuite#postxnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="56f3ad10-952a-4126-ae1f-a20d0abf9811" name="JsonPath Match 3"><con:configuration><path>$['info']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="e53faac9-129a-4abf-b73e-0c9b9ca9441e" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Auth_With_Valid_Email_Invalid_VID" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Copy of Auth_With_Valid_Email_Invalid_VID" id="4e21e50f-3b63-4bf6-83c0-def3ad1db22b"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Auth_With_Valid_Email_Invalid_VID" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#endpoint}</con:endpoint><con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#negvid}",
   "idType":"${#TestSuite#posvidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}
</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="Invalid HTTP Status Codes" id="8bd0a797-6d86-4e43-a780-6185da3bd1ad" name="Invalid HTTP Status Codes"><con:configuration><codes>200,500
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c775490a-a43f-4ab0-9705-fa9becefe7c3" name="errorCode"><con:configuration><path>$['err'][0]['errorCode']</path><content>IDA-MLC-004</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e7ecfc5-fc69-432b-a202-c0bdd209c817" name="errorMessage"><con:configuration><path>$['err'][0]['errorMessage']</path><content>Invalid VID</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3160df39-483d-4265-b5b3-79e2ca151652" name="info"><con:configuration><path>$['info']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="4b073183-bfd2-452e-a8ba-726b0e7c40e8" name="Response SLA"><con:configuration><SLA>6000</SLA></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="82230b86-1cb7-45ef-b277-cb3980a732d9" name="Script Assertion"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.text.ParseException;
import java.text.SimpleDateFormat;
def responseContent = messageExchange.response.responseContent
log.info(responseContent.toString())

String format = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
def jsonResponseParse = new JsonSlurper().parseText(responseContent)
String date = jsonResponseParse.resTime;
log.info(date)
SimpleDateFormat sdf= new SimpleDateFormat(format);
		try {
			sdf.parse(date);
			assert(true);
		} catch (ParseException e) {
			assert(false);
		}</scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c814e006-cbc8-49fa-8e93-e932881b6a20" name="JsonPath Match"><con:configuration><path>$['txnID']</path><content>${#TestSuite#postxnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f60fb265-f949-4ac4-9d37-06267505e353" name="JsonPath Match 2"><con:configuration><path>$['status']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="b2e40d58-83cc-433f-b3d5-1e1c2beb5805" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="ebf80173-f1a4-41c2-89fd-b72606d14102" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Auth_With_Valid_Email_Invalid_UIDType" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Copy of Auth_With_Valid_Email_Invalid_UIDType" id="885ae6f3-f5b8-4ade-a2ff-ab61e61b6fd8"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Auth_With_Valid_Email_Invalid_UIDType" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#endpoint}</con:endpoint><con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#neguidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}
</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="Invalid HTTP Status Codes" id="8bd0a797-6d86-4e43-a780-6185da3bd1ad" name="Invalid HTTP Status Codes"><con:configuration><codes>200,500
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c775490a-a43f-4ab0-9705-fa9becefe7c3" name="JsonPath Match"><con:configuration><path>$['err'][0]['errorCode']</path><content>IDA-DTV-IDT-601</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e7ecfc5-fc69-432b-a202-c0bdd209c817" name="JsonPath Match 2"><con:configuration><path>$['err'][0]['errorMessage']</path><content>Invalid ID type</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3160df39-483d-4265-b5b3-79e2ca151652" name="JsonPath Match 3"><con:configuration><path>$['info']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="4b073183-bfd2-452e-a8ba-726b0e7c40e8" name="Response SLA"><con:configuration><SLA>600</SLA></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5ccdf816-5f81-4943-980d-b91a1bb6aed6" name="JsonPath Match 4"><con:configuration><path>$['status']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3eca6ffe-f6a3-40fb-9604-0d727ec54b0e" name="JsonPath Match 5"><con:configuration><path>$['err']</path><content>[{"errorCode":"IDA-DTV-IDT-601","errorMessage":"Invalid ID type"}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="c4169015-5327-4f3c-92e9-1db5b418f6fe" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="034d884c-9c7b-4173-99b1-3a2757cc9a22" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Auth_With_Valid_Email_Invalid_VIDType" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Copy of Auth_With_Valid_Email_Invalid_VIDType" id="2cf494e7-6ea9-4730-ab00-646abdea6555"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Auth_With_Valid_Email_Invalid_VIDType" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#endpoint}</con:endpoint><con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posvid}",
   "idType":"${#TestSuite#negvidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}
</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="Invalid HTTP Status Codes" id="8bd0a797-6d86-4e43-a780-6185da3bd1ad" name="Invalid HTTP Status Codes"><con:configuration><codes>200,500
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c775490a-a43f-4ab0-9705-fa9becefe7c3" name="JsonPath Match"><con:configuration><path>$['err'][0]['errorCode']</path><content>IDA-DTV-IDT-601</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e7ecfc5-fc69-432b-a202-c0bdd209c817" name="JsonPath Match 2"><con:configuration><path>$['err'][0]['errorMessage']</path><content>Invalid ID type</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3160df39-483d-4265-b5b3-79e2ca151652" name="JsonPath Match 3"><con:configuration><path>$['info']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="4b073183-bfd2-452e-a8ba-726b0e7c40e8" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fd588d22-d899-4acb-a7aa-606e0658b460" name="JsonPath Match 4"><con:configuration><path>$['err']</path><content>[{"errorCode":"IDA-DTV-IDT-601","errorMessage":"Invalid ID type"}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8b832224-ccf3-46cf-a744-68b15530471b" name="JsonPath Match 5"><con:configuration><path>$['status']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="98d932c5-57b3-44dc-b439-a61f814bddd0" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="6359fafa-f6ce-451a-a45f-938b33e027b9" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Auth_With_Invalid_Email_valid_VID" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Copy of Auth_With_Invalid_Email_valid_VID" id="a1af4f12-7b03-4789-9ac8-28d7ebaf1205"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Auth_With_Invalid_Email_valid_VID" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#endpoint}</con:endpoint><con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posvid}",
   "idType":"${#TestSuite#posvidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#negemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}
</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="Invalid HTTP Status Codes" id="8bd0a797-6d86-4e43-a780-6185da3bd1ad" name="Invalid HTTP Status Codes"><con:configuration><codes>400
</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="4b073183-bfd2-452e-a8ba-726b0e7c40e8" name="Response SLA"><con:configuration><SLA>500</SLA></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8146016d-6419-4ab8-9016-ba88edf62639" name="JsonPath Match"><con:configuration><path>$['status']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ffe44274-365d-4a4a-9660-ac55c030a574" name="JsonPath Match 2"><con:configuration><path>$['err']</path><content>Demographic data – email(pi) did not match</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="087d7f3e-a00f-4d75-9441-1dcedd958985" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Auth_With_Invalid_Email_valid_UID" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Copy of Auth_With_Invalid_Email_valid_UID" id="0a3bcfef-6e4f-48d8-8acd-c8709edb4b26"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Auth_With_Invalid_Email_valid_UID" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#endpoint}</con:endpoint><con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#negemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}
</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="Invalid HTTP Status Codes" id="8bd0a797-6d86-4e43-a780-6185da3bd1ad" name="Invalid HTTP Status Codes"><con:configuration><codes>200,500
</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="4b073183-bfd2-452e-a8ba-726b0e7c40e8" name="Response SLA"><con:configuration><SLA>500</SLA></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="352141f5-9ddf-458d-b653-176728277cf6" name="JsonPath Match"><con:configuration><path>$['status']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a0510d7-11c9-4c9a-a76a-d5a6bd588d28" name="JsonPath Match 2"><con:configuration><path>$['txnID']</path><content>${#TestSuite#postxnID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="baf287f1-797c-469d-88c6-50fd2eab6236" name="JsonPath Match 4"><con:configuration><path>$['err']</path><content>Demographic data – email(pi) did not match</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="7e9a5786-f910-4fd7-a4d6-5f4709f883b6" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="62234751-1d1e-4a2e-a0bb-7f8ca440dc45" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Auth_With_Invalid_Email_valid_UIDType" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Copy of Auth_With_Invalid_Email_valid_UIDType" id="2638f4fe-20cb-4f30-85ee-028102db4473"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Auth_With_Invalid_Email_valid_UIDType" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#endpoint}</con:endpoint><con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#negemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}
</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="Invalid HTTP Status Codes" id="8bd0a797-6d86-4e43-a780-6185da3bd1ad" name="Invalid HTTP Status Codes"><con:configuration><codes>200,500
</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="4b073183-bfd2-452e-a8ba-726b0e7c40e8" name="Response SLA"><con:configuration><SLA>500</SLA></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fb22697f-077e-4227-9d50-442d0f18a2bc" name="JsonPath Match"><con:configuration><path>$['status']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e87ce091-3584-4f4f-aadf-43580cf9a0a4" name="JsonPath Match 2"><con:configuration><path>$['err']</path><content>Demographic data – email(pi) did not match</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a40b8140-e91f-4877-ad05-3407f8b4d017" name="JsonPath Match 3"><con:configuration><path>$['info']</path><content>{"idType":"D","reqTime":"2018-11-15T17:25:32.624+0530","ver":"1.0","matchInfos":[],"usageData":"0x8e0000008a000000"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0bfb37d7-0b0a-412e-bf7b-30c1c8f17432" name="JsonPath Match 4"><con:configuration><path>$['info']['idType']</path><content>D</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2cb5feae-ebf9-4701-a533-cb3c07638cc7" name="JsonPath Match 5"><con:configuration><path>$['info']['ver']</path><content>1.0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5cc3cd4b-e242-4791-b321-b4efd61365e8" name="JsonPath Match 6"><con:configuration><path>$['info']['matchInfos']</path><content>[]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1d6c57a4-d5df-43da-9f52-59c93a20ae1e" name="JsonPath Match 7"><con:configuration><path>$['info']['usageData']</path><content>0x8e0000008a000000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="928fe75c-5e36-4807-b0c5-146cdd7262ad" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="5e581c02-ef72-4a92-839f-c64e0e594feb" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Auth_With_Invalid_Email_valid_VIDType" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Copy of Auth_With_Invalid_Email_valid_VIDType" id="dc23fe8c-2b6f-4211-b26b-3407c729c566"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/auth" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Auth_With_Invalid_Email_valid_VIDType" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#endpoint}</con:endpoint><con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posvid}",
   "idType":"${#TestSuite#posvidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#negemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#postxnID}",
   "ver":"${#TestSuite#posver}"
}
</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="Invalid HTTP Status Codes" id="8bd0a797-6d86-4e43-a780-6185da3bd1ad" name="Invalid HTTP Status Codes"><con:configuration><codes>200,500
</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="4b073183-bfd2-452e-a8ba-726b0e7c40e8" name="Response SLA"><con:configuration><SLA>500</SLA></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c32bb3eb-50ef-4b79-8004-7747c12f9487" name="JsonPath Match"><con:configuration><path>$['err']</path><content>Demographic data – email(pi) did not match</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b9d56783-5b1d-4e73-b8d0-095f9a9b6a17" name="JsonPath Match 2"><con:configuration><path>$['info']</path><content>{"idType":"V","reqTime":"2018-11-15T17:25:32.624+0530","ver":"1.0","matchInfos":[],"usageData":"0x8e0000008a000000"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3990365b-6483-4d16-b64b-0ae1e5a938da" name="JsonPath Match 3"><con:configuration><path>$['info']['idType']</path><content>V</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f4139776-5cc2-4af4-9593-901bb18492f5" name="JsonPath Match 4"><con:configuration><path>$['info']['ver']</path><content>1.0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6aed7787-c52d-4221-86b5-96c6abdd4603" name="JsonPath Match 5"><con:configuration><path>$['info']['usageData']</path><content>0x8e0000008a000000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="554db2d2-409a-45de-8bf9-b67977290ff4" name="JsonPath Match 6"><con:configuration><path>$['status']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="8922ca5a-9b4b-4639-b0a2-56c81d47fcbb" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Authenticate_Invalid_WrongTxnID_boundaryValue11Digits" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Copy of Authenticate_Invalid_WrongTxnID_boundaryValue11Digits" id="c06babde-8e8e-47e5-bb2c-72df32cd42b6"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Authenticate_Invalid_WrongTxnID_boundaryValue11Digits" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#endpoint}</con:endpoint><con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#negtxnID11}",
   "ver":"${#TestSuite#posver}"
}
</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="Response SLA Assertion" id="8fad5b7d-854e-450f-80e0-b429626a9a96" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c89a06a2-1886-4a6a-b1ea-65be7e91fc4d" name="JsonPath Match"><con:configuration><path>$['status']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2340d71e-b562-4705-9619-3cc49285a87e" name="JsonPath Match 2"><con:configuration><path>$['err']</path><content>[{"errorCode":"Pattern","errorMessage":"must match \"^[A-Z0-9]{10}\""}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="152311bd-6493-40a2-b841-2348533c4e52" name="JsonPath Match 3"><con:configuration><path>$['err'][0]['errorCode']</path><content>Pattern</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9f5c5edf-0ca8-4660-813a-c05fb0d7800f" name="JsonPath Match 4"><con:configuration><path>$['err'][0]['errorMessage']</path><content>must match "^[A-Z0-9]{10}"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6a6bce96-bbb7-43be-9af6-a145046b1d90" name="JsonPath Match 5"><con:configuration><path>$['txnID']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="61a53889-0edb-42fe-b607-98f6607feb66" name="JsonPath Match 6"><con:configuration><path>$['info']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="9ccd3546-da3f-47f2-a33a-08e747d0cb8a" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="920b5e06-6645-4ba3-8e19-0526a8574194" name="Invalid HTTP Status Codes"><con:configuration><codes>200,500</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="be9f660f-4f9f-429c-a137-a2d09a5e9a80" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Authenticate_Invalid_WrongTxnID_boundaryValue09Digits" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Copy of Authenticate_Invalid_WrongTxnID_boundaryValue09Digits" id="c7c0d06d-b599-40af-9384-c21d786c39ac"><con:settings/><con:config service="http://13.71.81.26:8081" resourcePath="/identity/otp" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Authenticate_Invalid_WrongTxnID_boundaryValue09Digits" id="bedafdaa-fc17-4254-9b06-ef9dc1822e02" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#endpoint}</con:endpoint><con:request>{  
   "authType":{  
      "ad":${#TestSuite#posad},
      "bio":${#TestSuite#posbio},
      "fad":${#TestSuite#posfad},
      "otp":${#TestSuite#posotp},
      "pi":${#TestSuite#pospi},
      "pin":${#TestSuite#pospin}
   },
   "data":"${#TestSuite#posdata}",
   "hmac":"${#TestSuite#poshmac}",
   "id":"${#TestSuite#posuid}",
   "idType":"${#TestSuite#posuidType}",
   "key":{  
      "publicKeyCert":"string",
      "sessionKey":"string"
   },
   "msaLicenseKey":"${#TestSuite#posmsaLicenseKey}",
   "muaCode":"${#TestSuite#posmuaCode}",
   "pii":{  
      "demo":{  
         "pi":{  
            "dob":"${#TestSuite#posdob}",
            "gender":"${#TestSuite#posgender}",
            "email":"${#TestSuite#posemail}",
            "phone":"${#TestSuite#posphone}"            
         }

      }
   },
   "reqTime":"${#TestSuite#currentTimeStamp}",
   "signature":"${#TestSuite#possignature}",
   "txnID":"${#TestSuite#negtxnID9}",
   "ver":"${#TestSuite#posver}"
}
</con:request><con:originalUri>http://13.71.81.26/identity/auth</con:originalUri><con:assertion type="Response SLA Assertion" id="8fad5b7d-854e-450f-80e0-b429626a9a96" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="62307af0-aa01-4180-bf5e-7af9a9d96f9a" name="Invalid HTTP Status Codes"><con:configuration><codes>500,200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a0c88805-d9ae-4d41-ab8a-319da371c29c" name="JsonPath Match"><con:configuration><path>$['status']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d465d1e3-56fd-4869-a7bb-94a9744911bb" name="JsonPath Match 2"><con:configuration><path>$['err'][0]['errorCode']</path><content>Pattern</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ead87179-8c20-4361-bf6b-585f1d39b04f" name="JsonPath Match 3"><con:configuration><path>$['err'][0]['errorMessage']</path><content>must match "^[A-Z0-9]{10}"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a7107008-f13a-4e2f-8a2f-11b49b5887f3" name="JsonPath Match 4"><con:configuration><path>$['txnID']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a70b18ec-218b-4f77-9e00-4ceeab7c191f" name="JsonPath Match 5"><con:configuration><path>$['info']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="6eda0b76-8d6f-4cf0-ae3e-5da934f84822" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>posmsaLicenseKey</con:name><con:value>1681893839</con:value></con:property><con:property><con:name>posmuaCode</con:name><con:value>4130883455</con:value></con:property><con:property><con:name>postxnID</con:name><con:value>1681893839</con:value></con:property><con:property><con:name>negtxnID</con:name><con:value>868586226</con:value></con:property><con:property><con:name>negmuaCode</con:name><con:value>868586226</con:value></con:property><con:property><con:name>negmsaLicenseKey</con:name><con:value>155428004</con:value></con:property><con:property><con:name>neguid</con:name><con:value>426789089019</con:value></con:property><con:property><con:name>negvid</con:name><con:value>537184361359820</con:value></con:property><con:property><con:name>posdob</con:name><con:value>2001-07-16</con:value></con:property><con:property><con:name>posad</con:name><con:value>false</con:value></con:property><con:property><con:name>posbio</con:name><con:value>false</con:value></con:property><con:property><con:name>posfad</con:name><con:value>false</con:value></con:property><con:property><con:name>posotp</con:name><con:value>false</con:value></con:property><con:property><con:name>pospi</con:name><con:value>true</con:value></con:property><con:property><con:name>pospin</con:name><con:value>false</con:value></con:property><con:property><con:name>posdata</con:name><con:value>string</con:value></con:property><con:property><con:name>poshmac</con:name><con:value>string</con:value></con:property><con:property><con:name>posuid</con:name><con:value>426789089018</con:value></con:property><con:property><con:name>posuidtype</con:name><con:value>D</con:value></con:property><con:property><con:name>posvid</con:name><con:value>5371843613598206</con:value></con:property><con:property><con:name>posvidtype</con:name><con:value>V</con:value></con:property><con:property><con:name>pospublicKeyCert</con:name><con:value>string</con:value></con:property><con:property><con:name>possessionKey</con:name><con:value>string</con:value></con:property><con:property><con:name>posgender</con:name><con:value>M</con:value></con:property><con:property><con:name>posemail</con:name><con:value>sathishk@gmail.com</con:value></con:property><con:property><con:name>posphone</con:name><con:value>044-22273388</con:value></con:property><con:property><con:name>possignature</con:name><con:value>string</con:value></con:property><con:property><con:name>posver</con:name><con:value>1.0</con:value></con:property><con:property><con:name>negpi</con:name><con:value>false</con:value></con:property><con:property><con:name>neguidType</con:name><con:value>A</con:value></con:property><con:property><con:name>negvidType</con:name><con:value>B</con:value></con:property><con:property><con:name>negdob</con:name><con:value>2010-07-16</con:value></con:property><con:property><con:name>neggender</con:name><con:value>F</con:value></con:property><con:property><con:name>negemail</con:name><con:value>sathis@gmail.com</con:value></con:property><con:property><con:name>negdomain</con:name><con:value>sathishkgmail.com</con:value></con:property><con:property><con:name>negphone</con:name><con:value>044-2227338</con:value></con:property><con:property><con:name>negver</con:name><con:value>1.0</con:value></con:property><con:property><con:name>currentTimeStamp</con:name><con:value>2018-11-16T13:40:59.934+0530</con:value></con:property><con:property><con:name>timeStampGreaterThan24</con:name><con:value>2018-11-14T12:40:59.943+0530</con:value></con:property><con:property><con:name>timeStampBetween24</con:name><con:value>2018-11-13T16:40:59.943+0530</con:value></con:property><con:property><con:name>timeStampEqualTo24</con:name><con:value>2018-11-15T13:40:59.934+0530</con:value></con:property><con:property><con:name>negtxnID9</con:name><con:value>588752873</con:value></con:property><con:property><con:name>negtxnID11</con:name><con:value>76074074367</con:value></con:property><con:property><con:name>negmuaCode9</con:name><con:value>588752873</con:value></con:property><con:property><con:name>negmuaCode11</con:name><con:value>76074074367</con:value></con:property><con:property><con:name>negmsaLicenseKey11</con:name><con:value>76074074367</con:value></con:property><con:property><con:name>negmsaLicenseKey9</con:name><con:value>588752873</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>http://13.71.81.26:8081</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite id="e424ba35-c62e-4021-9f51-61cc3c04f51c" name="lib">
    <con:settings/>
    <con:savedRecentRuns>1</con:savedRecentRuns>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="4524eceb-1af9-4f97-ae9a-3292bba7da1a" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="filehandling" searchProperties="true" timeout="0" maxResults="0">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="groovy" name="loadfile" id="1c6451a4-682f-46aa-9afe-13213efcb31d">
        <con:settings/>
        <con:config><script>import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

def class FileLoader{
def  file_load()
{
log.info(System.getProperty("user.dir"));
def inputFile = new File("C:\\soapui\\InputData.json");
return inputFile.text
}

}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Groovy Script" id="d1cd9ccd-c484-44e3-b867-09702c8de008"><con:settings/><con:config><script>class Example
{
 def log
 def context
 def testRunner
 // Class constructor with same case as Class name
 def Example(logIn,contextIn,testRunnerIn)
 {
  this.log = logIn
  this.context = contextIn
  this.testRunner = testRunnerIn
 }
}</script></con:config></con:testStep><con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite><con:requirements/>
  <con:properties><con:property><con:name>user</con:name><con:value>repuser</con:value></con:property><con:property><con:name>url</con:name><con:value>jdbc:postgresql://104.211.228.46:9001/postgres</con:value></con:property><con:property><con:name>password</con:name><con:value>Mosip@dev123</con:value></con:property><con:property><con:name>driver</con:name><con:value>org.postgresql.Driver</con:value></con:property><con:property><con:name>user_ida</con:name><con:value>postgres</con:value></con:property><con:property><con:name>url_ida</con:name><con:value>jdbc:postgresql://13.71.81.26:9001/postgres</con:value></con:property><con:property><con:name>password_ida</con:name><con:value>admin</con:value></con:property></con:properties>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:xmlTemplates/>
    <con:parameters/>
  </con:reporting>
  <con:sensitiveInformation/>
  <con:authRepository/>
  <con:loadUiTest name="LoadTest 1" id="0bf916b6-e09b-4e60-b806-7e5229a474de">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">82562434-3c4e-4b46-a861-4b1d0296e65f</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">54560f59-e003-456a-b5d8-6234130875c2</con:setting>
    </con:settings>
    <con1:loadui-project id="940aaa8f-0bfb-43ad-b057-91e7a1f3ec14" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="ae124c2d-517f-4c2e-9f2c-17957dbf1b9b">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="52a68286-2a87-4fd3-92ff-2d759744ff52" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="d4c50c4a-7393-4965-849d-3e3573fb3ddc" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_Smoke" id="a73d539b-6048-423f-b2da-c0205765a567" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">82562434-3c4e-4b46-a861-4b1d0296e65f</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="52a68286-2a87-4fd3-92ff-2d759744ff52/outgoingTerminal" inputTerminalId="d4c50c4a-7393-4965-849d-3e3573fb3ddc/stateTerminal"/>
        <con1:connection outputTerminalId="d4c50c4a-7393-4965-849d-3e3573fb3ddc/triggerTerminal" inputTerminalId="a73d539b-6048-423f-b2da-c0205765a567/triggerTerminal"/>
        <con1:connection outputTerminalId="a73d539b-6048-423f-b2da-c0205765a567/runningTerminal" inputTerminalId="d4c50c4a-7393-4965-849d-3e3573fb3ddc/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="940aaa8f-0bfb-43ad-b057-91e7a1f3ec14" scenarioId="ae124c2d-517f-4c2e-9f2c-17957dbf1b9b" name="New Scenario" id="b7bbb858-ebce-4905-ad30-a3b83edede9e">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="80eba632-e578-44ef-b48d-5ab8383a074d">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">08cb4e3c-a123-4f6c-b32b-6f4b49908cf9</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">0bcedd2a-dfa9-467a-a363-660986d9c4e4</con:setting>
    </con:settings>
    <con1:loadui-project id="9a5b7232-ce48-4597-9a2a-442e46878817" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="2d1b05b8-5522-4294-a9a7-81a2ca4a0152">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="5fb39afe-d8b6-4179-94b6-21bce94c2bdf" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="1b10720f-bd7d-4b03-8f46-31b442f58905" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_ValidTxnID_InvalidOTP" id="8d4f3955-0630-4124-8408-d34c273f8597" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">08cb4e3c-a123-4f6c-b32b-6f4b49908cf9</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="5fb39afe-d8b6-4179-94b6-21bce94c2bdf/outgoingTerminal" inputTerminalId="1b10720f-bd7d-4b03-8f46-31b442f58905/stateTerminal"/>
        <con1:connection outputTerminalId="1b10720f-bd7d-4b03-8f46-31b442f58905/triggerTerminal" inputTerminalId="8d4f3955-0630-4124-8408-d34c273f8597/triggerTerminal"/>
        <con1:connection outputTerminalId="8d4f3955-0630-4124-8408-d34c273f8597/runningTerminal" inputTerminalId="1b10720f-bd7d-4b03-8f46-31b442f58905/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="9a5b7232-ce48-4597-9a2a-442e46878817" scenarioId="2d1b05b8-5522-4294-a9a7-81a2ca4a0152" name="New Scenario" id="f5c64630-4dae-48ee-a539-c3a3ab0261e7">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="d82c31ab-ae7e-418d-8324-6f7e875c416d">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">834e7347-77a2-4419-affb-a9a0787b0071</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">1cf4434a-ec31-41ca-82f7-2876dc206a8a</con:setting>
    </con:settings>
    <con1:loadui-project id="edf76ed3-c39f-4cd8-80f3-7179585169c0" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="10f5804f-a351-4519-a1dd-53e49addbbe8">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="f45e6ee0-99e4-42b3-83de-f141c9539a96" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="9a655614-1ec2-4e1a-af51-599c8ee91d98" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_InValidTxnID_validOTP" id="7431baa0-5ec0-4adc-a7d0-bda0b8b38fe8" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">834e7347-77a2-4419-affb-a9a0787b0071</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="f45e6ee0-99e4-42b3-83de-f141c9539a96/outgoingTerminal" inputTerminalId="9a655614-1ec2-4e1a-af51-599c8ee91d98/stateTerminal"/>
        <con1:connection outputTerminalId="9a655614-1ec2-4e1a-af51-599c8ee91d98/triggerTerminal" inputTerminalId="7431baa0-5ec0-4adc-a7d0-bda0b8b38fe8/triggerTerminal"/>
        <con1:connection outputTerminalId="7431baa0-5ec0-4adc-a7d0-bda0b8b38fe8/runningTerminal" inputTerminalId="9a655614-1ec2-4e1a-af51-599c8ee91d98/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="edf76ed3-c39f-4cd8-80f3-7179585169c0" scenarioId="10f5804f-a351-4519-a1dd-53e49addbbe8" name="New Scenario" id="a049aa8d-cf68-4665-9d8b-4b91a85a08fc">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="5cd297cb-c56c-45a2-9795-1ea40864b18e">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">e10d79fa-fdd5-4d1d-8ba0-3f8eadddcddb</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">979c221a-bb0c-4917-9867-bac1dbccc952</con:setting>
    </con:settings>
    <con1:loadui-project id="faa7d91c-bfc4-453f-9c3a-05cae71d4b91" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="c4903aa4-a2d5-414c-803e-b6911485bb19">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="e3020c16-f4f1-4428-aa96-c5bbae185ba5" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="f9519a11-be21-4154-ac0c-432d915e0550" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_InValidTxnID_InValidOTP" id="048fdbb4-7de5-4501-a842-a376acc5afbb" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">e10d79fa-fdd5-4d1d-8ba0-3f8eadddcddb</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="e3020c16-f4f1-4428-aa96-c5bbae185ba5/outgoingTerminal" inputTerminalId="f9519a11-be21-4154-ac0c-432d915e0550/stateTerminal"/>
        <con1:connection outputTerminalId="f9519a11-be21-4154-ac0c-432d915e0550/triggerTerminal" inputTerminalId="048fdbb4-7de5-4501-a842-a376acc5afbb/triggerTerminal"/>
        <con1:connection outputTerminalId="048fdbb4-7de5-4501-a842-a376acc5afbb/runningTerminal" inputTerminalId="f9519a11-be21-4154-ac0c-432d915e0550/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="faa7d91c-bfc4-453f-9c3a-05cae71d4b91" scenarioId="c4903aa4-a2d5-414c-803e-b6911485bb19" name="New Scenario" id="aaf54e34-45ff-45a7-a086-7bd3edaf187b">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="2e5bcb2a-270c-4cdb-80d0-293600832cc2">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">83c73248-b066-4f7e-8dca-578dd15b1de6</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">a70c7d10-3cd1-42a0-aab1-bba66ccbb9d9</con:setting>
    </con:settings>
    <con1:loadui-project id="fa25fee1-094d-40d1-a37a-e870bb06f0b8" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="9adb3357-07df-4469-95c9-9f9b8d2ad310">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="314f32b6-329f-4aaf-9ac8-1a3050565f16" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="44d6a958-18cd-40df-8a52-198e36000e3a" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_Smoke_VID" id="98c9938a-ee16-49ed-939f-b9c06a0dbeaf" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">83c73248-b066-4f7e-8dca-578dd15b1de6</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="314f32b6-329f-4aaf-9ac8-1a3050565f16/outgoingTerminal" inputTerminalId="44d6a958-18cd-40df-8a52-198e36000e3a/stateTerminal"/>
        <con1:connection outputTerminalId="44d6a958-18cd-40df-8a52-198e36000e3a/triggerTerminal" inputTerminalId="98c9938a-ee16-49ed-939f-b9c06a0dbeaf/triggerTerminal"/>
        <con1:connection outputTerminalId="98c9938a-ee16-49ed-939f-b9c06a0dbeaf/runningTerminal" inputTerminalId="44d6a958-18cd-40df-8a52-198e36000e3a/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="fa25fee1-094d-40d1-a37a-e870bb06f0b8" scenarioId="9adb3357-07df-4469-95c9-9f9b8d2ad310" name="New Scenario" id="d8b598f6-b93f-4f91-8482-4bc5c8adb636">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="3f347c5a-5f13-4230-a847-45f6b7b635d1">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">de099ddc-cb7f-4538-b3d8-eebb310efce2</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">7bc5842b-2888-4987-bdec-959679e5fbb0</con:setting>
    </con:settings>
    <con1:loadui-project id="5257138c-98af-4cdc-94e8-1ea94c913421" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="ba84d812-0256-4f81-af90-404b6639f247">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="30c31d53-0ca0-4ad5-b066-c8d601c13417" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="24c37cd3-cc03-4bbf-a27b-b3bfd59ac454" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_InValidTxnID_validOTP_VID" id="44f15db2-f8e2-4c71-8db5-5231a03b150e" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">de099ddc-cb7f-4538-b3d8-eebb310efce2</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="30c31d53-0ca0-4ad5-b066-c8d601c13417/outgoingTerminal" inputTerminalId="24c37cd3-cc03-4bbf-a27b-b3bfd59ac454/stateTerminal"/>
        <con1:connection outputTerminalId="24c37cd3-cc03-4bbf-a27b-b3bfd59ac454/triggerTerminal" inputTerminalId="44f15db2-f8e2-4c71-8db5-5231a03b150e/triggerTerminal"/>
        <con1:connection outputTerminalId="44f15db2-f8e2-4c71-8db5-5231a03b150e/runningTerminal" inputTerminalId="24c37cd3-cc03-4bbf-a27b-b3bfd59ac454/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="5257138c-98af-4cdc-94e8-1ea94c913421" scenarioId="ba84d812-0256-4f81-af90-404b6639f247" name="New Scenario" id="f35ab737-c964-4a37-b87d-06f827589f87">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="1f3f8a00-025f-47c1-a59c-163c3658771e">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">f0acf2b2-3591-478c-b791-5e4cc6ee1163</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">10c31501-d7ec-4fad-86e8-d3bad823ee2a</con:setting>
    </con:settings>
    <con1:loadui-project id="d9a5a1cd-86f7-467d-8f2b-8a5affbdbdc6" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="2b58f5f8-19d1-4689-b135-849f800b24a7">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="280b4c45-f4f2-4f74-aa0c-8c9c6b41f81f" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="5bd65a7e-1e6e-42ad-9b5d-fd1c78834082" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_ValidTxnID_InvalidOTP_VID" id="092d5e4f-fc13-448e-9d86-98b4c5d8a1a4" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">f0acf2b2-3591-478c-b791-5e4cc6ee1163</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="280b4c45-f4f2-4f74-aa0c-8c9c6b41f81f/outgoingTerminal" inputTerminalId="5bd65a7e-1e6e-42ad-9b5d-fd1c78834082/stateTerminal"/>
        <con1:connection outputTerminalId="5bd65a7e-1e6e-42ad-9b5d-fd1c78834082/triggerTerminal" inputTerminalId="092d5e4f-fc13-448e-9d86-98b4c5d8a1a4/triggerTerminal"/>
        <con1:connection outputTerminalId="092d5e4f-fc13-448e-9d86-98b4c5d8a1a4/runningTerminal" inputTerminalId="5bd65a7e-1e6e-42ad-9b5d-fd1c78834082/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="d9a5a1cd-86f7-467d-8f2b-8a5affbdbdc6" scenarioId="2b58f5f8-19d1-4689-b135-849f800b24a7" name="New Scenario" id="018d53d2-df46-4029-80d0-41a2c451ecf2">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="141b4e8a-ce5d-4632-8ddb-8ddd53f159a6">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">01bf5718-5d4a-49e6-bfcc-c3269951b32a</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">44455f52-ee39-46aa-858a-b6fb300aa2d5</con:setting>
    </con:settings>
    <con1:loadui-project id="0ffd8e19-7866-47aa-83d8-cf1ad1dcd758" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="4cc0a902-ee60-49f4-be5b-d01abf560dcc">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="0f01fb63-fc01-4cc9-9b94-aade63e725a2" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="43e15b21-5f1b-4592-becc-9f08789ebfa0" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_InValidTxnID_InValidOTP_VID" id="4278ebc4-0961-4349-a383-a67e64079c9d" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">01bf5718-5d4a-49e6-bfcc-c3269951b32a</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="0f01fb63-fc01-4cc9-9b94-aade63e725a2/outgoingTerminal" inputTerminalId="43e15b21-5f1b-4592-becc-9f08789ebfa0/stateTerminal"/>
        <con1:connection outputTerminalId="43e15b21-5f1b-4592-becc-9f08789ebfa0/triggerTerminal" inputTerminalId="4278ebc4-0961-4349-a383-a67e64079c9d/triggerTerminal"/>
        <con1:connection outputTerminalId="4278ebc4-0961-4349-a383-a67e64079c9d/runningTerminal" inputTerminalId="43e15b21-5f1b-4592-becc-9f08789ebfa0/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="0ffd8e19-7866-47aa-83d8-cf1ad1dcd758" scenarioId="4cc0a902-ee60-49f4-be5b-d01abf560dcc" name="New Scenario" id="817cec25-1d3f-44b1-9b8e-2367343c236b">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="991a834d-5288-434e-bb63-db4e43828842">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">5a61e83c-2b3d-486b-a8b3-4dd7cbe36e37</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">e7315238-1f70-4124-bd95-f1a9c95ef441</con:setting>
    </con:settings>
    <con1:loadui-project id="baad6325-46d0-45fd-a233-c9f7ca75f2f8" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="d01ddcc0-008b-4d61-bbb0-7ef2dcc2364c">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="b8d852cb-6361-453e-816c-80225811644b" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="c91597ab-62c6-4449-8176-d78c7ccbba12" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_Smoke_InvalidUIN" id="10dab3e1-1d63-4b9a-926d-4a6c2862d354" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">5a61e83c-2b3d-486b-a8b3-4dd7cbe36e37</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="b8d852cb-6361-453e-816c-80225811644b/outgoingTerminal" inputTerminalId="c91597ab-62c6-4449-8176-d78c7ccbba12/stateTerminal"/>
        <con1:connection outputTerminalId="c91597ab-62c6-4449-8176-d78c7ccbba12/triggerTerminal" inputTerminalId="10dab3e1-1d63-4b9a-926d-4a6c2862d354/triggerTerminal"/>
        <con1:connection outputTerminalId="10dab3e1-1d63-4b9a-926d-4a6c2862d354/runningTerminal" inputTerminalId="c91597ab-62c6-4449-8176-d78c7ccbba12/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="baad6325-46d0-45fd-a233-c9f7ca75f2f8" scenarioId="d01ddcc0-008b-4d61-bbb0-7ef2dcc2364c" name="New Scenario" id="c4e4d302-8369-45b5-9404-6f96081e7f99">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="4e3ccb45-07e3-445e-9d81-a83f23de87ce">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">93adebfe-1429-4423-a0ed-92e7e919fa7a</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">38d95e32-9909-4c55-97fc-6818c6a4c6fc</con:setting>
    </con:settings>
    <con1:loadui-project id="0390e2a7-9970-4b30-90fe-7d834d171c3a" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="ad632df7-1cf0-4c02-ad55-87cd26dd0c60">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="a32af463-2751-4721-b540-fadbf0296fd7" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="a36ddaf6-ca2a-43e8-8cee-895463c9991b" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_Smoke_InvalidVID" id="a7d356ee-8357-4842-aa0d-f2b5feecba16" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">93adebfe-1429-4423-a0ed-92e7e919fa7a</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="a32af463-2751-4721-b540-fadbf0296fd7/outgoingTerminal" inputTerminalId="a36ddaf6-ca2a-43e8-8cee-895463c9991b/stateTerminal"/>
        <con1:connection outputTerminalId="a36ddaf6-ca2a-43e8-8cee-895463c9991b/triggerTerminal" inputTerminalId="a7d356ee-8357-4842-aa0d-f2b5feecba16/triggerTerminal"/>
        <con1:connection outputTerminalId="a7d356ee-8357-4842-aa0d-f2b5feecba16/runningTerminal" inputTerminalId="a36ddaf6-ca2a-43e8-8cee-895463c9991b/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="0390e2a7-9970-4b30-90fe-7d834d171c3a" scenarioId="ad632df7-1cf0-4c02-ad55-87cd26dd0c60" name="New Scenario" id="f932cef3-7b68-4fd8-ba1c-2eb82b71e41e">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="e8f5fbef-6cc6-44bd-bc1f-075275793746">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">4b2d223b-d743-43f7-83ac-6360418bf717</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">615538ed-b961-4e46-8f2e-aa107c7e1cde</con:setting>
    </con:settings>
    <con1:loadui-project id="dbcb0672-eb78-41e3-b4e0-88d3b0206230" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="2c1c5da0-7ba9-4ebe-94c2-586b88c34e50">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="1acbbae5-4a7d-4851-a59a-f9745c89c7ee" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="af099819-ecc7-401e-abb4-7b9c1ce205df" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_Smoke_Invalid_ver_UID" id="b4b577a1-f6ff-4644-a9d2-26d49ea48342" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">4b2d223b-d743-43f7-83ac-6360418bf717</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="1acbbae5-4a7d-4851-a59a-f9745c89c7ee/outgoingTerminal" inputTerminalId="af099819-ecc7-401e-abb4-7b9c1ce205df/stateTerminal"/>
        <con1:connection outputTerminalId="af099819-ecc7-401e-abb4-7b9c1ce205df/triggerTerminal" inputTerminalId="b4b577a1-f6ff-4644-a9d2-26d49ea48342/triggerTerminal"/>
        <con1:connection outputTerminalId="b4b577a1-f6ff-4644-a9d2-26d49ea48342/runningTerminal" inputTerminalId="af099819-ecc7-401e-abb4-7b9c1ce205df/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="dbcb0672-eb78-41e3-b4e0-88d3b0206230" scenarioId="2c1c5da0-7ba9-4ebe-94c2-586b88c34e50" name="New Scenario" id="80dd201c-63b3-4ca0-b792-6b98f7724151">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="aef71be3-d5c7-44cf-9ab4-08b626951fe0">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">1a6e18ee-4e52-4507-a8aa-268a4e8767bd</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">381ceac5-19c6-4bbd-b1c4-65cead82add4</con:setting>
    </con:settings>
    <con1:loadui-project id="45fac27a-f558-4538-b37b-aeeb21328606" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="cc9a77fb-7830-412e-afd7-9654621fc742">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="36687dd4-f3d2-421c-88ca-0b2a6cd76ac5" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="f363906b-b13a-49b6-a0b6-b261673cf127" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:Copy of OTP_Authenticate_Smoke_Invalid_ver_VID" id="7b56d5ed-3f30-4daa-a39e-f92e9ff4f3fe" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">1a6e18ee-4e52-4507-a8aa-268a4e8767bd</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="36687dd4-f3d2-421c-88ca-0b2a6cd76ac5/outgoingTerminal" inputTerminalId="f363906b-b13a-49b6-a0b6-b261673cf127/stateTerminal"/>
        <con1:connection outputTerminalId="f363906b-b13a-49b6-a0b6-b261673cf127/triggerTerminal" inputTerminalId="7b56d5ed-3f30-4daa-a39e-f92e9ff4f3fe/triggerTerminal"/>
        <con1:connection outputTerminalId="7b56d5ed-3f30-4daa-a39e-f92e9ff4f3fe/runningTerminal" inputTerminalId="f363906b-b13a-49b6-a0b6-b261673cf127/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="45fac27a-f558-4538-b37b-aeeb21328606" scenarioId="cc9a77fb-7830-412e-afd7-9654621fc742" name="New Scenario" id="d60d1452-51ba-4b4c-8b80-222beba01894">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="6fcb5783-d596-4b55-a564-494840f93b0f">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">db2e019f-c39c-4c9e-a246-510ef1570039</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">23e1d280-d9b9-42d0-bb7b-c282d9b66a73</con:setting>
    </con:settings>
    <con1:loadui-project id="6d2ded85-214d-454e-8900-7b7917eae814" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="b9e2b92a-8bf9-477a-8575-115037212403">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="96656feb-8b56-4bc6-a5b9-867d6b6a60da" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="2ea57496-547a-4812-b8e9-df7981d3f70c" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_Smoke" id="41e0b4d0-dd1e-4854-918c-633696019870" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">db2e019f-c39c-4c9e-a246-510ef1570039</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="96656feb-8b56-4bc6-a5b9-867d6b6a60da/outgoingTerminal" inputTerminalId="2ea57496-547a-4812-b8e9-df7981d3f70c/stateTerminal"/>
        <con1:connection outputTerminalId="2ea57496-547a-4812-b8e9-df7981d3f70c/triggerTerminal" inputTerminalId="41e0b4d0-dd1e-4854-918c-633696019870/triggerTerminal"/>
        <con1:connection outputTerminalId="41e0b4d0-dd1e-4854-918c-633696019870/runningTerminal" inputTerminalId="2ea57496-547a-4812-b8e9-df7981d3f70c/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="6d2ded85-214d-454e-8900-7b7917eae814" scenarioId="b9e2b92a-8bf9-477a-8575-115037212403" name="New Scenario" id="2c25613e-6053-45bb-9a17-5527607fedee">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="d9007624-db99-453e-b385-f8d6c5fea2a8">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">bffd597b-bc95-4531-941d-e0dbbbe2ec66</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">54e6c81c-fda7-46cb-b66d-69e9934e1451</con:setting>
    </con:settings>
    <con1:loadui-project id="78faa6ab-b4b7-49db-b35d-1cdf5a0e13a2" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="d680a9c3-1c50-4117-9707-7127518d19b4">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="f704657f-b82f-43ba-ba3b-f2fd4d8a854e" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="4427d8bf-4a32-4c5b-a7c4-0eb001a4b621" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_ValidTxnID_InvalidOTP" id="b0fb484a-11ee-4740-b457-6e12a8966590" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">bffd597b-bc95-4531-941d-e0dbbbe2ec66</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="f704657f-b82f-43ba-ba3b-f2fd4d8a854e/outgoingTerminal" inputTerminalId="4427d8bf-4a32-4c5b-a7c4-0eb001a4b621/stateTerminal"/>
        <con1:connection outputTerminalId="4427d8bf-4a32-4c5b-a7c4-0eb001a4b621/triggerTerminal" inputTerminalId="b0fb484a-11ee-4740-b457-6e12a8966590/triggerTerminal"/>
        <con1:connection outputTerminalId="b0fb484a-11ee-4740-b457-6e12a8966590/runningTerminal" inputTerminalId="4427d8bf-4a32-4c5b-a7c4-0eb001a4b621/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="78faa6ab-b4b7-49db-b35d-1cdf5a0e13a2" scenarioId="d680a9c3-1c50-4117-9707-7127518d19b4" name="New Scenario" id="7f7bb0a3-1360-496d-8707-0873d0f66732">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="d17c4323-7dfc-4288-b266-fb64fd9866e7">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">0b126deb-605d-4c3f-b8bf-2ad97cf5ca47</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">5dc11492-92f5-4730-9afd-9e0946bce110</con:setting>
    </con:settings>
    <con1:loadui-project id="f7c9b2a2-0d2f-4d23-b8c8-498496348552" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="07bf56ec-6833-48c5-bed8-f4e4726c1da3">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="b38c30da-5322-407a-8a48-50778e4f031b" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="e4e027a5-912a-4523-9335-8e835181d4e5" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_InValidTxnID_validOTP" id="36c7507f-a5d2-46ef-a8d2-4ed2a5f1752f" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">0b126deb-605d-4c3f-b8bf-2ad97cf5ca47</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="b38c30da-5322-407a-8a48-50778e4f031b/outgoingTerminal" inputTerminalId="e4e027a5-912a-4523-9335-8e835181d4e5/stateTerminal"/>
        <con1:connection outputTerminalId="e4e027a5-912a-4523-9335-8e835181d4e5/triggerTerminal" inputTerminalId="36c7507f-a5d2-46ef-a8d2-4ed2a5f1752f/triggerTerminal"/>
        <con1:connection outputTerminalId="36c7507f-a5d2-46ef-a8d2-4ed2a5f1752f/runningTerminal" inputTerminalId="e4e027a5-912a-4523-9335-8e835181d4e5/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="f7c9b2a2-0d2f-4d23-b8c8-498496348552" scenarioId="07bf56ec-6833-48c5-bed8-f4e4726c1da3" name="New Scenario" id="aac79e74-2383-47af-b99b-b158865acd77">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="c9d5875f-cc7b-4341-a645-3075758a08d7">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">ab6f1ca9-6043-4e83-be72-c5233dc4a2ce</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">ff91c5d5-10ee-40f3-a990-e6a8be9a70ba</con:setting>
    </con:settings>
    <con1:loadui-project id="c9a99839-54f5-4a06-a7ad-7e1a50e77919" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="1020cc8e-f016-4c44-b338-4758a4f485f9">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="d320e69c-b11d-4a07-80ed-2d59b667dd5a" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="e83a137f-c48f-43ed-b811-f5699a7a1a43" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_InValidTxnID_InValidOTP" id="720be1bd-b313-4c4f-8a30-398d05f83ca0" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">ab6f1ca9-6043-4e83-be72-c5233dc4a2ce</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="d320e69c-b11d-4a07-80ed-2d59b667dd5a/outgoingTerminal" inputTerminalId="e83a137f-c48f-43ed-b811-f5699a7a1a43/stateTerminal"/>
        <con1:connection outputTerminalId="e83a137f-c48f-43ed-b811-f5699a7a1a43/triggerTerminal" inputTerminalId="720be1bd-b313-4c4f-8a30-398d05f83ca0/triggerTerminal"/>
        <con1:connection outputTerminalId="720be1bd-b313-4c4f-8a30-398d05f83ca0/runningTerminal" inputTerminalId="e83a137f-c48f-43ed-b811-f5699a7a1a43/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="c9a99839-54f5-4a06-a7ad-7e1a50e77919" scenarioId="1020cc8e-f016-4c44-b338-4758a4f485f9" name="New Scenario" id="f70843ce-68a2-4689-9d24-921203351ab8">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="562393fd-9942-46d4-8a8f-ea32976d613f">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">3510fba9-f13e-4e67-b153-46fbf76d30c7</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">2dd01e56-7220-470e-af26-a480240b8cce</con:setting>
    </con:settings>
    <con1:loadui-project id="f58629f7-8819-40da-80b3-c705d9a40002" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="3dd0ef82-dd68-4ebc-840e-b70953371895">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="8c34f2fc-9ee4-4f1e-9c13-66c33702d526" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="47e31a4a-4d75-44fb-ad4b-e1f37a9f7631" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_Smoke_VID" id="b6a6eb82-c576-466b-9ed3-f2d9705b6b45" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">3510fba9-f13e-4e67-b153-46fbf76d30c7</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="8c34f2fc-9ee4-4f1e-9c13-66c33702d526/outgoingTerminal" inputTerminalId="47e31a4a-4d75-44fb-ad4b-e1f37a9f7631/stateTerminal"/>
        <con1:connection outputTerminalId="47e31a4a-4d75-44fb-ad4b-e1f37a9f7631/triggerTerminal" inputTerminalId="b6a6eb82-c576-466b-9ed3-f2d9705b6b45/triggerTerminal"/>
        <con1:connection outputTerminalId="b6a6eb82-c576-466b-9ed3-f2d9705b6b45/runningTerminal" inputTerminalId="47e31a4a-4d75-44fb-ad4b-e1f37a9f7631/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="f58629f7-8819-40da-80b3-c705d9a40002" scenarioId="3dd0ef82-dd68-4ebc-840e-b70953371895" name="New Scenario" id="93881432-b372-4cd7-8ce2-3a6958aca688">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="8f0efb3d-3fc7-4f0b-aff7-9e5f407f4269">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">159dbe4b-e4f8-4079-9e1d-2723b4bf2bcc</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">97a2f9c4-dd31-4c0d-93a3-0603d161b627</con:setting>
    </con:settings>
    <con1:loadui-project id="dd86b633-7e76-40a7-bb12-7c335703424d" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="cee85c16-9b3b-4541-84ae-d073f3f26c73">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="7b63c0c3-e61d-4d68-8373-9af5f43b32f2" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="cda4fe34-86b5-4aad-bf03-3e9e34c39152" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_InValidTxnID_validOTP_VID" id="a125aeb9-d05c-4b41-9ef0-6045d3086dac" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">159dbe4b-e4f8-4079-9e1d-2723b4bf2bcc</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="7b63c0c3-e61d-4d68-8373-9af5f43b32f2/outgoingTerminal" inputTerminalId="cda4fe34-86b5-4aad-bf03-3e9e34c39152/stateTerminal"/>
        <con1:connection outputTerminalId="cda4fe34-86b5-4aad-bf03-3e9e34c39152/triggerTerminal" inputTerminalId="a125aeb9-d05c-4b41-9ef0-6045d3086dac/triggerTerminal"/>
        <con1:connection outputTerminalId="a125aeb9-d05c-4b41-9ef0-6045d3086dac/runningTerminal" inputTerminalId="cda4fe34-86b5-4aad-bf03-3e9e34c39152/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="dd86b633-7e76-40a7-bb12-7c335703424d" scenarioId="cee85c16-9b3b-4541-84ae-d073f3f26c73" name="New Scenario" id="ecaabae0-1c02-4d38-bd61-c791a8eac1b9">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="3866bce9-6a91-4ec8-a2a5-c1f3d16baf53">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">3c23b6d4-deb9-4e81-8ea6-1aea90d184ac</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">9495f847-48cf-4a34-97cf-9ce412cc004c</con:setting>
    </con:settings>
    <con1:loadui-project id="333635d2-b157-43c7-96dd-86e6638d3cd1" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="105e607e-51cd-43f9-a257-f1683e0f9f00">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="30054f82-dca6-4011-89c5-ede1fb2074cc" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="75c6eb2c-d0b1-4fd3-9b70-f2f255e6c5d7" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_ValidTxnID_InvalidOTP_VID" id="36887478-9dc5-48ff-a0d9-6740bc5cafc7" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">3c23b6d4-deb9-4e81-8ea6-1aea90d184ac</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="30054f82-dca6-4011-89c5-ede1fb2074cc/outgoingTerminal" inputTerminalId="75c6eb2c-d0b1-4fd3-9b70-f2f255e6c5d7/stateTerminal"/>
        <con1:connection outputTerminalId="75c6eb2c-d0b1-4fd3-9b70-f2f255e6c5d7/triggerTerminal" inputTerminalId="36887478-9dc5-48ff-a0d9-6740bc5cafc7/triggerTerminal"/>
        <con1:connection outputTerminalId="36887478-9dc5-48ff-a0d9-6740bc5cafc7/runningTerminal" inputTerminalId="75c6eb2c-d0b1-4fd3-9b70-f2f255e6c5d7/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="333635d2-b157-43c7-96dd-86e6638d3cd1" scenarioId="105e607e-51cd-43f9-a257-f1683e0f9f00" name="New Scenario" id="0b75afb2-f255-4df9-813a-c7cea1c03fe9">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="892834e8-50e0-4e7d-a63c-136c35a76406">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">27af59cd-dd25-4beb-9ec2-b03dd1e566f0</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">ac156cfe-db09-4b40-b821-74e4718aa9a3</con:setting>
    </con:settings>
    <con1:loadui-project id="1be2ea79-d01c-471e-b354-397ae85bf3ca" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="c8bef014-df04-40f8-bcc3-430fdf3ceee7">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="3d71ff5e-d62b-41cf-8c51-6080d9b28639" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="e3982272-d373-4045-bed0-59208723d5c6" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_InValidTxnID_InValidOTP_VID" id="2d5e0b30-6f04-4a78-b526-c4fafc0bb360" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">27af59cd-dd25-4beb-9ec2-b03dd1e566f0</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="3d71ff5e-d62b-41cf-8c51-6080d9b28639/outgoingTerminal" inputTerminalId="e3982272-d373-4045-bed0-59208723d5c6/stateTerminal"/>
        <con1:connection outputTerminalId="e3982272-d373-4045-bed0-59208723d5c6/triggerTerminal" inputTerminalId="2d5e0b30-6f04-4a78-b526-c4fafc0bb360/triggerTerminal"/>
        <con1:connection outputTerminalId="2d5e0b30-6f04-4a78-b526-c4fafc0bb360/runningTerminal" inputTerminalId="e3982272-d373-4045-bed0-59208723d5c6/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="1be2ea79-d01c-471e-b354-397ae85bf3ca" scenarioId="c8bef014-df04-40f8-bcc3-430fdf3ceee7" name="New Scenario" id="fec01c42-efee-4cd7-9b45-aa2b0d1fb2a1">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="b7e7cd8e-287a-4e9a-abd3-318ca79c0d19">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">0d000297-49d0-4efa-9687-3611e8f4af56</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">bc34a7b0-a0a0-44dd-9735-6d0a0d7d1211</con:setting>
    </con:settings>
    <con1:loadui-project id="864bcde1-b22c-4954-b4ea-98bae779e6dd" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="17498eb4-da29-43b2-b591-41b6fa901519">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="a343eaf0-04b8-467e-9952-c0fbaee21604" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="cd44b3a3-41b2-4636-a083-39a6f3d6f404" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_Smoke_InvalidUIN" id="7d5e766a-ac86-4bbe-a2f9-b4fea09158a4" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">0d000297-49d0-4efa-9687-3611e8f4af56</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="a343eaf0-04b8-467e-9952-c0fbaee21604/outgoingTerminal" inputTerminalId="cd44b3a3-41b2-4636-a083-39a6f3d6f404/stateTerminal"/>
        <con1:connection outputTerminalId="cd44b3a3-41b2-4636-a083-39a6f3d6f404/triggerTerminal" inputTerminalId="7d5e766a-ac86-4bbe-a2f9-b4fea09158a4/triggerTerminal"/>
        <con1:connection outputTerminalId="7d5e766a-ac86-4bbe-a2f9-b4fea09158a4/runningTerminal" inputTerminalId="cd44b3a3-41b2-4636-a083-39a6f3d6f404/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="864bcde1-b22c-4954-b4ea-98bae779e6dd" scenarioId="17498eb4-da29-43b2-b591-41b6fa901519" name="New Scenario" id="07912c2c-9d4c-4479-8d8e-e0254597c0b7">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="7c811120-88ac-4a84-8ea6-96d08dc558df">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">e3212635-0e86-4a16-9679-b85f7bf83082</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">564d4fd4-90b0-4698-a17a-3c4432c36feb</con:setting>
    </con:settings>
    <con1:loadui-project id="e58c6762-c57b-4599-a498-9e375d686d52" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="04b55b8c-56f2-4f57-8b15-f5c733ec379a">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="0ee73ee7-9cea-426f-8111-8337ca12c00b" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="aa55b38c-4c51-45d3-8c9c-55b1f9962701" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_Smoke_InvalidVID" id="900ca489-b77f-4634-9f72-cc99fe8197e7" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">e3212635-0e86-4a16-9679-b85f7bf83082</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="0ee73ee7-9cea-426f-8111-8337ca12c00b/outgoingTerminal" inputTerminalId="aa55b38c-4c51-45d3-8c9c-55b1f9962701/stateTerminal"/>
        <con1:connection outputTerminalId="aa55b38c-4c51-45d3-8c9c-55b1f9962701/triggerTerminal" inputTerminalId="900ca489-b77f-4634-9f72-cc99fe8197e7/triggerTerminal"/>
        <con1:connection outputTerminalId="900ca489-b77f-4634-9f72-cc99fe8197e7/runningTerminal" inputTerminalId="aa55b38c-4c51-45d3-8c9c-55b1f9962701/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="e58c6762-c57b-4599-a498-9e375d686d52" scenarioId="04b55b8c-56f2-4f57-8b15-f5c733ec379a" name="New Scenario" id="6e883a28-70bc-4162-b89e-ad69493b8286">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="b54d6144-dfe7-4bdb-ac14-7cd8d01a25ac">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">ad268698-a35d-466d-b43e-c439d92e8459</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">4762fe13-e640-4c43-963c-dbdb305853a0</con:setting>
    </con:settings>
    <con1:loadui-project id="47efe560-d715-4b07-9cf3-06ce08698187" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="164f3d3d-c56a-4f13-8340-6b262937892b">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="c595d0ba-0293-4667-86af-1ae02c8da45e" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="beb96633-b263-4773-bb2a-d93bacd26e9f" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:OTP_Authenticate_Smoke_Invalid_ver_UID" id="b2d7dff0-a3e9-471b-99f8-26b30d3282e7" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">ad268698-a35d-466d-b43e-c439d92e8459</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="c595d0ba-0293-4667-86af-1ae02c8da45e/outgoingTerminal" inputTerminalId="beb96633-b263-4773-bb2a-d93bacd26e9f/stateTerminal"/>
        <con1:connection outputTerminalId="beb96633-b263-4773-bb2a-d93bacd26e9f/triggerTerminal" inputTerminalId="b2d7dff0-a3e9-471b-99f8-26b30d3282e7/triggerTerminal"/>
        <con1:connection outputTerminalId="b2d7dff0-a3e9-471b-99f8-26b30d3282e7/runningTerminal" inputTerminalId="beb96633-b263-4773-bb2a-d93bacd26e9f/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="47efe560-d715-4b07-9cf3-06ce08698187" scenarioId="164f3d3d-c56a-4f13-8340-6b262937892b" name="New Scenario" id="2d26966f-d07b-4940-a6b7-551e4db280e8">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:loadUiTest name="LoadTest 1" id="4ddc6820-5c52-4573-8bf0-0ed96175920c">
    <con:settings>
      <con:setting id="soapUIObjectSourceId">74519756-8105-4643-b1df-f51cb14b35e6</con:setting>
      <con:setting id="convertedFromLoadTestModelItemId">311322b3-7180-4d70-bd30-569df63899cb</con:setting>
    </con:settings>
    <con1:loadui-project id="71d7374a-f6cb-4283-839e-675b8229a294" label="LoadTest 1" xmlns:con1="http://eviware.com/loadui/config">
      <con1:properties>
        <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
        <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property>
        <con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/>
        <con1:property propagates="true" key="Temporary project" type="java.lang.String"/>
        <con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">10</con1:property>
        <con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">PerScenario</con1:property>
        <con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/>
      </con1:properties>
      <con1:attributes>
        <con1:property key="limits">Time=60;</con1:property>
      </con1:attributes>
      <con1:addons/>
      <con1:scene label="New Scenario" id="f91e7cc0-e0a7-427a-a5a7-872f101719b7">
        <con1:properties>
          <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
          <con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property>
          <con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property>
          <con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property>
          <con1:property propagates="true" key="ModelItem.samplerOutputLevel" type="com.eviware.loadui.api.component.SoapUISamplerOutputLevel">TestCaseAndAllTestSteps</con1:property>
        </con1:properties>
        <con1:attributes>
          <con1:property key="limits">Time=60;</con1:property>
        </con1:attributes>
        <con1:addons/>
        <con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="1952e46c-23b5-4d52-88c1-a0bb63ca79b7" category="Scheduler">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property>
            <con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property>
            <con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property>
            <con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="49831e33-1c68-4ae8-a850-770ca53f688f" category="Generators">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property>
            <con1:property propagates="true" key="load" type="java.lang.Long">16</con1:property>
            <con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OTP_Authentication_MOS_41:Copy of OTP_Authenticate_Smoke_Invalid_ver_VID" id="ffed0ebd-2ebc-450d-9b26-5f0a3e0093ab" category="Runners">
          <con1:properties>
            <con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/>
            <con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property>
            <con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property>
            <con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/>
            <con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property>
            <con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">74519756-8105-4643-b1df-f51cb14b35e6</con1:property>
            <con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property>
            <con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property>
            <con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property>
            <con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property>
          </con1:properties>
          <con1:attributes>
            <con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property>
          </con1:attributes>
          <con1:addons/>
        </con1:component>
        <con1:connection outputTerminalId="1952e46c-23b5-4d52-88c1-a0bb63ca79b7/outgoingTerminal" inputTerminalId="49831e33-1c68-4ae8-a850-770ca53f688f/stateTerminal"/>
        <con1:connection outputTerminalId="49831e33-1c68-4ae8-a850-770ca53f688f/triggerTerminal" inputTerminalId="ffed0ebd-2ebc-450d-9b26-5f0a3e0093ab/triggerTerminal"/>
        <con1:connection outputTerminalId="ffed0ebd-2ebc-450d-9b26-5f0a3e0093ab/runningTerminal" inputTerminalId="49831e33-1c68-4ae8-a850-770ca53f688f/Sample Count"/>
      </con1:scene>
      <con1:statistics>
        <con1:page title="DefaultLoadUIStatisticPage"/>
      </con1:statistics>
    </con1:loadui-project>
    <con:loadUITestScenario projectId="71d7374a-f6cb-4283-839e-675b8229a294" scenarioId="f91e7cc0-e0a7-427a-a5a7-872f101719b7" name="New Scenario" id="d65a6e9d-379d-470b-a101-76a0493feeac">
      <con:settings/>
    </con:loadUITestScenario>
    <con:setupScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:teardownScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <con:reportParameters/>
  </con:loadUiTest>
  <con:tags/>
</con:soapui-project>